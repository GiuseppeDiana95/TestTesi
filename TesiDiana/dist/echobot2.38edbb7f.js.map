{"version":3,"sources":["../node_modules/strophe.js/node_modules/ws/browser.js","../node_modules/@xmldom/xmldom/lib/conventions.js","../node_modules/@xmldom/xmldom/lib/dom.js","../node_modules/@xmldom/xmldom/lib/entities.js","../node_modules/@xmldom/xmldom/lib/sax.js","../node_modules/@xmldom/xmldom/lib/dom-parser.js","../node_modules/@xmldom/xmldom/lib/index.js","../node_modules/strophe.js/dist/strophe.umd.js","strophe.muc.js","echobot2.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["module","exports","Error","_typeof","o","Symbol","iterator","constructor","prototype","find","list","predicate","ac","undefined","Array","call","i","length","Object","hasOwnProperty","item","freeze","object","oc","assign","target","source","TypeError","key","MIME_TYPE","HTML","isHTML","value","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","uri","SVG","XML","XMLNS","conventions","require","notEmptyString","input","splitOnASCIIWhitespace","split","filter","orderedSetReducer","current","element","toOrderedSet","keys","reduce","arrayIncludes","indexOf","copy","src","dest","p","_extends","Class","Super","pt","t","console","error","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","code","message","captureStackTrace","NodeList","index","toString","nodeFilter","buf","serializeToString","join","LiveNodeList","node","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","el","newAttr","oldAttr","ownerElement","doc","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","attr","lastIndex","tagName","getNamedItem","nodeName","setNamedItem","_ownerElement","setNamedItemNS","getNamedItemNS","namespaceURI","localName","removeNamedItem","removeNamedItemNS","DOMImplementation","hasFeature","feature","version","createDocument","qualifiedName","doctype","Document","implementation","childNodes","appendChild","root","createElementNS","createDocumentType","publicId","systemId","DocumentType","name","Node","firstChild","lastChild","previousSibling","nextSibling","attributes","parentNode","nodeValue","prefix","insertBefore","newChild","refChild","_insertBefore","replaceChild","oldChild","assertPreReplacementValidityInDocument","removeChild","_removeChild","hasChildNodes","cloneNode","deep","normalize","child","next","nodeType","appendData","data","isSupported","hasAttributes","lookupPrefix","map","_nsMap","n","lookupNamespaceURI","isDefaultNamespace","_xmlEncoder","c","charCodeAt","_visitNode","callback","ns","remove","_onUpdateChild","cs","previous","hasValidParentNodeType","hasInsertableNodeType","isElementNode","isTextNode","isDocTypeNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","parent","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","hasDoctypeChildThatIsNotChild","_inDocumentAssertion","cp","newFirst","newLast","pre","_appendSingleChild","documentElement","importNode","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","push","createElement","Element","attrs","createDocumentFragment","DocumentFragment","createTextNode","Text","createComment","Comment","createCDATASection","CDATASection","createProcessingInstruction","ProcessingInstruction","createAttribute","Attr","specified","createEntityReference","EntityReference","pl","createAttributeNS","hasAttribute","getAttributeNode","setAttribute","setAttributeNode","removeAttribute","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","CharacterData","substringData","offset","count","substring","text","insertData","replaceData","deleteData","start","end","splitText","newText","newNode","Notation","Entity","XMLSerializer","isHtml","nodeSerializeToString","refNode","visibleNamespaces","namespace","needNamespaceDefine","addSerializedAttribute","replace","len","prefixedNodeName","defaultNS","ai","nsi","test","slice","pubid","sysid","sub","internalSubset","node2","v","attrs2","defineProperty","get","$$length","getTextContent","set","String","e","XML_ENTITIES","amp","apos","gt","lt","quot","HTML_ENTITIES","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","entityMap","nameStartChar","nameChar","RegExp","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","ParseError","locator","XMLReader","parse","defaultNSMap","domBuilder","startDocument","_copy","errorHandler","endDocument","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","fromCharCode","entityReplacer","a","k","charAt","parseInt","substr","appendText","xt","position","characters","m","lineEnd","linePattern","exec","lineStart","lineNumber","columnNumber","parseStack","currentNSMap","closeMap","tagStart","match","currentElement","config","pop","localNSMap","endMatch","endIgnoreCaseMach","toLowerCase","endElement","endPrefixMapping","fatalError","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","warning","locator2","copyLocator","appendElement","parseHtmlSpecialContent","Math","max","f","addAttribute","qname","startIndex","attributeNames","addValue","attrName","s","setTagName","qName","nsp","nsPrefix","startPrefixMapping","startElement","elStartEnd","elEndStart","pos","lastIndexOf","comment","startCDATA","endCDATA","matchs","lastMatch","startDTD","endDTD","processingInstruction","getLocalName","getLocator","getQName","getURI","getValue","dom","entities","sax","normalizeLineEndings","DOMParser","options","parseFromString","mimeType","DOMHandler","xmlns","setDocumentLocator","buildErrorHandler","xml","errorImpl","isCallback","Function","build","fn","msg","_locator","cdata","documentURI","ins","ignorableWhitespace","ch","chars","_toString","apply","arguments","charNode","skippedEntity","comm","impl","dt","warn","l","java","lang","hander","__DOMHandler","_regeneratorRuntime","r","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","prev","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","_asyncToGenerator","self","args","err","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","hint","prim","toPrimitive","res","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","from","iter","isArray","arr2","global","factory","amd","globalThis","strophe","global$1","window","getWebSocketImplementation","WebSocketImplementation","WebSocket","getDOMParserImplementation","DOMParserImplementation","_getIEXmlDom","docStrings","ActiveXObject","getDummyXMLDOMDocument","document","documentMode","shims","NS","HTTPBIND","BOSH","CLIENT","AUTH","ROSTER","PROFILE","DISCO_INFO","DISCO_ITEMS","MUC","SASL","STREAM","FRAMING","BIND","SESSION","VERSION","STANZAS","XHTML_IM","XHTML","tags","css","Status","ERROR","CONNECTING","CONNFAIL","AUTHENTICATING","AUTHFAIL","CONNECTED","DISCONNECTED","DISCONNECTING","ATTACHED","REDIRECT","CONNTIMEOUT","BINDREQUIRED","ATTACHFAIL","ErrorCondition","BAD_FORMAT","CONFLICT","MISSING_JID_NODE","NO_AUTH_MECH","UNKNOWN_REASON","LogLevel","DEBUG","INFO","WARN","FATAL","ElementType","NORMAL","TEXT","CDATA","FRAGMENT","utf16to8","str","out","xorArrayBuffers","x","xIntArray","Uint8Array","yIntArray","zIntArray","byteLength","buffer","arrayBufToBase64","binary","bytes","btoa","base64ToArrayBuf","_Uint8Array$from","atob","stringToArrayBuf","TextEncoder","encode","addCookies","cookies","Strophe","log","cookieName","expires","domain","path","cookieObj","isObj","cookieValue","escape","unescape","cookie","_xmlGenerator","xmlGenerator","xmlTextNode","xmlHtmlNode","html","parser","loadXML","xmlElement","sort","validTag","tag","validAttribute","attribute","validCSS","style","createHtml","elem","cssText","cssAttrs","j","cssName","cssValue","copyElement","xmlescape","xmlunescape","serialize","tree","names","result","concat","forEachChild","elemName","func","childNode","isTagEqual","getText","_elem$childNodes","_ref","_elem$childNodes2","escapeNode","unescapeNode","getNodeFromJid","jid","getDomainFromJid","bare","getBareJidFromJid","parts","splice","getResourceFromJid","utils","utils$1","$build","Builder","$msg","$iq","$pres","nodeTree","up","moreattrs","cnode","impNode","xmlGen","newElem","fragment","innerHTML","xhtml","Handler","handler","matchBare","matchBareFromJid","user","getNamespace","elNamespace","ignoreNamespaceFragment","namespaceMatch","_this","nsMatch","isMatch","elem_type","run","_handleError","TimedHandler","period","lastCalled","Date","getTime","atob$2","output","accumulatedBits","atobLookup","keystr$1","chr","atob_1","btoa$2","groupsOfSix","btoaLookup","keystr","btoa_1","atob$1","btoa$1","abab","Connection","service","_this2","setProtocol","features","_sasl_data","do_bind","do_session","mechanisms","timedHandlers","handlers","removeTimeds","removeHandlers","addTimeds","addHandlers","protocolErrorHandlers","_idleTimeout","_disconnectTimeout","authenticated","connected","disconnecting","do_authentication","paused","restored","_data","_uniqueId","_sasl_success_handler","_sasl_failure_handler","_sasl_challenge_handler","maxRetries","setTimeout","_onIdle","registerSASLMechanisms","iqFallbackHandler","iq","send","_connectionPlugins","F","init","proto","protocol","worker","_proto","WorkerWebsocket","Websocket","Bosh","_reset","_requests","pause","resume","getUniqueId","suffix","uuid","random","addProtocolErrorHandler","status_code","connect","pass","wait","hold","route","authcid","disconnection_timeout","authzid","scram_keys","connect_callback","_changeConnectStatus","_connect","attach","sid","rid","wind","_attach","restore","_sessionCachingSupported","_restore","JSON","sessionStorage","setItem","removeItem","xmlInput","xmlOutput","rawInput","rawOutput","nextValidRid","_queueData","_send","flush","clearTimeout","sendPresence","errback","timeout","_this3","timeoutHandler","addHandler","stanza","deleteTimedHandler","addTimedHandler","deleteHandler","sendIQ","_this4","iqtype","_sendRestart","_this5","thand","handRef","hand","_this6","SASLAnonymous","SASLExternal","SASLOAuthBearer","SASLXOAuth2","SASLPlain","SASLSHA1","SASLSHA256","SASLSHA384","SASLSHA512","registerSASLMechanism","Mechanism","mechanism","mechname","disconnect","reason","pres","_addSysTimedHandler","_onDisconnectTimeout","bind","_disconnect","_abortAllRequests","_doDisconnect","status","condition","plugin","statusChanged","debug","_dataRecv","req","raw","_this7","_reqToData","strip","_emptyQueue","cond","conflict","UNKOWN_REASON","_connect_cb","_callback","_this8","bodyWrap","conncheck","hasFeatures","_no_auth_received","matched","textContent","authenticate","sortMechanismsByPriority","higher","priority","swap","_attemptSASLAuth","_attemptLegacyAuth","mechanism_found","_addSysHandler","_sasl_success_cb","_sasl_failure_cb","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","isClientFirst","response","clientChallenge","_sasl_challenge_cb2","_callee","challenge","_callee$","_context","onChallenge","_x","_onLegacyAuthIQResult","_auth2_cb","_this9","serverSignature","success","attribMatch","onSuccess","streamfeature_handlers","wrapper","_onStreamFeaturesAfterSASL","explicitResourceBinding","_onResourceBindResultIQ","resource","jidNode","_establishSession","_onSessionResultIQ","onFailure","_this10","now","newList","since","SASLMechanism","connection","_connection","_SASLMechanism","_inherits","_super","_createSuper","_SASLMechanism2","_super2","_SASLMechanism3","_super3","auth_str","_SASLMechanism4","_super4","scramClientProof","_x2","_x3","_x4","_scramClientProof","_callee7","authMessage","clientKey","hashName","storedKey","clientSignature","_callee7$","_context7","t0","crypto","subtle","digest","t1","t2","t3","importKey","sign","scramParseChallenge","nonce","salt","scramDeriveKeys","_x5","_x6","_x7","_x8","_x9","_scramDeriveKeys","_callee8","password","hashBits","saltedPasswordBits","saltedPassword","_callee8$","_context8","deriveBits","t4","t5","scramServerSign","_x10","_x11","_x12","_scramServerSign","_callee9","sk","serverKey","_callee9$","_context9","generate_cnonce","getRandomValues","scram","scramResponse","_callee2","_connection$pass","_connection$pass2","_connection$pass3","cnonce","challengeData","clientFirstMessageBare","serverFirstMessage","clientFinalMessageBare","clientProof","_callee2$","_context2","ck","test_cnonce","client_first_message_bare","_SASLMechanism5","_super5","_onChallenge","_callee3","_callee3$","_context3","_x13","_x14","_SASLMechanism6","_super6","_onChallenge2","_callee4","_callee4$","_context4","_x15","_x16","_SASLMechanism7","_super7","_onChallenge3","_callee5","_callee5$","_context5","_x17","_x18","_SASLMechanism8","_super8","_onChallenge4","_callee6","_callee6$","_context6","_x19","_x20","_SASLMechanism9","_super9","_objectSpread","addNamespace","stack","fatal","sourceURL","line","fileName","level","_console","_requestId","addConnectionPlugin","ptype","core","Request","sends","xmlData","origFunc","date","NaN","abort","dead","age","timeDead","xhr","_newXHR","getResponse","responseXML","responseText","parserError","querySelector","XMLHttpRequest","overrideMimeType","onreadystatechange","_conn","floor","errors","inactivity","lastResponseHeaders","_buildBody","keepalive","_cacheSession","body","_onRequestStateChange","_throttledRequestHandler","session","getItem","stringify","typ","_sendTerminate","_callProtocolErrorHandlers","reqStatus","_getRequestStatus","err_callback","HTTP","_hitError","time_elapsed","SECONDARY_TIMEOUT","TIMEOUT","readyState","getAllResponseHeaders","reqIs0","reqIs1","valid_request","too_many_retries","_removeRequest","_restartRequest","_processRequest","_this11","primary_timeout","secondary_timeout","server_error","content_type","contentType","open","sync","setRequestHeader","withCredentials","e2","sendFunc","customHeaders","headers","header","backoff","min","pow","_this12","abs","def","new_service","location","host","pathname","_buildStream","_checkStreamError","connectstatus","errorString","_this13","_closeSocket","socket","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_onInitialMessage","_handleStreamStart","ver","streamStart","parsedMessage","see_uri","isSecureRedirect","_replaceMessageHandler","string","_streamWrap","_this14","_onMessage","_this15","CLOSED","close","closeString","rawStanza","search","startString","lmap","_Strophe$Websocket","_super10","_this16","SharedWorker","_this17","port","postMessage","_this18","_messageHandler","ev","_onWorkerMessage","_this19","_attachCallback","_this20","method_name","strophe_js","Occupant","RoomConfig","XmppRoom","hasProp","me","rooms","roomNames","conn","_muc_handler","room","nick","msg_handler_cb","pres_handler_cb","roster_cb","history_attrs","extended_presence","room_nick","test_append_nick","to","roomname","xquery","_message_handlers","_presence_handlers","leave","handler_cb","exit_msg","presence","presenceid","html_message","msgid","groupchat","invite","receiver","invitation","MUC_USER","multipleInvites","receivers","directInvite","queryOccupants","success_cb","error_cb","configure","MUC_OWNER","cancelConfigure","saveConfiguration","conf","Form","toXML","createInstantRoom","roomiq","createConfiguredRoom","setTopic","topic","_modifyPrivilege","MUC_ADMIN","modifyRole","role","kick","voice","mute","op","deop","modifyAffiliation","affiliation","ban","member","revoke","owner","admin","changeNick","setStatus","show","registrationRequest","handle_cb","MUC_REGISTER","$field","$fields","field","fields","required","optional","label","submitRegistrationForm","val","listRooms","server","client","nick1","password1","_roomRosterHandler","_addOccupant","roster","_roster_handlers","_handler_ids","muc","handler_type","removeHandler","occ","newnick","ref","_parsePresence","update","c2","len1","ref1","ref2","states","errorcode","identity","len2","query","identities","room1","_stropheMuc","addEventListener","waitForElement","bot_connect","onConnect","room_msg_handler","room_pres_handler","b","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","isParcelRequire","hostname","ws","event","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","generated","js","clear","hmrApply","hmrAcceptRun","reload","removeErrorOverlay","overlay","createErrorOverlay","stackTrace","innerText","getParents","modules","parents","dep","deps","cached","cache","some","cb"],"mappings":"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EACrB,IAAMO,MAAM,GAAGF,MAAM;EACrB,IAAIG,IAAI,GAAG;IACTtH,IAAI,EAAEoH,MAAM;IACZvH,IAAI,EAAEwH;EACR,CAAC;;EAED;;EAEA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EA/IY,IAiJME,UAAU;IACd,SAAAA,WAAYC,OAAO,EAAEjW,OAAO,EAAE;MAAA,IAAAkW,MAAA;MAAA5O,eAAA,OAAA0O,UAAA;MAC5B;MACA,IAAI,CAACC,OAAO,GAAGA,OAAO;MACtB;MACA,IAAI,CAACjW,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;MAC5B,IAAI,CAACmW,WAAW,CAAC,CAAC;;MAElB;MACA,IAAI,CAAC9D,GAAG,GAAG,EAAE;MA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;AACA;AACA;AACA;AACA;AACA;AACA;MACc;IAAA;MAAA1S,GAAA;MAAAI,KAAA,EACA,SAAAojC,SAASrK,IAAI,EAAE;QACb;MACF;;MAEA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACc;IAAA;MAAAn5B,GAAA;MAAAI,KAAA,EACA,SAAAqjC,UAAUtK,IAAI,EAAE;QACd;MACF;;MAEA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACc;IAAA;MAAAn5B,GAAA;MAAAI,KAAA,EACA,SAAAsjC,SAAS15B,IAAI,EAAE;QACb;MACF;;MAEA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACc;IAAA;MAAAhK,GAAA;MAAAI,KAAA,EACA,SAAAujC,UAAU35B,IAAI,EAAE;QACd;MACF;;MAEA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACc;IAAA;MAAAhK,GAAA;MAAAI,KAAA,EACA,SAAAwjC,aAAad,GAAG,EAAE;QAChB;MACF;;MAEA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAXc;MAAA9iC,GAAA;MAAAI,KAAA,EAYA,SAAAugC,KAAKxH,IAAI,EAAE;QACT,IAAIA,IAAI,KAAK,IAAI,EAAE;UACjB;QACF;QACA,IAAI,OAAOA,IAAI,CAACR,IAAI,KAAK,UAAU,EAAE;UACnC,KAAK,IAAIv5B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+5B,IAAI,CAAC95B,MAAM,EAAED,CAAC,EAAE,EAAE;YACpC,IAAI,CAACykC,UAAU,CAAC1K,IAAI,CAAC/5B,CAAC,CAAC,CAAC;UAC1B;QACF,CAAC,MAAM,IAAI,OAAO+5B,IAAI,CAACU,IAAI,KAAK,UAAU,EAAE;UAC1C,IAAI,CAACgK,UAAU,CAAC1K,IAAI,CAACU,IAAI,CAAC,CAAC,CAAC;QAC9B,CAAC,MAAM;UACL,IAAI,CAACgK,UAAU,CAAC1K,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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IArBc;MAAAvgC,GAAA;MAAAI,KAAA,EAsBA,SAAAqkC,gBAAgBpH,MAAM,EAAEf,OAAO,EAAE;QAC/B,IAAM0I,KAAK,GAAG,IAAIzN,OAAO,CAAC6F,YAAY,CAACC,MAAM,EAAEf,OAAO,CAAC;QACvD,IAAI,CAAC+C,SAAS,CAAC5xB,IAAI,CAACu3B,KAAK,CAAC;QAC1B,OAAOA,KAAK;MACd;;MAEA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IATc;MAAAhlC,GAAA;MAAAI,KAAA,EAUA,SAAAokC,mBAAmBS,OAAO,EAAE;QAC1B;QACA;QACA,IAAI,CAAC9F,YAAY,CAAC1xB,IAAI,CAACw3B,OAAO,CAAC;MACjC;;MAEA;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IA/Dc;MAAAjlC,GAAA;MAAAI,KAAA,EAgEA,SAAAkkC,WAAWhI,OAAO,EAAExxB,EAAE,EAAEzC,IAAI,EAAEqjB,IAAI,EAAE5e,EAAE,EAAEwkB,IAAI,EAAE9I,OAAO,EAAE;QACrD,IAAM0c,IAAI,GAAG,IAAI7I,OAAO,CAACC,OAAO,EAAExxB,EAAE,EAAEzC,IAAI,EAAEqjB,IAAI,EAAE5e,EAAE,EAAEwkB,IAAI,EAAE9I,OAAO,CAAC;QACpE,IAAI,CAAC8W,WAAW,CAAC7xB,IAAI,CAACy3B,IAAI,CAAC;QAC3B,OAAOA,IAAI;MACb;;MAEA;AACd;AACA;AACA;AACA;AACA;AACA;AACA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","file":"echobot2.38edbb7f.js","sourceRoot":"../parcel","sourcesContent":["'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn this[index] || null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif(list._inc != inc){\n\t\tvar ls = list._refresh(list._node);\n\t\t//console.log(ls.length)\n\t\t__set__(list,'length',ls.length);\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i];\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.target = target;\n\t\tnode.nodeValue= node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","var freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({amp:'&', apos:\"'\", gt:'>', lt:'<', quot:'\"'})\n\n/**\n * A map of currently 241 entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n       lt: '<',\n       gt: '>',\n       amp: '&',\n       quot: '\"',\n       apos: \"'\",\n       Agrave: \"À\",\n       Aacute: \"Á\",\n       Acirc: \"Â\",\n       Atilde: \"Ã\",\n       Auml: \"Ä\",\n       Aring: \"Å\",\n       AElig: \"Æ\",\n       Ccedil: \"Ç\",\n       Egrave: \"È\",\n       Eacute: \"É\",\n       Ecirc: \"Ê\",\n       Euml: \"Ë\",\n       Igrave: \"Ì\",\n       Iacute: \"Í\",\n       Icirc: \"Î\",\n       Iuml: \"Ï\",\n       ETH: \"Ð\",\n       Ntilde: \"Ñ\",\n       Ograve: \"Ò\",\n       Oacute: \"Ó\",\n       Ocirc: \"Ô\",\n       Otilde: \"Õ\",\n       Ouml: \"Ö\",\n       Oslash: \"Ø\",\n       Ugrave: \"Ù\",\n       Uacute: \"Ú\",\n       Ucirc: \"Û\",\n       Uuml: \"Ü\",\n       Yacute: \"Ý\",\n       THORN: \"Þ\",\n       szlig: \"ß\",\n       agrave: \"à\",\n       aacute: \"á\",\n       acirc: \"â\",\n       atilde: \"ã\",\n       auml: \"ä\",\n       aring: \"å\",\n       aelig: \"æ\",\n       ccedil: \"ç\",\n       egrave: \"è\",\n       eacute: \"é\",\n       ecirc: \"ê\",\n       euml: \"ë\",\n       igrave: \"ì\",\n       iacute: \"í\",\n       icirc: \"î\",\n       iuml: \"ï\",\n       eth: \"ð\",\n       ntilde: \"ñ\",\n       ograve: \"ò\",\n       oacute: \"ó\",\n       ocirc: \"ô\",\n       otilde: \"õ\",\n       ouml: \"ö\",\n       oslash: \"ø\",\n       ugrave: \"ù\",\n       uacute: \"ú\",\n       ucirc: \"û\",\n       uuml: \"ü\",\n       yacute: \"ý\",\n       thorn: \"þ\",\n       yuml: \"ÿ\",\n       nbsp: \"\\u00a0\",\n       iexcl: \"¡\",\n       cent: \"¢\",\n       pound: \"£\",\n       curren: \"¤\",\n       yen: \"¥\",\n       brvbar: \"¦\",\n       sect: \"§\",\n       uml: \"¨\",\n       copy: \"©\",\n       ordf: \"ª\",\n       laquo: \"«\",\n       not: \"¬\",\n       shy: \"­­\",\n       reg: \"®\",\n       macr: \"¯\",\n       deg: \"°\",\n       plusmn: \"±\",\n       sup2: \"²\",\n       sup3: \"³\",\n       acute: \"´\",\n       micro: \"µ\",\n       para: \"¶\",\n       middot: \"·\",\n       cedil: \"¸\",\n       sup1: \"¹\",\n       ordm: \"º\",\n       raquo: \"»\",\n       frac14: \"¼\",\n       frac12: \"½\",\n       frac34: \"¾\",\n       iquest: \"¿\",\n       times: \"×\",\n       divide: \"÷\",\n       forall: \"∀\",\n       part: \"∂\",\n       exist: \"∃\",\n       empty: \"∅\",\n       nabla: \"∇\",\n       isin: \"∈\",\n       notin: \"∉\",\n       ni: \"∋\",\n       prod: \"∏\",\n       sum: \"∑\",\n       minus: \"−\",\n       lowast: \"∗\",\n       radic: \"√\",\n       prop: \"∝\",\n       infin: \"∞\",\n       ang: \"∠\",\n       and: \"∧\",\n       or: \"∨\",\n       cap: \"∩\",\n       cup: \"∪\",\n       'int': \"∫\",\n       there4: \"∴\",\n       sim: \"∼\",\n       cong: \"≅\",\n       asymp: \"≈\",\n       ne: \"≠\",\n       equiv: \"≡\",\n       le: \"≤\",\n       ge: \"≥\",\n       sub: \"⊂\",\n       sup: \"⊃\",\n       nsub: \"⊄\",\n       sube: \"⊆\",\n       supe: \"⊇\",\n       oplus: \"⊕\",\n       otimes: \"⊗\",\n       perp: \"⊥\",\n       sdot: \"⋅\",\n       Alpha: \"Α\",\n       Beta: \"Β\",\n       Gamma: \"Γ\",\n       Delta: \"Δ\",\n       Epsilon: \"Ε\",\n       Zeta: \"Ζ\",\n       Eta: \"Η\",\n       Theta: \"Θ\",\n       Iota: \"Ι\",\n       Kappa: \"Κ\",\n       Lambda: \"Λ\",\n       Mu: \"Μ\",\n       Nu: \"Ν\",\n       Xi: \"Ξ\",\n       Omicron: \"Ο\",\n       Pi: \"Π\",\n       Rho: \"Ρ\",\n       Sigma: \"Σ\",\n       Tau: \"Τ\",\n       Upsilon: \"Υ\",\n       Phi: \"Φ\",\n       Chi: \"Χ\",\n       Psi: \"Ψ\",\n       Omega: \"Ω\",\n       alpha: \"α\",\n       beta: \"β\",\n       gamma: \"γ\",\n       delta: \"δ\",\n       epsilon: \"ε\",\n       zeta: \"ζ\",\n       eta: \"η\",\n       theta: \"θ\",\n       iota: \"ι\",\n       kappa: \"κ\",\n       lambda: \"λ\",\n       mu: \"μ\",\n       nu: \"ν\",\n       xi: \"ξ\",\n       omicron: \"ο\",\n       pi: \"π\",\n       rho: \"ρ\",\n       sigmaf: \"ς\",\n       sigma: \"σ\",\n       tau: \"τ\",\n       upsilon: \"υ\",\n       phi: \"φ\",\n       chi: \"χ\",\n       psi: \"ψ\",\n       omega: \"ω\",\n       thetasym: \"ϑ\",\n       upsih: \"ϒ\",\n       piv: \"ϖ\",\n       OElig: \"Œ\",\n       oelig: \"œ\",\n       Scaron: \"Š\",\n       scaron: \"š\",\n       Yuml: \"Ÿ\",\n       fnof: \"ƒ\",\n       circ: \"ˆ\",\n       tilde: \"˜\",\n       ensp: \" \",\n       emsp: \" \",\n       thinsp: \" \",\n       zwnj: \"‌\",\n       zwj: \"‍\",\n       lrm: \"‎\",\n       rlm: \"‏\",\n       ndash: \"–\",\n       mdash: \"—\",\n       lsquo: \"‘\",\n       rsquo: \"’\",\n       sbquo: \"‚\",\n       ldquo: \"“\",\n       rdquo: \"”\",\n       bdquo: \"„\",\n       dagger: \"†\",\n       Dagger: \"‡\",\n       bull: \"•\",\n       hellip: \"…\",\n       permil: \"‰\",\n       prime: \"′\",\n       Prime: \"″\",\n       lsaquo: \"‹\",\n       rsaquo: \"›\",\n       oline: \"‾\",\n       euro: \"€\",\n       trade: \"™\",\n       larr: \"←\",\n       uarr: \"↑\",\n       rarr: \"→\",\n       darr: \"↓\",\n       harr: \"↔\",\n       crarr: \"↵\",\n       lceil: \"⌈\",\n       rceil: \"⌉\",\n       lfloor: \"⌊\",\n       rfloor: \"⌋\",\n       loz: \"◊\",\n       spades: \"♠\",\n       clubs: \"♣\",\n       hearts: \"♥\",\n       diams: \"♦\"\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","(function (global, factory) {\n            typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n            typeof define === 'function' && define.amd ? define(['exports'], factory) :\n            (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.strophe = {}));\n})(this, (function (exports) { 'use strict';\n\n            var global$1 = typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {};\n\n            /*\n             * This module provides uniform\n             * Shims APIs and globals that are not present in all JS environments,\n             * the most common example for Strophe being browser APIs like WebSocket\n             * and DOM that don't exist under nodejs.\n             *\n             * Usually these will be supplied in nodejs by conditionally requiring a\n             * NPM module that provides a compatible implementation.\n             */\n\n            /* global global */\n\n            /**\n             * WHATWG WebSockets API\n             * https://www.w3.org/TR/websockets/\n             *\n             * Interface to use the web socket protocol\n             *\n             * Used implementations:\n             * - supported browsers: built-in in WebSocket global\n             *   https://developer.mozilla.org/en-US/docs/Web/API/WebSocket#Browser_compatibility\n             * - nodejs: use standard-compliant 'ws' module\n             *   https://www.npmjs.com/package/ws\n             */\n            function getWebSocketImplementation() {\n              let WebSocketImplementation = global$1.WebSocket;\n              if (typeof WebSocketImplementation === 'undefined') {\n                try {\n                  WebSocketImplementation = require('ws');\n                } catch (err) {\n                  throw new Error('You must install the \"ws\" package to use Strophe in nodejs.');\n                }\n              }\n              return WebSocketImplementation;\n            }\n            const WebSocket = getWebSocketImplementation();\n\n            /**\n             * DOMParser\n             * https://w3c.github.io/DOM-Parsing/#the-domparser-interface\n             *\n             * Interface to parse XML strings into Document objects\n             *\n             * Used implementations:\n             * - supported browsers: built-in in DOMParser global\n             *   https://developer.mozilla.org/en-US/docs/Web/API/DOMParser#Browser_compatibility\n             * - nodejs: use '@xmldom/xmldom' module\n             *   https://www.npmjs.com/package/@xmldom/xmldom\n             */\n            function getDOMParserImplementation() {\n              let DOMParserImplementation = global$1.DOMParser;\n              if (typeof DOMParserImplementation === 'undefined') {\n                try {\n                  DOMParserImplementation = require('@xmldom/xmldom').DOMParser;\n                } catch (err) {\n                  throw new Error('You must install the \"@xmldom/xmldom\" package to use Strophe in nodejs.');\n                }\n              }\n              return DOMParserImplementation;\n            }\n            const DOMParser = getDOMParserImplementation();\n\n            /**\n             *  Gets IE xml doc object. Used by getDummyXMLDocument shim.\n             *\n             *  Returns:\n             *    A Microsoft XML DOM Object\n             *  See Also:\n             *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n             */\n            function _getIEXmlDom() {\n              const docStrings = ['Msxml2.DOMDocument.6.0', 'Msxml2.DOMDocument.5.0', 'Msxml2.DOMDocument.4.0', 'MSXML2.DOMDocument.3.0', 'MSXML2.DOMDocument', 'MSXML.DOMDocument', 'Microsoft.XMLDOM'];\n              for (let d = 0; d < docStrings.length; d++) {\n                try {\n                  // eslint-disable-next-line no-undef\n                  const doc = new ActiveXObject(docStrings[d]);\n                  return doc;\n                } catch (e) {\n                  // Try next one\n                }\n              }\n            }\n\n            /**\n             * Creates a dummy XML DOM document to serve as an element and text node generator.\n             *\n             * Used implementations:\n             *  - IE < 10: avoid using createDocument() due to a memory leak, use ie-specific\n             *    workaround\n             *  - other supported browsers: use document's createDocument\n             *  - nodejs: use '@xmldom/xmldom'\n             */\n            function getDummyXMLDOMDocument() {\n              // nodejs\n              if (typeof document === 'undefined') {\n                try {\n                  const DOMImplementation = require('@xmldom/xmldom').DOMImplementation;\n                  return new DOMImplementation().createDocument('jabber:client', 'strophe', null);\n                } catch (err) {\n                  throw new Error('You must install the \"@xmldom/xmldom\" package to use Strophe in nodejs.');\n                }\n              }\n              // IE < 10\n              if (document.implementation.createDocument === undefined || document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n                const doc = _getIEXmlDom();\n                doc.appendChild(doc.createElement('strophe'));\n                return doc;\n              }\n              // All other supported browsers\n              return document.implementation.createDocument('jabber:client', 'strophe', null);\n            }\n\n            var shims = /*#__PURE__*/Object.freeze({\n                        __proto__: null,\n                        WebSocket: WebSocket,\n                        DOMParser: DOMParser,\n                        getDummyXMLDOMDocument: getDummyXMLDOMDocument\n            });\n\n            /** Constants: XMPP Namespace Constants\n             *  Common namespace constants from the XMPP RFCs and XEPs.\n             *\n             *  Strophe.NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n             *  Strophe.NS.BOSH - BOSH namespace from XEP 206.\n             *  Strophe.NS.CLIENT - Main XMPP client namespace.\n             *  Strophe.NS.AUTH - Legacy authentication namespace.\n             *  Strophe.NS.ROSTER - Roster operations namespace.\n             *  Strophe.NS.PROFILE - Profile namespace.\n             *  Strophe.NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n             *  Strophe.NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n             *  Strophe.NS.MUC - Multi-User Chat namespace from XEP 45.\n             *  Strophe.NS.SASL - XMPP SASL namespace from RFC 3920.\n             *  Strophe.NS.STREAM - XMPP Streams namespace from RFC 3920.\n             *  Strophe.NS.BIND - XMPP Binding namespace from RFC 3920 and RFC 6120.\n             *  Strophe.NS.SESSION - XMPP Session namespace from RFC 3920.\n             *  Strophe.NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n             *  Strophe.NS.XHTML - XHTML body namespace from XEP 71.\n             */\n            const NS = {\n              HTTPBIND: 'http://jabber.org/protocol/httpbind',\n              BOSH: 'urn:xmpp:xbosh',\n              CLIENT: 'jabber:client',\n              AUTH: 'jabber:iq:auth',\n              ROSTER: 'jabber:iq:roster',\n              PROFILE: 'jabber:iq:profile',\n              DISCO_INFO: 'http://jabber.org/protocol/disco#info',\n              DISCO_ITEMS: 'http://jabber.org/protocol/disco#items',\n              MUC: 'http://jabber.org/protocol/muc',\n              SASL: 'urn:ietf:params:xml:ns:xmpp-sasl',\n              STREAM: 'http://etherx.jabber.org/streams',\n              FRAMING: 'urn:ietf:params:xml:ns:xmpp-framing',\n              BIND: 'urn:ietf:params:xml:ns:xmpp-bind',\n              SESSION: 'urn:ietf:params:xml:ns:xmpp-session',\n              VERSION: 'jabber:iq:version',\n              STANZAS: 'urn:ietf:params:xml:ns:xmpp-stanzas',\n              XHTML_IM: 'http://jabber.org/protocol/xhtml-im',\n              XHTML: 'http://www.w3.org/1999/xhtml'\n            };\n\n            /** Constants: XHTML_IM Namespace\n             *  contains allowed tags, tag attributes, and css properties.\n             *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n             *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n             *  allowed tags and their attributes.\n             */\n            const XHTML = {\n              tags: ['a', 'blockquote', 'br', 'cite', 'em', 'img', 'li', 'ol', 'p', 'span', 'strong', 'ul', 'body'],\n              attributes: {\n                'a': ['href'],\n                'blockquote': ['style'],\n                'br': [],\n                'cite': ['style'],\n                'em': [],\n                'img': ['src', 'alt', 'style', 'height', 'width'],\n                'li': ['style'],\n                'ol': ['style'],\n                'p': ['style'],\n                'span': ['style'],\n                'strong': [],\n                'ul': ['style'],\n                'body': []\n              },\n              css: ['background-color', 'color', 'font-family', 'font-size', 'font-style', 'font-weight', 'margin-left', 'margin-right', 'text-align', 'text-decoration']\n            };\n\n            /** Constants: Connection Status Constants\n             *  Connection status constants for use by the connection handler\n             *  callback.\n             *\n             *  Strophe.Status.ERROR - An error has occurred\n             *  Strophe.Status.CONNECTING - The connection is currently being made\n             *  Strophe.Status.CONNFAIL - The connection attempt failed\n             *  Strophe.Status.AUTHENTICATING - The connection is authenticating\n             *  Strophe.Status.AUTHFAIL - The authentication attempt failed\n             *  Strophe.Status.CONNECTED - The connection has succeeded\n             *  Strophe.Status.DISCONNECTED - The connection has been terminated\n             *  Strophe.Status.DISCONNECTING - The connection is currently being terminated\n             *  Strophe.Status.ATTACHED - The connection has been attached\n             *  Strophe.Status.REDIRECT - The connection has been redirected\n             *  Strophe.Status.CONNTIMEOUT - The connection has timed out\n             */\n            const Status = {\n              ERROR: 0,\n              CONNECTING: 1,\n              CONNFAIL: 2,\n              AUTHENTICATING: 3,\n              AUTHFAIL: 4,\n              CONNECTED: 5,\n              DISCONNECTED: 6,\n              DISCONNECTING: 7,\n              ATTACHED: 8,\n              REDIRECT: 9,\n              CONNTIMEOUT: 10,\n              BINDREQUIRED: 11,\n              ATTACHFAIL: 12\n            };\n            const ErrorCondition = {\n              BAD_FORMAT: 'bad-format',\n              CONFLICT: 'conflict',\n              MISSING_JID_NODE: 'x-strophe-bad-non-anon-jid',\n              NO_AUTH_MECH: 'no-auth-mech',\n              UNKNOWN_REASON: 'unknown'\n            };\n\n            /** Constants: Log Level Constants\n             *  Logging level indicators.\n             *\n             *  Strophe.LogLevel.DEBUG - Debug output\n             *  Strophe.LogLevel.INFO - Informational output\n             *  Strophe.LogLevel.WARN - Warnings\n             *  Strophe.LogLevel.ERROR - Errors\n             *  Strophe.LogLevel.FATAL - Fatal errors\n             */\n            const LogLevel = {\n              DEBUG: 0,\n              INFO: 1,\n              WARN: 2,\n              ERROR: 3,\n              FATAL: 4\n            };\n\n            /** PrivateConstants: DOM Element Type Constants\n             *  DOM element types.\n             *\n             *  ElementType.NORMAL - Normal element.\n             *  ElementType.TEXT - Text data element.\n             *  ElementType.FRAGMENT - XHTML fragment element.\n             */\n            const ElementType = {\n              NORMAL: 1,\n              TEXT: 3,\n              CDATA: 4,\n              FRAGMENT: 11\n            };\n\n            /* global btoa, ActiveXObject */\n            function utf16to8(str) {\n              let out = '';\n              const len = str.length;\n              for (let i = 0; i < len; i++) {\n                const c = str.charCodeAt(i);\n                if (c >= 0x0000 && c <= 0x007f) {\n                  out += str.charAt(i);\n                } else if (c > 0x07ff) {\n                  out += String.fromCharCode(0xe0 | c >> 12 & 0x0f);\n                  out += String.fromCharCode(0x80 | c >> 6 & 0x3f);\n                  out += String.fromCharCode(0x80 | c >> 0 & 0x3f);\n                } else {\n                  out += String.fromCharCode(0xc0 | c >> 6 & 0x1f);\n                  out += String.fromCharCode(0x80 | c >> 0 & 0x3f);\n                }\n              }\n              return out;\n            }\n            function xorArrayBuffers(x, y) {\n              const xIntArray = new Uint8Array(x);\n              const yIntArray = new Uint8Array(y);\n              const zIntArray = new Uint8Array(x.byteLength);\n              for (let i = 0; i < x.byteLength; i++) {\n                zIntArray[i] = xIntArray[i] ^ yIntArray[i];\n              }\n              return zIntArray.buffer;\n            }\n            function arrayBufToBase64(buffer) {\n              // This function is due to mobz (https://stackoverflow.com/users/1234628/mobz)\n              // and Emmanuel (https://stackoverflow.com/users/288564/emmanuel)\n              let binary = '';\n              const bytes = new Uint8Array(buffer);\n              const len = bytes.byteLength;\n              for (let i = 0; i < len; i++) {\n                binary += String.fromCharCode(bytes[i]);\n              }\n              return btoa(binary);\n            }\n            function base64ToArrayBuf(str) {\n              var _Uint8Array$from;\n              return (_Uint8Array$from = Uint8Array.from(atob(str), c => c.charCodeAt(0))) === null || _Uint8Array$from === void 0 ? void 0 : _Uint8Array$from.buffer;\n            }\n            function stringToArrayBuf(str) {\n              const bytes = new TextEncoder('utf-8').encode(str);\n              return bytes.buffer;\n            }\n            function addCookies(cookies) {\n              if (typeof document === 'undefined') {\n                Strophe.log(Strophe.LogLevel.ERROR, `addCookies: not adding any cookies, since there's no document object`);\n              }\n\n              /* Parameters:\n               *  (Object) cookies - either a map of cookie names\n               *    to string values or to maps of cookie values.\n               *\n               * For example:\n               * { \"myCookie\": \"1234\" }\n               *\n               * or:\n               * { \"myCookie\": {\n               *      \"value\": \"1234\",\n               *      \"domain\": \".example.org\",\n               *      \"path\": \"/\",\n               *      \"expires\": expirationDate\n               *      }\n               *  }\n               *\n               *  These values get passed to Strophe.Connection via\n               *   options.cookies\n               */\n              cookies = cookies || {};\n              for (const cookieName in cookies) {\n                if (Object.prototype.hasOwnProperty.call(cookies, cookieName)) {\n                  let expires = '';\n                  let domain = '';\n                  let path = '';\n                  const cookieObj = cookies[cookieName];\n                  const isObj = typeof cookieObj === 'object';\n                  const cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n                  if (isObj) {\n                    expires = cookieObj.expires ? ';expires=' + cookieObj.expires : '';\n                    domain = cookieObj.domain ? ';domain=' + cookieObj.domain : '';\n                    path = cookieObj.path ? ';path=' + cookieObj.path : '';\n                  }\n                  document.cookie = cookieName + '=' + cookieValue + expires + domain + path;\n                }\n              }\n            }\n            let _xmlGenerator = null;\n\n            /** Function: Strophe.xmlGenerator\n             *  Get the DOM document to generate elements.\n             *\n             *  Returns:\n             *    The currently used DOM document.\n             */\n            function xmlGenerator() {\n              if (!_xmlGenerator) {\n                _xmlGenerator = getDummyXMLDOMDocument();\n              }\n              return _xmlGenerator;\n            }\n\n            /** Function: Strophe.xmlTextNode\n             *  Creates an XML DOM text node.\n             *\n             *  Provides a cross implementation version of document.createTextNode.\n             *\n             *  Parameters:\n             *    (String) text - The content of the text node.\n             *\n             *  Returns:\n             *    A new XML DOM text node.\n             */\n            function xmlTextNode(text) {\n              return xmlGenerator().createTextNode(text);\n            }\n\n            /** Function: Strophe.xmlHtmlNode\n             *  Creates an XML DOM html node.\n             *\n             *  Parameters:\n             *    (String) html - The content of the html node.\n             *\n             *  Returns:\n             *    A new XML DOM text node.\n             */\n            function xmlHtmlNode(html) {\n              let node;\n              //ensure text is escaped\n              if (DOMParser) {\n                const parser = new DOMParser();\n                node = parser.parseFromString(html, 'text/xml');\n              } else {\n                node = new ActiveXObject('Microsoft.XMLDOM');\n                node.async = 'false';\n                node.loadXML(html);\n              }\n              return node;\n            }\n\n            /** Function: Strophe.xmlElement\n             *  Create an XML DOM element.\n             *\n             *  This function creates an XML DOM element correctly across all\n             *  implementations. Note that these are not HTML DOM elements, which\n             *  aren't appropriate for XMPP stanzas.\n             *\n             *  Parameters:\n             *    (String) name - The name for the element.\n             *    (Array|Object) attrs - An optional array or object containing\n             *      key/value pairs to use as element attributes. The object should\n             *      be in the format {'key': 'value'} or {key: 'value'}. The array\n             *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n             *    (String) text - The text child data for the element.\n             *\n             *  Returns:\n             *    A new XML DOM element.\n             */\n            function xmlElement(name) {\n              if (!name) {\n                return null;\n              }\n              const node = xmlGenerator().createElement(name);\n              // FIXME: this should throw errors if args are the wrong type or\n              // there are more than two optional args\n              for (let a = 1; a < arguments.length; a++) {\n                const arg = arguments[a];\n                if (!arg) {\n                  continue;\n                }\n                if (typeof arg === 'string' || typeof arg === 'number') {\n                  node.appendChild(xmlTextNode(arg));\n                } else if (typeof arg === 'object' && typeof arg.sort === 'function') {\n                  for (let i = 0; i < arg.length; i++) {\n                    const attr = arg[i];\n                    if (typeof attr === 'object' && typeof attr.sort === 'function' && attr[1] !== undefined && attr[1] !== null) {\n                      node.setAttribute(attr[0], attr[1]);\n                    }\n                  }\n                } else if (typeof arg === 'object') {\n                  for (const k in arg) {\n                    if (Object.prototype.hasOwnProperty.call(arg, k) && arg[k] !== undefined && arg[k] !== null) {\n                      node.setAttribute(k, arg[k]);\n                    }\n                  }\n                }\n              }\n              return node;\n            }\n\n            /** Function: Strophe.XHTML.validTag\n             *\n             * Utility method to determine whether a tag is allowed\n             * in the XHTML_IM namespace.\n             *\n             * XHTML tag names are case sensitive and must be lower case.\n             */\n            function validTag(tag) {\n              for (let i = 0; i < XHTML.tags.length; i++) {\n                if (tag === XHTML.tags[i]) {\n                  return true;\n                }\n              }\n              return false;\n            }\n\n            /** Function: Strophe.XHTML.validAttribute\n             *\n             * Utility method to determine whether an attribute is allowed\n             * as recommended per XEP-0071\n             *\n             * XHTML attribute names are case sensitive and must be lower case.\n             */\n            function validAttribute(tag, attribute) {\n              if (typeof XHTML.attributes[tag] !== 'undefined' && XHTML.attributes[tag].length > 0) {\n                for (let i = 0; i < XHTML.attributes[tag].length; i++) {\n                  if (attribute === XHTML.attributes[tag][i]) {\n                    return true;\n                  }\n                }\n              }\n              return false;\n            }\n\n            /** Function: Strophe.XHTML.validCSS */\n            function validCSS(style) {\n              for (let i = 0; i < XHTML.css.length; i++) {\n                if (style === XHTML.css[i]) {\n                  return true;\n                }\n              }\n              return false;\n            }\n\n            /** Function: Strophe.createHtml\n             *\n             *  Copy an HTML DOM element into an XML DOM.\n             *\n             *  This function copies a DOM element and all its descendants and returns\n             *  the new copy.\n             *\n             *  Parameters:\n             *    (HTMLElement) elem - A DOM element.\n             *\n             *  Returns:\n             *    A new, copied DOM element tree.\n             */\n            function createHtml(elem) {\n              let el;\n              if (elem.nodeType === ElementType.NORMAL) {\n                const tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n                if (validTag(tag)) {\n                  try {\n                    el = xmlElement(tag);\n                    for (let i = 0; i < XHTML.attributes[tag].length; i++) {\n                      const attribute = XHTML.attributes[tag][i];\n                      let value = elem.getAttribute(attribute);\n                      if (typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\n                        continue;\n                      }\n                      if (attribute === 'style' && typeof value === 'object' && typeof value.cssText !== 'undefined') {\n                        value = value.cssText; // we're dealing with IE, need to get CSS out\n                      }\n                      // filter out invalid css styles\n                      if (attribute === 'style') {\n                        const css = [];\n                        const cssAttrs = value.split(';');\n                        for (let j = 0; j < cssAttrs.length; j++) {\n                          const attr = cssAttrs[j].split(':');\n                          const cssName = attr[0].replace(/^\\s*/, '').replace(/\\s*$/, '').toLowerCase();\n                          if (validCSS(cssName)) {\n                            const cssValue = attr[1].replace(/^\\s*/, '').replace(/\\s*$/, '');\n                            css.push(cssName + ': ' + cssValue);\n                          }\n                        }\n                        if (css.length > 0) {\n                          value = css.join('; ');\n                          el.setAttribute(attribute, value);\n                        }\n                      } else {\n                        el.setAttribute(attribute, value);\n                      }\n                    }\n                    for (let i = 0; i < elem.childNodes.length; i++) {\n                      el.appendChild(createHtml(elem.childNodes[i]));\n                    }\n                  } catch (e) {\n                    // invalid elements\n                    el = xmlTextNode('');\n                  }\n                } else {\n                  el = xmlGenerator().createDocumentFragment();\n                  for (let i = 0; i < elem.childNodes.length; i++) {\n                    el.appendChild(createHtml(elem.childNodes[i]));\n                  }\n                }\n              } else if (elem.nodeType === ElementType.FRAGMENT) {\n                el = xmlGenerator().createDocumentFragment();\n                for (let i = 0; i < elem.childNodes.length; i++) {\n                  el.appendChild(createHtml(elem.childNodes[i]));\n                }\n              } else if (elem.nodeType === ElementType.TEXT) {\n                el = xmlTextNode(elem.nodeValue);\n              }\n              return el;\n            }\n\n            /** Function: Strophe.copyElement\n             *  Copy an XML DOM element.\n             *\n             *  This function copies a DOM element and all its descendants and returns\n             *  the new copy.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - A DOM element.\n             *\n             *  Returns:\n             *    A new, copied DOM element tree.\n             */\n            function copyElement(elem) {\n              let el;\n              if (elem.nodeType === ElementType.NORMAL) {\n                el = xmlElement(elem.tagName);\n                for (let i = 0; i < elem.attributes.length; i++) {\n                  el.setAttribute(elem.attributes[i].nodeName, elem.attributes[i].value);\n                }\n                for (let i = 0; i < elem.childNodes.length; i++) {\n                  el.appendChild(copyElement(elem.childNodes[i]));\n                }\n              } else if (elem.nodeType === ElementType.TEXT) {\n                el = xmlGenerator().createTextNode(elem.nodeValue);\n              }\n              return el;\n            }\n\n            /*  Function: Strophe.xmlescape\n             *  Excapes invalid xml characters.\n             *\n             *  Parameters:\n             *     (String) text - text to escape.\n             *\n             *  Returns:\n             *      Escaped text.\n             */\n            function xmlescape(text) {\n              text = text.replace(/\\&/g, '&amp;');\n              text = text.replace(/</g, '&lt;');\n              text = text.replace(/>/g, '&gt;');\n              text = text.replace(/'/g, '&apos;');\n              text = text.replace(/\"/g, '&quot;');\n              return text;\n            }\n\n            /*  Function: Strophe.xmlunescape\n             *  Unexcapes invalid xml characters.\n             *\n             *  Parameters:\n             *     (String) text - text to unescape.\n             *\n             *  Returns:\n             *      Unescaped text.\n             */\n            function xmlunescape(text) {\n              text = text.replace(/\\&amp;/g, '&');\n              text = text.replace(/&lt;/g, '<');\n              text = text.replace(/&gt;/g, '>');\n              text = text.replace(/&apos;/g, \"'\");\n              text = text.replace(/&quot;/g, '\"');\n              return text;\n            }\n\n            /** Function: Strophe.serialize\n             *  Render a DOM element and all descendants to a String.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - A DOM element.\n             *\n             *  Returns:\n             *    The serialized element tree as a String.\n             */\n            function serialize(elem) {\n              if (!elem) {\n                return null;\n              }\n              if (typeof elem.tree === 'function') {\n                elem = elem.tree();\n              }\n              const names = [...Array(elem.attributes.length).keys()].map(i => elem.attributes[i].nodeName);\n              names.sort();\n              let result = names.reduce((a, n) => `${a} ${n}=\"${xmlescape(elem.attributes.getNamedItem(n).value)}\"`, `<${elem.nodeName}`);\n              if (elem.childNodes.length > 0) {\n                result += '>';\n                for (let i = 0; i < elem.childNodes.length; i++) {\n                  const child = elem.childNodes[i];\n                  switch (child.nodeType) {\n                    case ElementType.NORMAL:\n                      // normal element, so recurse\n                      result += serialize(child);\n                      break;\n                    case ElementType.TEXT:\n                      // text element to escape values\n                      result += xmlescape(child.nodeValue);\n                      break;\n                    case ElementType.CDATA:\n                      // cdata section so don't escape values\n                      result += '<![CDATA[' + child.nodeValue + ']]>';\n                  }\n                }\n                result += '</' + elem.nodeName + '>';\n              } else {\n                result += '/>';\n              }\n              return result;\n            }\n\n            /** Function: Strophe.forEachChild\n             *  Map a function over some or all child elements of a given element.\n             *\n             *  This is a small convenience function for mapping a function over\n             *  some or all of the children of an element.  If elemName is null, all\n             *  children will be passed to the function, otherwise only children\n             *  whose tag names match elemName will be passed.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - The element to operate on.\n             *    (String) elemName - The child element tag name filter.\n             *    (Function) func - The function to apply to each child.  This\n             *      function should take a single argument, a DOM element.\n             */\n            function forEachChild(elem, elemName, func) {\n              for (let i = 0; i < elem.childNodes.length; i++) {\n                const childNode = elem.childNodes[i];\n                if (childNode.nodeType === ElementType.NORMAL && (!elemName || this.isTagEqual(childNode, elemName))) {\n                  func(childNode);\n                }\n              }\n            }\n\n            /** Function: Strophe.isTagEqual\n             *  Compare an element's tag name with a string.\n             *\n             *  This function is case sensitive.\n             *\n             *  Parameters:\n             *    (XMLElement) el - A DOM element.\n             *    (String) name - The element name.\n             *\n             *  Returns:\n             *    true if the element's tag name matches _el_, and false\n             *    otherwise.\n             */\n            function isTagEqual(el, name) {\n              return el.tagName === name;\n            }\n\n            /** Function: Strophe.getText\n             *  Get the concatenation of all text children of an element.\n             *\n             *  Parameters:\n             *    (XMLElement) elem - A DOM element.\n             *\n             *  Returns:\n             *    A String with the concatenated text of all text element children.\n             */\n            function getText(elem) {\n              var _elem$childNodes;\n              if (!elem) {\n                return null;\n              }\n              let str = '';\n              if (!((_elem$childNodes = elem.childNodes) !== null && _elem$childNodes !== void 0 && _elem$childNodes.length) && elem.nodeType === ElementType.TEXT) {\n                str += elem.nodeValue;\n              }\n              for (let i = 0; (_ref = i < ((_elem$childNodes2 = elem.childNodes) === null || _elem$childNodes2 === void 0 ? void 0 : _elem$childNodes2.length)) !== null && _ref !== void 0 ? _ref : 0; i++) {\n                var _ref, _elem$childNodes2;\n                if (elem.childNodes[i].nodeType === ElementType.TEXT) {\n                  str += elem.childNodes[i].nodeValue;\n                }\n              }\n              return xmlescape(str);\n            }\n\n            /** Function: Strophe.escapeNode\n             *  Escape the node part (also called local part) of a JID.\n             *\n             *  Parameters:\n             *    (String) node - A node (or local part).\n             *\n             *  Returns:\n             *    An escaped node (or local part).\n             */\n            function escapeNode(node) {\n              if (typeof node !== 'string') {\n                return node;\n              }\n              return node.replace(/^\\s+|\\s+$/g, '').replace(/\\\\/g, '\\\\5c').replace(/ /g, '\\\\20').replace(/\\\"/g, '\\\\22').replace(/\\&/g, '\\\\26').replace(/\\'/g, '\\\\27').replace(/\\//g, '\\\\2f').replace(/:/g, '\\\\3a').replace(/</g, '\\\\3c').replace(/>/g, '\\\\3e').replace(/@/g, '\\\\40');\n            }\n\n            /** Function: Strophe.unescapeNode\n             *  Unescape a node part (also called local part) of a JID.\n             *\n             *  Parameters:\n             *    (String) node - A node (or local part).\n             *\n             *  Returns:\n             *    An unescaped node (or local part).\n             */\n            function unescapeNode(node) {\n              if (typeof node !== 'string') {\n                return node;\n              }\n              return node.replace(/\\\\20/g, ' ').replace(/\\\\22/g, '\"').replace(/\\\\26/g, '&').replace(/\\\\27/g, \"'\").replace(/\\\\2f/g, '/').replace(/\\\\3a/g, ':').replace(/\\\\3c/g, '<').replace(/\\\\3e/g, '>').replace(/\\\\40/g, '@').replace(/\\\\5c/g, '\\\\');\n            }\n\n            /** Function: Strophe.getNodeFromJid\n             *  Get the node portion of a JID String.\n             *\n             *  Parameters:\n             *    (String) jid - A JID.\n             *\n             *  Returns:\n             *    A String containing the node.\n             */\n            function getNodeFromJid(jid) {\n              if (jid.indexOf('@') < 0) {\n                return null;\n              }\n              return jid.split('@')[0];\n            }\n\n            /** Function: Strophe.getDomainFromJid\n             *  Get the domain portion of a JID String.\n             *\n             *  Parameters:\n             *    (String) jid - A JID.\n             *\n             *  Returns:\n             *    A String containing the domain.\n             */\n            function getDomainFromJid(jid) {\n              const bare = getBareJidFromJid(jid);\n              if (bare.indexOf('@') < 0) {\n                return bare;\n              } else {\n                const parts = bare.split('@');\n                parts.splice(0, 1);\n                return parts.join('@');\n              }\n            }\n\n            /** Function: Strophe.getResourceFromJid\n             *  Get the resource portion of a JID String.\n             *\n             *  Parameters:\n             *    (String) jid - A JID.\n             *\n             *  Returns:\n             *    A String containing the resource.\n             */\n            function getResourceFromJid(jid) {\n              if (!jid) {\n                return null;\n              }\n              const s = jid.split('/');\n              if (s.length < 2) {\n                return null;\n              }\n              s.splice(0, 1);\n              return s.join('/');\n            }\n\n            /** Function: Strophe.getBareJidFromJid\n             *  Get the bare JID from a JID String.\n             *\n             *  Parameters:\n             *    (String) jid - A JID.\n             *\n             *  Returns:\n             *    A String containing the bare JID.\n             */\n            function getBareJidFromJid(jid) {\n              return jid ? jid.split('/')[0] : null;\n            }\n            const utils = {\n              utf16to8,\n              xorArrayBuffers,\n              arrayBufToBase64,\n              base64ToArrayBuf,\n              stringToArrayBuf,\n              addCookies\n            };\n\n            var utils$1 = /*#__PURE__*/Object.freeze({\n                        __proto__: null,\n                        utf16to8: utf16to8,\n                        xorArrayBuffers: xorArrayBuffers,\n                        arrayBufToBase64: arrayBufToBase64,\n                        base64ToArrayBuf: base64ToArrayBuf,\n                        stringToArrayBuf: stringToArrayBuf,\n                        addCookies: addCookies,\n                        xmlGenerator: xmlGenerator,\n                        xmlTextNode: xmlTextNode,\n                        xmlHtmlNode: xmlHtmlNode,\n                        xmlElement: xmlElement,\n                        validTag: validTag,\n                        validAttribute: validAttribute,\n                        validCSS: validCSS,\n                        createHtml: createHtml,\n                        copyElement: copyElement,\n                        xmlescape: xmlescape,\n                        xmlunescape: xmlunescape,\n                        serialize: serialize,\n                        forEachChild: forEachChild,\n                        isTagEqual: isTagEqual,\n                        getText: getText,\n                        escapeNode: escapeNode,\n                        unescapeNode: unescapeNode,\n                        getNodeFromJid: getNodeFromJid,\n                        getDomainFromJid: getDomainFromJid,\n                        getResourceFromJid: getResourceFromJid,\n                        getBareJidFromJid: getBareJidFromJid,\n                        'default': utils\n            });\n\n            /** Function: $build\n             *  Create a Strophe.Builder.\n             *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n             *\n             *  Parameters:\n             *    (String) name - The root element name.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n            function $build(name, attrs) {\n              return new Builder(name, attrs);\n            }\n\n            /** Function: $msg\n             *  Create a Strophe.Builder with a <message/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <message/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n            function $msg(attrs) {\n              return new Builder('message', attrs);\n            }\n\n            /** Function: $iq\n             *  Create a Strophe.Builder with an <iq/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <iq/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n            function $iq(attrs) {\n              return new Builder('iq', attrs);\n            }\n\n            /** Function: $pres\n             *  Create a Strophe.Builder with a <presence/> element as the root.\n             *\n             *  Parameters:\n             *    (Object) attrs - The <presence/> element attributes in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder object.\n             */\n            function $pres(attrs) {\n              return new Builder('presence', attrs);\n            }\n\n            /** Class: Strophe.Builder\n             *  XML DOM builder.\n             *\n             *  This object provides an interface similar to JQuery but for building\n             *  DOM elements easily and rapidly.  All the functions except for toString()\n             *  and tree() return the object, so calls can be chained.  Here's an\n             *  example using the $iq() builder helper.\n             *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n             *  >     .c('query', {xmlns: 'strophe:example'})\n             *  >     .c('example')\n             *  >     .toString()\n             *\n             *  The above generates this XML fragment\n             *  > <iq to='you' from='me' type='get' id='1'>\n             *  >   <query xmlns='strophe:example'>\n             *  >     <example/>\n             *  >   </query>\n             *  > </iq>\n             *  The corresponding DOM manipulations to get a similar fragment would be\n             *  a lot more tedious and probably involve several helper variables.\n             *\n             *  Since adding children makes new operations operate on the child, up()\n             *  is provided to traverse up the tree.  To add two children, do\n             *  > builder.c('child1', ...).up().c('child2', ...)\n             *  The next operation on the Builder will be relative to the second child.\n             */\n\n            /** Constructor: Strophe.Builder\n             *  Create a Strophe.Builder object.\n             *\n             *  The attributes should be passed in object notation.  For example\n             *  > let b = new Builder('message', {to: 'you', from: 'me'});\n             *  or\n             *  > let b = new Builder('messsage', {'xml:lang': 'en'});\n             *\n             *  Parameters:\n             *    (String) name - The name of the root element.\n             *    (Object) attrs - The attributes for the root element in object notation.\n             *\n             *  Returns:\n             *    A new Strophe.Builder.\n             */\n\n            class Builder {\n              constructor(name, attrs) {\n                // Set correct namespace for jabber:client elements\n                if (name === 'presence' || name === 'message' || name === 'iq') {\n                  if (attrs && !attrs.xmlns) {\n                    attrs.xmlns = NS.CLIENT;\n                  } else if (!attrs) {\n                    attrs = {\n                      xmlns: NS.CLIENT\n                    };\n                  }\n                }\n                // Holds the tree being built.\n                this.nodeTree = xmlElement(name, attrs);\n                // Points to the current operation node.\n                this.node = this.nodeTree;\n              }\n\n              /** Function: tree\n               *  Return the DOM tree.\n               *\n               *  This function returns the current DOM tree as an element object.  This\n               *  is suitable for passing to functions like Strophe.Connection.send().\n               *\n               *  Returns:\n               *    The DOM tree as a element object.\n               */\n              tree() {\n                return this.nodeTree;\n              }\n\n              /** Function: toString\n               *  Serialize the DOM tree to a String.\n               *\n               *  This function returns a string serialization of the current DOM\n               *  tree.  It is often used internally to pass data to a\n               *  Strophe.Request object.\n               *\n               *  Returns:\n               *    The serialized DOM tree in a String.\n               */\n              toString() {\n                return serialize(this.nodeTree);\n              }\n\n              /** Function: up\n               *  Make the current parent element the new current element.\n               *\n               *  This function is often used after c() to traverse back up the tree.\n               *  For example, to add two children to the same element\n               *  > builder.c('child1', {}).up().c('child2', {});\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              up() {\n                this.node = this.node.parentNode;\n                return this;\n              }\n\n              /** Function: root\n               *  Make the root element the new current element.\n               *\n               *  When at a deeply nested element in the tree, this function can be used\n               *  to jump back to the root of the tree, instead of having to repeatedly\n               *  call up().\n               *\n               *  Returns:\n               *    The Stophe.Builder object.\n               */\n              root() {\n                this.node = this.nodeTree;\n                return this;\n              }\n\n              /** Function: attrs\n               *  Add or modify attributes of the current element.\n               *\n               *  The attributes should be passed in object notation.  This function\n               *  does not move the current element pointer.\n               *\n               *  Parameters:\n               *    (Object) moreattrs - The attributes to add/modify in object notation.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              attrs(moreattrs) {\n                for (const k in moreattrs) {\n                  if (Object.prototype.hasOwnProperty.call(moreattrs, k)) {\n                    if (moreattrs[k] === undefined) {\n                      this.node.removeAttribute(k);\n                    } else {\n                      this.node.setAttribute(k, moreattrs[k]);\n                    }\n                  }\n                }\n                return this;\n              }\n\n              /** Function: c\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function moves the current element pointer to the child,\n               *  unless text is provided.  If you need to add another child, it\n               *  is necessary to use up() to go back to the parent in the tree.\n               *\n               *  Parameters:\n               *    (String) name - The name of the child.\n               *    (Object) attrs - The attributes of the child in object notation.\n               *    (String) text - The text to add to the child.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              c(name, attrs, text) {\n                const child = xmlElement(name, attrs, text);\n                this.node.appendChild(child);\n                if (typeof text !== 'string' && typeof text !== 'number') {\n                  this.node = child;\n                }\n                return this;\n              }\n\n              /** Function: cnode\n               *  Add a child to the current element and make it the new current\n               *  element.\n               *\n               *  This function is the same as c() except that instead of using a\n               *  name and an attributes object to create the child it uses an\n               *  existing DOM element object.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - A DOM element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              cnode(elem) {\n                let impNode;\n                const xmlGen = xmlGenerator();\n                try {\n                  impNode = xmlGen.importNode !== undefined;\n                } catch (e) {\n                  impNode = false;\n                }\n                const newElem = impNode ? xmlGen.importNode(elem, true) : copyElement(elem);\n                this.node.appendChild(newElem);\n                this.node = newElem;\n                return this;\n              }\n\n              /** Function: t\n               *  Add a child text element.\n               *\n               *  This *does not* make the child the new current element since there\n               *  are no children of text elements.\n               *\n               *  Parameters:\n               *    (String) text - The text data to append to the current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              t(text) {\n                const child = xmlTextNode(text);\n                this.node.appendChild(child);\n                return this;\n              }\n\n              /** Function: h\n               *  Replace current element contents with the HTML passed in.\n               *\n               *  This *does not* make the child the new current element\n               *\n               *  Parameters:\n               *    (String) html - The html to insert as contents of current element.\n               *\n               *  Returns:\n               *    The Strophe.Builder object.\n               */\n              h(html) {\n                const fragment = xmlGenerator().createElement('body');\n                // force the browser to try and fix any invalid HTML tags\n                fragment.innerHTML = html;\n                // copy cleaned html into an xml dom\n                const xhtml = createHtml(fragment);\n                while (xhtml.childNodes.length > 0) {\n                  this.node.appendChild(xhtml.childNodes[0]);\n                }\n                return this;\n              }\n            }\n\n            /** PrivateClass: Strophe.Handler\n             *  _Private_ helper class for managing stanza handlers.\n             *\n             *  A Strophe.Handler encapsulates a user provided callback function to be\n             *  executed when matching stanzas are received by the connection.\n             *  Handlers can be either one-off or persistant depending on their\n             *  return value. Returning true will cause a Handler to remain active, and\n             *  returning false will remove the Handler.\n             *\n             *  Users will not use Strophe.Handler objects directly, but instead they\n             *  will use Strophe.Connection.addHandler() and\n             *  Strophe.Connection.deleteHandler().\n             */\n\n            /** PrivateConstructor: Strophe.Handler\n             *  Create and initialize a new Strophe.Handler.\n             *\n             *  Parameters:\n             *    (Function) handler - A function to be executed when the handler is run.\n             *    (String) ns - The namespace to match.\n             *    (String) name - The element name to match.\n             *    (String) type - The element type to match.\n             *    (String) id - The element id attribute to match.\n             *    (String) from - The element from attribute to match.\n             *    (Object) options - Handler options\n             *\n             *  Returns:\n             *    A new Strophe.Handler object.\n             */\n\n            class Handler {\n              constructor(handler, ns, name, type, id, from, options) {\n                this.handler = handler;\n                this.ns = ns;\n                this.name = name;\n                this.type = type;\n                this.id = id;\n                this.options = options || {\n                  'matchBareFromJid': false,\n                  'ignoreNamespaceFragment': false\n                };\n                // BBB: Maintain backward compatibility with old `matchBare` option\n                if (this.options.matchBare) {\n                  Strophe.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.');\n                  this.options.matchBareFromJid = this.options.matchBare;\n                  delete this.options.matchBare;\n                }\n                if (this.options.matchBareFromJid) {\n                  this.from = from ? getBareJidFromJid(from) : null;\n                } else {\n                  this.from = from;\n                }\n                // whether the handler is a user handler or a system handler\n                this.user = true;\n              }\n\n              /** PrivateFunction: getNamespace\n               *  Returns the XML namespace attribute on an element.\n               *  If `ignoreNamespaceFragment` was passed in for this handler, then the\n               *  URL fragment will be stripped.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element with the namespace.\n               *\n               *  Returns:\n               *    The namespace, with optionally the fragment stripped.\n               */\n              getNamespace(elem) {\n                let elNamespace = elem.getAttribute('xmlns');\n                if (elNamespace && this.options.ignoreNamespaceFragment) {\n                  elNamespace = elNamespace.split('#')[0];\n                }\n                return elNamespace;\n              }\n\n              /** PrivateFunction: namespaceMatch\n               *  Tests if a stanza matches the namespace set for this Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              namespaceMatch(elem) {\n                let nsMatch = false;\n                if (!this.ns) {\n                  return true;\n                } else {\n                  forEachChild(elem, null, elem => {\n                    if (this.getNamespace(elem) === this.ns) {\n                      nsMatch = true;\n                    }\n                  });\n                  return nsMatch || this.getNamespace(elem) === this.ns;\n                }\n              }\n\n              /** PrivateFunction: isMatch\n               *  Tests if a stanza matches the Strophe.Handler.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML element to test.\n               *\n               *  Returns:\n               *    true if the stanza matches and false otherwise.\n               */\n              isMatch(elem) {\n                let from = elem.getAttribute('from');\n                if (this.options.matchBareFromJid) {\n                  from = getBareJidFromJid(from);\n                }\n                const elem_type = elem.getAttribute('type');\n                if (this.namespaceMatch(elem) && (!this.name || Strophe.isTagEqual(elem, this.name)) && (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) && (!this.id || elem.getAttribute('id') === this.id) && (!this.from || from === this.from)) {\n                  return true;\n                }\n                return false;\n              }\n\n              /** PrivateFunction: run\n               *  Run the callback on a matching stanza.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The DOM element that triggered the\n               *      Strophe.Handler.\n               *\n               *  Returns:\n               *    A boolean indicating if the handler should remain active.\n               */\n              run(elem) {\n                let result = null;\n                try {\n                  result = this.handler(elem);\n                } catch (e) {\n                  Strophe._handleError(e);\n                  throw e;\n                }\n                return result;\n              }\n\n              /** PrivateFunction: toString\n               *  Get a String representation of the Strophe.Handler object.\n               *\n               *  Returns:\n               *    A String.\n               */\n              toString() {\n                return '{Handler: ' + this.handler + '(' + this.name + ',' + this.id + ',' + this.ns + ')}';\n              }\n            }\n\n            /** PrivateClass: Strophe.TimedHandler\n             *  _Private_ helper class for managing timed handlers.\n             *\n             *  A Strophe.TimedHandler encapsulates a user provided callback that\n             *  should be called after a certain period of time or at regular\n             *  intervals.  The return value of the callback determines whether the\n             *  Strophe.TimedHandler will continue to fire.\n             *\n             *  Users will not use Strophe.TimedHandler objects directly, but instead\n             *  they will use Strophe.Connection.addTimedHandler() and\n             *  Strophe.Connection.deleteTimedHandler().\n             */\n            class TimedHandler {\n              /** PrivateConstructor: Strophe.TimedHandler\n               *  Create and initialize a new Strophe.TimedHandler object.\n               *\n               *  Parameters:\n               *    (Integer) period - The number of milliseconds to wait before the\n               *      handler is called.\n               *    (Function) handler - The callback to run when the handler fires.  This\n               *      function should take no arguments.\n               *\n               *  Returns:\n               *    A new Strophe.TimedHandler object.\n               */\n              constructor(period, handler) {\n                this.period = period;\n                this.handler = handler;\n                this.lastCalled = new Date().getTime();\n                this.user = true;\n              }\n\n              /** PrivateFunction: run\n               *  Run the callback for the Strophe.TimedHandler.\n               *\n               *  Returns:\n               *    true if the Strophe.TimedHandler should be called again, and false\n               *      otherwise.\n               */\n              run() {\n                this.lastCalled = new Date().getTime();\n                return this.handler();\n              }\n\n              /** PrivateFunction: reset\n               *  Reset the last called time for the Strophe.TimedHandler.\n               */\n              reset() {\n                this.lastCalled = new Date().getTime();\n              }\n\n              /** PrivateFunction: toString\n               *  Get a string representation of the Strophe.TimedHandler object.\n               *\n               *  Returns:\n               *    The string representation.\n               */\n              toString() {\n                return '{TimedHandler: ' + this.handler + '(' + this.period + ')}';\n              }\n            }\n\n            /**\n             * Implementation of atob() according to the HTML and Infra specs, except that\n             * instead of throwing INVALID_CHARACTER_ERR we return null.\n             */\n            function atob$2(data) {\n              if (arguments.length === 0) {\n                throw new TypeError(\"1 argument required, but only 0 present.\");\n              }\n\n              // Web IDL requires DOMStrings to just be converted using ECMAScript\n              // ToString, which in our case amounts to using a template literal.\n              data = `${data}`;\n              // \"Remove all ASCII whitespace from data.\"\n              data = data.replace(/[ \\t\\n\\f\\r]/g, \"\");\n              // \"If data's length divides by 4 leaving no remainder, then: if data ends\n              // with one or two U+003D (=) code points, then remove them from data.\"\n              if (data.length % 4 === 0) {\n                data = data.replace(/==?$/, \"\");\n              }\n              // \"If data's length divides by 4 leaving a remainder of 1, then return\n              // failure.\"\n              //\n              // \"If data contains a code point that is not one of\n              //\n              // U+002B (+)\n              // U+002F (/)\n              // ASCII alphanumeric\n              //\n              // then return failure.\"\n              if (data.length % 4 === 1 || /[^+/0-9A-Za-z]/.test(data)) {\n                return null;\n              }\n              // \"Let output be an empty byte sequence.\"\n              let output = \"\";\n              // \"Let buffer be an empty buffer that can have bits appended to it.\"\n              //\n              // We append bits via left-shift and or.  accumulatedBits is used to track\n              // when we've gotten to 24 bits.\n              let buffer = 0;\n              let accumulatedBits = 0;\n              // \"Let position be a position variable for data, initially pointing at the\n              // start of data.\"\n              //\n              // \"While position does not point past the end of data:\"\n              for (let i = 0; i < data.length; i++) {\n                // \"Find the code point pointed to by position in the second column of\n                // Table 1: The Base 64 Alphabet of RFC 4648. Let n be the number given in\n                // the first cell of the same row.\n                //\n                // \"Append to buffer the six bits corresponding to n, most significant bit\n                // first.\"\n                //\n                // atobLookup() implements the table from RFC 4648.\n                buffer <<= 6;\n                buffer |= atobLookup(data[i]);\n                accumulatedBits += 6;\n                // \"If buffer has accumulated 24 bits, interpret them as three 8-bit\n                // big-endian numbers. Append three bytes with values equal to those\n                // numbers to output, in the same order, and then empty buffer.\"\n                if (accumulatedBits === 24) {\n                  output += String.fromCharCode((buffer & 0xff0000) >> 16);\n                  output += String.fromCharCode((buffer & 0xff00) >> 8);\n                  output += String.fromCharCode(buffer & 0xff);\n                  buffer = accumulatedBits = 0;\n                }\n                // \"Advance position by 1.\"\n              }\n              // \"If buffer is not empty, it contains either 12 or 18 bits. If it contains\n              // 12 bits, then discard the last four and interpret the remaining eight as\n              // an 8-bit big-endian number. If it contains 18 bits, then discard the last\n              // two and interpret the remaining 16 as two 8-bit big-endian numbers. Append\n              // the one or two bytes with values equal to those one or two numbers to\n              // output, in the same order.\"\n              if (accumulatedBits === 12) {\n                buffer >>= 4;\n                output += String.fromCharCode(buffer);\n              } else if (accumulatedBits === 18) {\n                buffer >>= 2;\n                output += String.fromCharCode((buffer & 0xff00) >> 8);\n                output += String.fromCharCode(buffer & 0xff);\n              }\n              // \"Return output.\"\n              return output;\n            }\n            /**\n             * A lookup table for atob(), which converts an ASCII character to the\n             * corresponding six-bit number.\n             */\n\n            const keystr$1 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n            function atobLookup(chr) {\n              const index = keystr$1.indexOf(chr);\n              // Throw exception if character is not in the lookup string; should not be hit in tests\n              return index < 0 ? undefined : index;\n            }\n            var atob_1 = atob$2;\n\n            /**\n             * btoa() as defined by the HTML and Infra specs, which mostly just references\n             * RFC 4648.\n             */\n            function btoa$2(s) {\n              if (arguments.length === 0) {\n                throw new TypeError(\"1 argument required, but only 0 present.\");\n              }\n              let i;\n              // String conversion as required by Web IDL.\n              s = `${s}`;\n              // \"The btoa() method must throw an \"InvalidCharacterError\" DOMException if\n              // data contains any character whose code point is greater than U+00FF.\"\n              for (i = 0; i < s.length; i++) {\n                if (s.charCodeAt(i) > 255) {\n                  return null;\n                }\n              }\n              let out = \"\";\n              for (i = 0; i < s.length; i += 3) {\n                const groupsOfSix = [undefined, undefined, undefined, undefined];\n                groupsOfSix[0] = s.charCodeAt(i) >> 2;\n                groupsOfSix[1] = (s.charCodeAt(i) & 0x03) << 4;\n                if (s.length > i + 1) {\n                  groupsOfSix[1] |= s.charCodeAt(i + 1) >> 4;\n                  groupsOfSix[2] = (s.charCodeAt(i + 1) & 0x0f) << 2;\n                }\n                if (s.length > i + 2) {\n                  groupsOfSix[2] |= s.charCodeAt(i + 2) >> 6;\n                  groupsOfSix[3] = s.charCodeAt(i + 2) & 0x3f;\n                }\n                for (let j = 0; j < groupsOfSix.length; j++) {\n                  if (typeof groupsOfSix[j] === \"undefined\") {\n                    out += \"=\";\n                  } else {\n                    out += btoaLookup(groupsOfSix[j]);\n                  }\n                }\n              }\n              return out;\n            }\n\n            /**\n             * Lookup table for btoa(), which converts a six-bit number into the\n             * corresponding ASCII character.\n             */\n            const keystr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n            function btoaLookup(index) {\n              if (index >= 0 && index < 64) {\n                return keystr[index];\n              }\n\n              // Throw INVALID_CHARACTER_ERR exception here -- won't be hit in the tests.\n              return undefined;\n            }\n            var btoa_1 = btoa$2;\n\n            const atob$1 = atob_1;\n            const btoa$1 = btoa_1;\n            var abab = {\n              atob: atob$1,\n              btoa: btoa$1\n            };\n\n            /*sessionStorage, setTimeout, clearTimeout */\n\n            /** Class: Strophe.Connection\n             *  XMPP Connection manager.\n             *\n             *  This class is the main part of Strophe.  It manages a BOSH or websocket\n             *  connection to an XMPP server and dispatches events to the user callbacks\n             *  as data arrives. It supports SASL PLAIN, SASL SCRAM-SHA-1\n             *  and legacy authentication.\n             *\n             *  After creating a Strophe.Connection object, the user will typically\n             *  call connect() with a user supplied callback to handle connection level\n             *  events like authentication failure, disconnection, or connection\n             *  complete.\n             *\n             *  The user will also have several event handlers defined by using\n             *  addHandler() and addTimedHandler().  These will allow the user code to\n             *  respond to interesting stanzas or do something periodically with the\n             *  connection. These handlers will be active once authentication is\n             *  finished.\n             *\n             *  To send data to the connection, use send().\n             */\n\n            /** Constructor: Strophe.Connection\n             *  Create and initialize a Strophe.Connection object.\n             *\n             *  The transport-protocol for this connection will be chosen automatically\n             *  based on the given service parameter. URLs starting with \"ws://\" or\n             *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n             *  or without a protocol will use BOSH.\n             *\n             *  To make Strophe connect to the current host you can leave out the protocol\n             *  and host part and just pass the path, e.g.\n             *\n             *  > let conn = new Strophe.Connection(\"/http-bind/\");\n             *\n             *  Options common to both Websocket and BOSH:\n             *  ------------------------------------------\n             *\n             *  cookies:\n             *\n             *  The *cookies* option allows you to pass in cookies to be added to the\n             *  document. These cookies will then be included in the BOSH XMLHttpRequest\n             *  or in the websocket connection.\n             *\n             *  The passed in value must be a map of cookie names and string values.\n             *\n             *  > { \"myCookie\": {\n             *  >     \"value\": \"1234\",\n             *  >     \"domain\": \".example.org\",\n             *  >     \"path\": \"/\",\n             *  >     \"expires\": expirationDate\n             *  >     }\n             *  > }\n             *\n             *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n             *  Those cookies need to be set under those domains, for example they can be\n             *  set server-side by making a XHR call to that domain to ask it to set any\n             *  necessary cookies.\n             *\n             *  mechanisms:\n             *\n             *  The *mechanisms* option allows you to specify the SASL mechanisms that this\n             *  instance of Strophe.Connection (and therefore your XMPP client) will\n             *  support.\n             *\n             *  The value must be an array of objects with Strophe.SASLMechanism\n             *  prototypes.\n             *\n             *  If nothing is specified, then the following mechanisms (and their\n             *  priorities) are registered:\n             *\n             *      SCRAM-SHA-512 - 72\n             *      SCRAM-SHA-384 - 71\n             *      SCRAM-SHA-256 - 70\n             *      SCRAM-SHA-1   - 60\n             *      PLAIN         - 50\n             *      OAUTHBEARER   - 40\n             *      X-OAUTH2      - 30\n             *      ANONYMOUS     - 20\n             *      EXTERNAL      - 10\n             *\n             *  explicitResourceBinding:\n             *\n             *  If `explicitResourceBinding` is set to a truthy value, then the XMPP client\n             *  needs to explicitly call `Strophe.Connection.prototype.bind` once the XMPP\n             *  server has advertised the \"urn:ietf:params:xml:ns:xmpp-bind\" feature.\n             *\n             *  Making this step explicit allows client authors to first finish other\n             *  stream related tasks, such as setting up an XEP-0198 Stream Management\n             *  session, before binding the JID resource for this session.\n             *\n             *  WebSocket options:\n             *  ------------------\n             *\n             *  protocol:\n             *\n             *  If you want to connect to the current host with a WebSocket connection you\n             *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n             *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n             *  for Secure WebSocket.\n             *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n             *\n             *  > let conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n             *\n             *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n             *  of the current site.\n             *\n             *  Also because downgrading security is not permitted by browsers, when using\n             *  relative URLs both BOSH and WebSocket connections will use their secure\n             *  variants if the current connection to the site is also secure (https).\n             *\n             *  worker:\n             *\n             *  Set this option to URL from where the shared worker script should be loaded.\n             *\n             *  To run the websocket connection inside a shared worker.\n             *  This allows you to share a single websocket-based connection between\n             *  multiple Strophe.Connection instances, for example one per browser tab.\n             *\n             *  The script to use is the one in `src/shared-connection-worker.js`.\n             *\n             *  BOSH options:\n             *  -------------\n             *\n             *  By adding \"sync\" to the options, you can control if requests will\n             *  be made synchronously or not. The default behaviour is asynchronous.\n             *  If you want to make requests synchronous, make \"sync\" evaluate to true.\n             *  > let conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n             *\n             *  You can also toggle this on an already established connection.\n             *  > conn.options.sync = true;\n             *\n             *  The *customHeaders* option can be used to provide custom HTTP headers to be\n             *  included in the XMLHttpRequests made.\n             *\n             *  The *keepalive* option can be used to instruct Strophe to maintain the\n             *  current BOSH session across interruptions such as webpage reloads.\n             *\n             *  It will do this by caching the sessions tokens in sessionStorage, and when\n             *  \"restore\" is called it will check whether there are cached tokens with\n             *  which it can resume an existing session.\n             *\n             *  The *withCredentials* option should receive a Boolean value and is used to\n             *  indicate wether cookies should be included in ajax requests (by default\n             *  they're not).\n             *  Set this value to true if you are connecting to a BOSH service\n             *  and for some reason need to send cookies to it.\n             *  In order for this to work cross-domain, the server must also enable\n             *  credentials by setting the Access-Control-Allow-Credentials response header\n             *  to \"true\". For most usecases however this setting should be false (which\n             *  is the default).\n             *  Additionally, when using Access-Control-Allow-Credentials, the\n             *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n             *  instead must be restricted to actual domains.\n             *\n             *  The *contentType* option can be set to change the default Content-Type\n             *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n             *  CORS preflight requests that are sent to the server.\n             *\n             *  Parameters:\n             *    (String) service - The BOSH or WebSocket service URL.\n             *    (Object) options - A hash of configuration options\n             *\n             *  Returns:\n             *    A new Strophe.Connection object.\n             */\n\n            class Connection {\n              constructor(service, options) {\n                // The service URL\n                this.service = service;\n                // Configuration options\n                this.options = options || {};\n                this.setProtocol();\n\n                /* The connected JID. */\n                this.jid = '';\n                /* the JIDs domain */\n                this.domain = null;\n                /* stream:features */\n                this.features = null;\n\n                // SASL\n                this._sasl_data = {};\n                this.do_bind = false;\n                this.do_session = false;\n                this.mechanisms = {};\n\n                // handler lists\n                this.timedHandlers = [];\n                this.handlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = [];\n                this.protocolErrorHandlers = {\n                  'HTTP': {},\n                  'websocket': {}\n                };\n                this._idleTimeout = null;\n                this._disconnectTimeout = null;\n                this.authenticated = false;\n                this.connected = false;\n                this.disconnecting = false;\n                this.do_authentication = true;\n                this.paused = false;\n                this.restored = false;\n                this._data = [];\n                this._uniqueId = 0;\n                this._sasl_success_handler = null;\n                this._sasl_failure_handler = null;\n                this._sasl_challenge_handler = null;\n\n                // Max retries before disconnecting\n                this.maxRetries = 5;\n\n                // Call onIdle callback every 1/10th of a second\n                this._idleTimeout = setTimeout(() => this._onIdle(), 100);\n                addCookies(this.options.cookies);\n                this.registerSASLMechanisms(this.options.mechanisms);\n\n                // A client must always respond to incoming IQ \"set\" and \"get\" stanzas.\n                // See https://datatracker.ietf.org/doc/html/rfc6120#section-8.2.3\n                //\n                // This is a fallback handler which gets called when no other handler\n                // was called for a received IQ \"set\" or \"get\".\n                this.iqFallbackHandler = new Handler(iq => this.send($iq({\n                  type: 'error',\n                  id: iq.getAttribute('id')\n                }).c('error', {\n                  'type': 'cancel'\n                }).c('service-unavailable', {\n                  'xmlns': Strophe.NS.STANZAS\n                })), null, 'iq', ['get', 'set']);\n\n                // initialize plugins\n                for (const k in Strophe._connectionPlugins) {\n                  if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                    const F = function () {};\n                    F.prototype = Strophe._connectionPlugins[k];\n                    this[k] = new F();\n                    this[k].init(this);\n                  }\n                }\n              }\n\n              /** Function: setProtocol\n               *  Select protocal based on this.options or this.service\n               */\n              setProtocol() {\n                const proto = this.options.protocol || '';\n                if (this.options.worker) {\n                  this._proto = new Strophe.WorkerWebsocket(this);\n                } else if (this.service.indexOf('ws:') === 0 || this.service.indexOf('wss:') === 0 || proto.indexOf('ws') === 0) {\n                  this._proto = new Strophe.Websocket(this);\n                } else {\n                  this._proto = new Strophe.Bosh(this);\n                }\n              }\n\n              /** Function: reset\n               *  Reset the connection.\n               *\n               *  This function should be called after a connection is disconnected\n               *  before that connection is reused.\n               */\n              reset() {\n                this._proto._reset();\n\n                // SASL\n                this.do_session = false;\n                this.do_bind = false;\n\n                // handler lists\n                this.timedHandlers = [];\n                this.handlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = [];\n                this.authenticated = false;\n                this.connected = false;\n                this.disconnecting = false;\n                this.restored = false;\n                this._data = [];\n                this._requests = [];\n                this._uniqueId = 0;\n              }\n\n              /** Function: pause\n               *  Pause the request manager.\n               *\n               *  This will prevent Strophe from sending any more requests to the\n               *  server.  This is very useful for temporarily pausing\n               *  BOSH-Connections while a lot of send() calls are happening quickly.\n               *  This causes Strophe to send the data in a single request, saving\n               *  many request trips.\n               */\n              pause() {\n                this.paused = true;\n              }\n\n              /** Function: resume\n               *  Resume the request manager.\n               *\n               *  This resumes after pause() has been called.\n               */\n              resume() {\n                this.paused = false;\n              }\n\n              /** Function: getUniqueId\n               *  Generate a unique ID for use in <iq/> elements.\n               *\n               *  All <iq/> stanzas are required to have unique id attributes.  This\n               *  function makes creating these easy.  Each connection instance has\n               *  a counter which starts from zero, and the value of this counter\n               *  plus a colon followed by the suffix becomes the unique id. If no\n               *  suffix is supplied, the counter is used as the unique id.\n               *\n               *  Suffixes are used to make debugging easier when reading the stream\n               *  data, and their use is recommended.  The counter resets to 0 for\n               *  every new connection for the same reason.  For connections to the\n               *  same server that authenticate the same way, all the ids should be\n               *  the same, which makes it easy to see changes.  This is useful for\n               *  automated testing as well.\n               *\n               *  Parameters:\n               *    (String) suffix - A optional suffix to append to the id.\n               *\n               *  Returns:\n               *    A unique string to be used for the id attribute.\n               */\n              // eslint-disable-next-line class-methods-use-this\n              getUniqueId(suffix) {\n                const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n                  const r = Math.random() * 16 | 0,\n                    v = c === 'x' ? r : r & 0x3 | 0x8;\n                  return v.toString(16);\n                });\n                if (typeof suffix === 'string' || typeof suffix === 'number') {\n                  return uuid + ':' + suffix;\n                } else {\n                  return uuid + '';\n                }\n              }\n\n              /** Function: addProtocolErrorHandler\n               *  Register a handler function for when a protocol (websocker or HTTP)\n               *  error occurs.\n               *\n               *  NOTE: Currently only HTTP errors for BOSH requests are handled.\n               *  Patches that handle websocket errors would be very welcome.\n               *\n               *  Parameters:\n               *    (String) protocol - 'HTTP' or 'websocket'\n               *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\n               *    (Function) callback - Function that will fire on Http error\n               *\n               *  Example:\n               *  function onError(err_code){\n               *    //do stuff\n               *  }\n               *\n               *  let conn = Strophe.connect('http://example.com/http-bind');\n               *  conn.addProtocolErrorHandler('HTTP', 500, onError);\n               *  // Triggers HTTP 500 error and onError handler will be called\n               *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\n               */\n              addProtocolErrorHandler(protocol, status_code, callback) {\n                this.protocolErrorHandlers[protocol][status_code] = callback;\n              }\n\n              /** Function: connect\n               *  Starts the connection process.\n               *\n               *  As the connection process proceeds, the user supplied callback will\n               *  be triggered multiple times with status updates.  The callback\n               *  should take two arguments - the status code and the error condition.\n               *\n               *  The status code will be one of the values in the Strophe.Status\n               *  constants.  The error condition will be one of the conditions\n               *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n               *\n               *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n               *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n               *  of the optional parameters.\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID,\n               *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\n               *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\n               *      process the provided password value as an access token).\n               *    (String or Object) pass - The user's password, or an object containing\n               *      the users SCRAM client and server keys, in a fashion described as follows:\n               *\n               *      { name: String, representing the hash used (eg. SHA-1),\n               *        salt: String, base64 encoded salt used to derive the client key,\n               *        iter: Int,    the iteration count used to derive the client key,\n               *        ck:   String, the base64 encoding of the SCRAM client key\n               *        sk:   String, the base64 encoding of the SCRAM server key\n               *      }\n               *\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (String) route - The optional route value.\n               *    (String) authcid - The optional alternative authentication identity\n               *      (username) if intending to impersonate another user.\n               *      When using the SASL-EXTERNAL authentication mechanism, for example\n               *      with client certificates, then the authcid value is used to\n               *      determine whether an authorization JID (authzid) should be sent to\n               *      the server. The authzid should NOT be sent to the server if the\n               *      authzid and authcid are the same. So to prevent it from being sent\n               *      (for example when the JID is already contained in the client\n               *      certificate), set authcid to that same JID. See XEP-178 for more\n               *      details.\n               *     (Integer) disconnection_timeout - The optional disconnection timeout\n               *      in milliseconds before _doDisconnect will be called.\n               */\n              connect(jid, pass, callback, wait, hold, route, authcid) {\n                let disconnection_timeout = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 3000;\n                this.jid = jid;\n                /** Variable: authzid\n                 *  Authorization identity.\n                 */\n                this.authzid = Strophe.getBareJidFromJid(this.jid);\n\n                /** Variable: authcid\n                 *  Authentication identity (User name).\n                 */\n                this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n\n                /** Variable: pass\n                 *  Authentication identity (User password).\n                 *\n                 */\n                this.pass = pass;\n\n                /** Variable: scram_keys\n                 *  The SASL SCRAM client and server keys. This variable will be populated with a non-null\n                 *  object of the above described form after a successful SCRAM connection\n                 *\n                 */\n                this.scram_keys = null;\n                this.connect_callback = callback;\n                this.disconnecting = false;\n                this.connected = false;\n                this.authenticated = false;\n                this.restored = false;\n                this.disconnection_timeout = disconnection_timeout;\n\n                // parse jid for domain\n                this.domain = Strophe.getDomainFromJid(this.jid);\n                this._changeConnectStatus(Status.CONNECTING, null);\n                this._proto._connect(wait, hold, route);\n              }\n\n              /** Function: attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              attach(jid, sid, rid, callback, wait, hold, wind) {\n                if (this._proto._attach) {\n                  return this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n                } else {\n                  const error = new Error('The \"attach\" method is not available for your connection protocol');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              }\n\n              /** Function: restore\n               *  Attempt to restore a cached BOSH session.\n               *\n               *  This function is only useful in conjunction with providing the\n               *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n               *\n               *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n               *  RID (Request ID) and SID (Session ID) and then when this function is\n               *  called, it will attempt to restore the session from those cached\n               *  tokens.\n               *\n               *  This function must therefore be called instead of connect or attach.\n               *\n               *  For an example on how to use it, please see examples/restore.js\n               *\n               *  Parameters:\n               *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n               *    (Function) callback - The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              restore(jid, callback, wait, hold, wind) {\n                if (this._sessionCachingSupported()) {\n                  this._proto._restore(jid, callback, wait, hold, wind);\n                } else {\n                  const error = new Error('The \"restore\" method can only be used with a BOSH connection.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              }\n\n              /** PrivateFunction: _sessionCachingSupported\n               * Checks whether sessionStorage and JSON are supported and whether we're\n               * using BOSH.\n               */\n              _sessionCachingSupported() {\n                if (this._proto instanceof Strophe.Bosh) {\n                  if (!JSON) {\n                    return false;\n                  }\n                  try {\n                    sessionStorage.setItem('_strophe_', '_strophe_');\n                    sessionStorage.removeItem('_strophe_');\n                  } catch (e) {\n                    return false;\n                  }\n                  return true;\n                }\n                return false;\n              }\n\n              /** Function: xmlInput\n               *  User overrideable function that receives XML data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlInput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML data received by the connection.\n               */\n              // eslint-disable-next-line no-unused-vars, class-methods-use-this\n              xmlInput(elem) {\n                return;\n              }\n\n              /** Function: xmlOutput\n               *  User overrideable function that receives XML data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.xmlOutput = function (elem) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n               *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n               *\n               *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n               *  <Strophe.Bosh.strip> if you want to strip this tag.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XMLdata sent by the connection.\n               */\n              // eslint-disable-next-line no-unused-vars, class-methods-use-this\n              xmlOutput(elem) {\n                return;\n              }\n\n              /** Function: rawInput\n               *  User overrideable function that receives raw data coming into the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawInput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data received by the connection.\n               */\n              // eslint-disable-next-line no-unused-vars, class-methods-use-this\n              rawInput(data) {\n                return;\n              }\n\n              /** Function: rawOutput\n               *  User overrideable function that receives raw data sent to the\n               *  connection.\n               *\n               *  The default function does nothing.  User code can override this with\n               *  > Strophe.Connection.rawOutput = function (data) {\n               *  >   (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (String) data - The data sent by the connection.\n               */\n              // eslint-disable-next-line no-unused-vars, class-methods-use-this\n              rawOutput(data) {\n                return;\n              }\n\n              /** Function: nextValidRid\n               *  User overrideable function that receives the new valid rid.\n               *\n               *  The default function does nothing. User code can override this with\n               *  > Strophe.Connection.nextValidRid = function (rid) {\n               *  >    (user code)\n               *  > };\n               *\n               *  Parameters:\n               *    (Number) rid - The next valid rid\n               */\n              // eslint-disable-next-line no-unused-vars, class-methods-use-this\n              nextValidRid(rid) {\n                return;\n              }\n\n              /** Function: send\n               *  Send a stanza.\n               *\n               *  This function is called to push data onto the send queue to\n               *  go out over the wire.  Whenever a request is sent to the BOSH\n               *  server, all pending data is sent and the queue is flushed.\n               *\n               *  Parameters:\n               *    (XMLElement |\n               *     [XMLElement] |\n               *     Strophe.Builder) elem - The stanza to send.\n               */\n              send(elem) {\n                if (elem === null) {\n                  return;\n                }\n                if (typeof elem.sort === 'function') {\n                  for (let i = 0; i < elem.length; i++) {\n                    this._queueData(elem[i]);\n                  }\n                } else if (typeof elem.tree === 'function') {\n                  this._queueData(elem.tree());\n                } else {\n                  this._queueData(elem);\n                }\n                this._proto._send();\n              }\n\n              /** Function: flush\n               *  Immediately send any pending outgoing data.\n               *\n               *  Normally send() queues outgoing data until the next idle period\n               *  (100ms), which optimizes network use in the common cases when\n               *  several send()s are called in succession. flush() can be used to\n               *  immediately send all pending data.\n               */\n              flush() {\n                // cancel the pending idle period and run the idle function\n                // immediately\n                clearTimeout(this._idleTimeout);\n                this._onIdle();\n              }\n\n              /** Function: sendPresence\n               *  Helper function to send presence stanzas. The main benefit is for\n               *  sending presence stanzas for which you expect a responding presence\n               *  stanza with the same id (for example when leaving a chat room).\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the presence.\n               */\n              sendPresence(elem, callback, errback, timeout) {\n                let timeoutHandler = null;\n                if (typeof elem.tree === 'function') {\n                  elem = elem.tree();\n                }\n                let id = elem.getAttribute('id');\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId('sendPresence');\n                  elem.setAttribute('id', id);\n                }\n                if (typeof callback === 'function' || typeof errback === 'function') {\n                  const handler = this.addHandler(stanza => {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      this.deleteTimedHandler(timeoutHandler);\n                    }\n                    if (stanza.getAttribute('type') === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else if (callback) {\n                      callback(stanza);\n                    }\n                  }, null, 'presence', null, id);\n\n                  // if timeout specified, set up a timeout handler.\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, () => {\n                      // get rid of normal handler\n                      this.deleteHandler(handler);\n                      // call errback on timeout with null stanza\n                      if (errback) {\n                        errback(null);\n                      }\n                      return false;\n                    });\n                  }\n                }\n                this.send(elem);\n                return id;\n              }\n\n              /** Function: sendIQ\n               *  Helper function to send IQ stanzas.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza to send.\n               *    (Function) callback - The callback function for a successful request.\n               *    (Function) errback - The callback function for a failed or timed\n               *      out request.  On timeout, the stanza will be null.\n               *    (Integer) timeout - The time specified in milliseconds for a\n               *      timeout to occur.\n               *\n               *  Returns:\n               *    The id used to send the IQ.\n               */\n              sendIQ(elem, callback, errback, timeout) {\n                let timeoutHandler = null;\n                if (typeof elem.tree === 'function') {\n                  elem = elem.tree();\n                }\n                let id = elem.getAttribute('id');\n                if (!id) {\n                  // inject id if not found\n                  id = this.getUniqueId('sendIQ');\n                  elem.setAttribute('id', id);\n                }\n                if (typeof callback === 'function' || typeof errback === 'function') {\n                  const handler = this.addHandler(stanza => {\n                    // remove timeout handler if there is one\n                    if (timeoutHandler) {\n                      this.deleteTimedHandler(timeoutHandler);\n                    }\n                    const iqtype = stanza.getAttribute('type');\n                    if (iqtype === 'result') {\n                      if (callback) {\n                        callback(stanza);\n                      }\n                    } else if (iqtype === 'error') {\n                      if (errback) {\n                        errback(stanza);\n                      }\n                    } else {\n                      const error = new Error(`Got bad IQ type of ${iqtype}`);\n                      error.name = 'StropheError';\n                      throw error;\n                    }\n                  }, null, 'iq', ['error', 'result'], id);\n\n                  // if timeout specified, set up a timeout handler.\n                  if (timeout) {\n                    timeoutHandler = this.addTimedHandler(timeout, () => {\n                      // get rid of normal handler\n                      this.deleteHandler(handler);\n                      // call errback on timeout with null stanza\n                      if (errback) {\n                        errback(null);\n                      }\n                      return false;\n                    });\n                  }\n                }\n                this.send(elem);\n                return id;\n              }\n\n              /** PrivateFunction: _queueData\n               *  Queue outgoing data for later sending.  Also ensures that the data\n               *  is a DOMElement.\n               */\n              _queueData(element) {\n                if (element === null || !element.tagName || !element.childNodes) {\n                  const error = new Error('Cannot queue non-DOMElement.');\n                  error.name = 'StropheError';\n                  throw error;\n                }\n                this._data.push(element);\n              }\n\n              /** PrivateFunction: _sendRestart\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart() {\n                this._data.push('restart');\n                this._proto._sendRestart();\n                this._idleTimeout = setTimeout(() => this._onIdle(), 100);\n              }\n\n              /** Function: addTimedHandler\n               *  Add a timed handler to the connection.\n               *\n               *  This function adds a timed handler.  The provided handler will\n               *  be called every period milliseconds until it returns false,\n               *  the connection is terminated, or the handler is removed.  Handlers\n               *  that wish to continue being invoked should return true.\n               *\n               *  Because of method binding it is necessary to save the result of\n               *  this function if you wish to remove a handler with\n               *  deleteTimedHandler().\n               *\n               *  Note that user handlers are not active until authentication is\n               *  successful.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addTimedHandler(period, handler) {\n                const thand = new Strophe.TimedHandler(period, handler);\n                this.addTimeds.push(thand);\n                return thand;\n              }\n\n              /** Function: deleteTimedHandler\n               *  Delete a timed handler for a connection.\n               *\n               *  This function removes a timed handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addTimedHandler(),\n               *  but is the reference returned from addTimedHandler().\n               *\n               *  Parameters:\n               *    (Strophe.TimedHandler) handRef - The handler reference.\n               */\n              deleteTimedHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeTimeds.push(handRef);\n              }\n\n              /** Function: addHandler\n               *  Add a stanza handler for the connection.\n               *\n               *  This function adds a stanza handler to the connection.  The\n               *  handler callback will be called for any stanza that matches\n               *  the parameters.  Note that if multiple parameters are supplied,\n               *  they must all match for the handler to be invoked.\n               *\n               *  The handler will receive the stanza that triggered it as its argument.\n               *  *The handler should return true if it is to be invoked again;\n               *  returning false will remove the handler after it returns.*\n               *\n               *  As a convenience, the ns parameters applies to the top level element\n               *  and also any of its immediate children.  This is primarily to make\n               *  matching /iq/query elements easy.\n               *\n               *  Options\n               *  ~~~~~~~\n               *  With the options argument, you can specify boolean flags that affect how\n               *  matches are being done.\n               *\n               *  Currently two flags exist:\n               *\n               *  - matchBareFromJid:\n               *      When set to true, the from parameter and the\n               *      from attribute on the stanza will be matched as bare JIDs instead\n               *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\n               *      value of options. The default value for matchBareFromJid is false.\n               *\n               *  - ignoreNamespaceFragment:\n               *      When set to true, a fragment specified on the stanza's namespace\n               *      URL will be ignored when it's matched with the one configured for\n               *      the handler.\n               *\n               *      This means that if you register like this:\n               *      >   connection.addHandler(\n               *      >       handler,\n               *      >       'http://jabber.org/protocol/muc',\n               *      >       null, null, null, null,\n               *      >       {'ignoreNamespaceFragment': true}\n               *      >   );\n               *\n               *      Then a stanza with XML namespace of\n               *      'http://jabber.org/protocol/muc#user' will also be matched. If\n               *      'ignoreNamespaceFragment' is false, then only stanzas with\n               *      'http://jabber.org/protocol/muc' will be matched.\n               *\n               *  Deleting the handler\n               *  ~~~~~~~~~~~~~~~~~~~~\n               *  The return value should be saved if you wish to remove the handler\n               *  with deleteHandler().\n               *\n               *  Parameters:\n               *    (Function) handler - The user callback.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String|Array) type - The stanza type (or types if an array) to match.\n               *    (String) id - The stanza id attribute to match.\n               *    (String) from - The stanza from attribute to match.\n               *    (String) options - The handler options\n               *\n               *  Returns:\n               *    A reference to the handler that can be used to remove it.\n               */\n              addHandler(handler, ns, name, type, id, from, options) {\n                const hand = new Handler(handler, ns, name, type, id, from, options);\n                this.addHandlers.push(hand);\n                return hand;\n              }\n\n              /** Function: deleteHandler\n               *  Delete a stanza handler for a connection.\n               *\n               *  This function removes a stanza handler from the connection.  The\n               *  handRef parameter is *not* the function passed to addHandler(),\n               *  but is the reference returned from addHandler().\n               *\n               *  Parameters:\n               *    (Handler) handRef - The handler reference.\n               */\n              deleteHandler(handRef) {\n                // this must be done in the Idle loop so that we don't change\n                // the handlers during iteration\n                this.removeHandlers.push(handRef);\n                // If a handler is being deleted while it is being added,\n                // prevent it from getting added\n                const i = this.addHandlers.indexOf(handRef);\n                if (i >= 0) {\n                  this.addHandlers.splice(i, 1);\n                }\n              }\n\n              /** Function: registerSASLMechanisms\n               *\n               * Register the SASL mechanisms which will be supported by this instance of\n               * Strophe.Connection (i.e. which this XMPP client will support).\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\n               *\n               */\n              registerSASLMechanisms(mechanisms) {\n                this.mechanisms = {};\n                mechanisms = mechanisms || [Strophe.SASLAnonymous, Strophe.SASLExternal, Strophe.SASLOAuthBearer, Strophe.SASLXOAuth2, Strophe.SASLPlain, Strophe.SASLSHA1, Strophe.SASLSHA256, Strophe.SASLSHA384, Strophe.SASLSHA512];\n                mechanisms.forEach(m => this.registerSASLMechanism(m));\n              }\n\n              /** Function: registerSASLMechanism\n               *\n               * Register a single SASL mechanism, to be supported by this client.\n               *\n               *  Parameters:\n               *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\n               *\n               */\n              registerSASLMechanism(Mechanism) {\n                const mechanism = new Mechanism();\n                this.mechanisms[mechanism.mechname] = mechanism;\n              }\n\n              /** Function: disconnect\n               *  Start the graceful disconnection process.\n               *\n               *  This function starts the disconnection process.  This process starts\n               *  by sending unavailable presence and sending BOSH body of type\n               *  terminate.  A timeout handler makes sure that disconnection happens\n               *  even if the BOSH server does not respond.\n               *  If the Connection object isn't connected, at least tries to abort all pending requests\n               *  so the connection object won't generate successful requests (which were already opened).\n               *\n               *  The user supplied connection callback will be notified of the\n               *  progress as this process happens.\n               *\n               *  Parameters:\n               *    (String) reason - The reason the disconnect is occuring.\n               */\n              disconnect(reason) {\n                this._changeConnectStatus(Status.DISCONNECTING, reason);\n                if (reason) {\n                  Strophe.warn('Disconnect was called because: ' + reason);\n                } else {\n                  Strophe.info('Disconnect was called');\n                }\n                if (this.connected) {\n                  let pres = false;\n                  this.disconnecting = true;\n                  if (this.authenticated) {\n                    pres = $pres({\n                      'xmlns': Strophe.NS.CLIENT,\n                      'type': 'unavailable'\n                    });\n                  }\n                  // setup timeout handler\n                  this._disconnectTimeout = this._addSysTimedHandler(this.disconnection_timeout, this._onDisconnectTimeout.bind(this));\n                  this._proto._disconnect(pres);\n                } else {\n                  Strophe.warn('Disconnect was called before Strophe connected to the server');\n                  this._proto._abortAllRequests();\n                  this._doDisconnect();\n                }\n              }\n\n              /** PrivateFunction: _changeConnectStatus\n               *  _Private_ helper function that makes sure plugins and the user's\n               *  callback are notified of connection status changes.\n               *\n               *  Parameters:\n               *    (Integer) status - the new connection status, one of the values\n               *      in Strophe.Status\n               *    (String) condition - the error condition or null\n               *    (XMLElement) elem - The triggering stanza.\n               */\n              _changeConnectStatus(status, condition, elem) {\n                // notify all plugins listening for status changes\n                for (const k in Strophe._connectionPlugins) {\n                  if (Object.prototype.hasOwnProperty.call(Strophe._connectionPlugins, k)) {\n                    const plugin = this[k];\n                    if (plugin.statusChanged) {\n                      try {\n                        plugin.statusChanged(status, condition);\n                      } catch (err) {\n                        Strophe.error(`${k} plugin caused an exception changing status: ${err}`);\n                      }\n                    }\n                  }\n                }\n                // notify the user's callback\n                if (this.connect_callback) {\n                  try {\n                    this.connect_callback(status, condition, elem);\n                  } catch (e) {\n                    Strophe._handleError(e);\n                    Strophe.error(`User connection callback caused an exception: ${e}`);\n                  }\n                }\n              }\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  This is the last piece of the disconnection logic.  This resets the\n               *  connection and alerts the user's connection callback.\n               */\n              _doDisconnect(condition) {\n                if (typeof this._idleTimeout === 'number') {\n                  clearTimeout(this._idleTimeout);\n                }\n\n                // Cancel Disconnect Timeout\n                if (this._disconnectTimeout !== null) {\n                  this.deleteTimedHandler(this._disconnectTimeout);\n                  this._disconnectTimeout = null;\n                }\n                Strophe.debug('_doDisconnect was called');\n                this._proto._doDisconnect();\n                this.authenticated = false;\n                this.disconnecting = false;\n                this.restored = false;\n\n                // delete handlers\n                this.handlers = [];\n                this.timedHandlers = [];\n                this.removeTimeds = [];\n                this.removeHandlers = [];\n                this.addTimeds = [];\n                this.addHandlers = [];\n\n                // tell the parent we disconnected\n                this._changeConnectStatus(Status.DISCONNECTED, condition);\n                this.connected = false;\n              }\n\n              /** PrivateFunction: _dataRecv\n               *  _Private_ handler to processes incoming data from the the connection.\n               *\n               *  Except for _connect_cb handling the initial connection request,\n               *  this function handles the incoming data for all requests.  This\n               *  function also fires stanza handlers that match each incoming\n               *  stanza.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that has data ready.\n               *    (string) req - The stanza a raw string (optiona).\n               */\n              _dataRecv(req, raw) {\n                const elem = this._proto._reqToData(req);\n                if (elem === null) {\n                  return;\n                }\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n                    this.xmlInput(elem.childNodes[0]);\n                  } else {\n                    this.xmlInput(elem);\n                  }\n                }\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(elem));\n                  }\n                }\n\n                // remove handlers scheduled for deletion\n                while (this.removeHandlers.length > 0) {\n                  const hand = this.removeHandlers.pop();\n                  const i = this.handlers.indexOf(hand);\n                  if (i >= 0) {\n                    this.handlers.splice(i, 1);\n                  }\n                }\n\n                // add handlers scheduled for addition\n                while (this.addHandlers.length > 0) {\n                  this.handlers.push(this.addHandlers.pop());\n                }\n\n                // handle graceful disconnect\n                if (this.disconnecting && this._proto._emptyQueue()) {\n                  this._doDisconnect();\n                  return;\n                }\n                const type = elem.getAttribute('type');\n                if (type !== null && type === 'terminate') {\n                  // Don't process stanzas that come in after disconnect\n                  if (this.disconnecting) {\n                    return;\n                  }\n                  // an error occurred\n                  let cond = elem.getAttribute('condition');\n                  const conflict = elem.getElementsByTagName('conflict');\n                  if (cond !== null) {\n                    if (cond === 'remote-stream-error' && conflict.length > 0) {\n                      cond = 'conflict';\n                    }\n                    this._changeConnectStatus(Status.CONNFAIL, cond);\n                  } else {\n                    this._changeConnectStatus(Status.CONNFAIL, Strophe.ErrorCondition.UNKOWN_REASON);\n                  }\n                  this._doDisconnect(cond);\n                  return;\n                }\n\n                // send each incoming stanza through the handler chain\n                Strophe.forEachChild(elem, null, child => {\n                  const matches = [];\n                  this.handlers = this.handlers.reduce((handlers, handler) => {\n                    try {\n                      if (handler.isMatch(child) && (this.authenticated || !handler.user)) {\n                        if (handler.run(child)) {\n                          handlers.push(handler);\n                        }\n                        matches.push(handler);\n                      } else {\n                        handlers.push(handler);\n                      }\n                    } catch (e) {\n                      // if the handler throws an exception, we consider it as false\n                      Strophe.warn('Removing Strophe handlers due to uncaught exception: ' + e.message);\n                    }\n                    return handlers;\n                  }, []);\n\n                  // If no handler was fired for an incoming IQ with type=\"set\",\n                  // then we return an IQ error stanza with service-unavailable.\n                  if (!matches.length && this.iqFallbackHandler.isMatch(child)) {\n                    this.iqFallbackHandler.run(child);\n                  }\n                });\n              }\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the initial connection request\n               *  response from the BOSH server. It is used to set up authentication\n               *  handlers and start the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The current request.\n               *    (Function) _callback - low level (xmpp) connect callback function.\n               *      Useful for plugins with their own xmpp connect callback (when they\n               *      want to do something special).\n               */\n              _connect_cb(req, _callback, raw) {\n                Strophe.debug('_connect_cb was called');\n                this.connected = true;\n                let bodyWrap;\n                try {\n                  bodyWrap = this._proto._reqToData(req);\n                } catch (e) {\n                  if (e.name !== Strophe.ErrorCondition.BAD_FORMAT) {\n                    throw e;\n                  }\n                  this._changeConnectStatus(Status.CONNFAIL, Strophe.ErrorCondition.BAD_FORMAT);\n                  this._doDisconnect(Strophe.ErrorCondition.BAD_FORMAT);\n                }\n                if (!bodyWrap) {\n                  return;\n                }\n                if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n                  if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n                    this.xmlInput(bodyWrap.childNodes[0]);\n                  } else {\n                    this.xmlInput(bodyWrap);\n                  }\n                }\n                if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n                  if (raw) {\n                    this.rawInput(raw);\n                  } else {\n                    this.rawInput(Strophe.serialize(bodyWrap));\n                  }\n                }\n                const conncheck = this._proto._connect_cb(bodyWrap);\n                if (conncheck === Status.CONNFAIL) {\n                  return;\n                }\n\n                // Check for the stream:features tag\n                let hasFeatures;\n                if (bodyWrap.getElementsByTagNameNS) {\n                  hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, 'features').length > 0;\n                } else {\n                  hasFeatures = bodyWrap.getElementsByTagName('stream:features').length > 0 || bodyWrap.getElementsByTagName('features').length > 0;\n                }\n                if (!hasFeatures) {\n                  this._proto._no_auth_received(_callback);\n                  return;\n                }\n                const matched = Array.from(bodyWrap.getElementsByTagName('mechanism')).map(m => this.mechanisms[m.textContent]).filter(m => m);\n                if (matched.length === 0) {\n                  if (bodyWrap.getElementsByTagName('auth').length === 0) {\n                    // There are no matching SASL mechanisms and also no legacy\n                    // auth available.\n                    this._proto._no_auth_received(_callback);\n                    return;\n                  }\n                }\n                if (this.do_authentication !== false) {\n                  this.authenticate(matched);\n                }\n              }\n\n              /** Function: sortMechanismsByPriority\n               *\n               *  Sorts an array of objects with prototype SASLMechanism according to\n               *  their priorities.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               */\n              // eslint-disable-next-line  class-methods-use-this\n              sortMechanismsByPriority(mechanisms) {\n                // Sorting mechanisms according to priority.\n                for (let i = 0; i < mechanisms.length - 1; ++i) {\n                  let higher = i;\n                  for (let j = i + 1; j < mechanisms.length; ++j) {\n                    if (mechanisms[j].priority > mechanisms[higher].priority) {\n                      higher = j;\n                    }\n                  }\n                  if (higher !== i) {\n                    const swap = mechanisms[i];\n                    mechanisms[i] = mechanisms[higher];\n                    mechanisms[higher] = swap;\n                  }\n                }\n                return mechanisms;\n              }\n\n              /** Function: authenticate\n               * Set up authentication\n               *\n               *  Continues the initial connection request by setting up authentication\n               *  handlers and starting the authentication process.\n               *\n               *  SASL authentication will be attempted if available, otherwise\n               *  the code will fall back to legacy authentication.\n               *\n               *  Parameters:\n               *    (Array) matched - Array of SASL mechanisms supported.\n               *\n               */\n              authenticate(matched) {\n                if (!this._attemptSASLAuth(matched)) {\n                  this._attemptLegacyAuth();\n                }\n              }\n\n              /** PrivateFunction: _attemptSASLAuth\n               *\n               *  Iterate through an array of SASL mechanisms and attempt authentication\n               *  with the highest priority (enabled) mechanism.\n               *\n               *  Parameters:\n               *    (Array) mechanisms - Array of SASL mechanisms.\n               *\n               *  Returns:\n               *    (Boolean) mechanism_found - true or false, depending on whether a\n               *          valid SASL mechanism was found with which authentication could be\n               *          started.\n               */\n              _attemptSASLAuth(mechanisms) {\n                mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n                let mechanism_found = false;\n                for (let i = 0; i < mechanisms.length; ++i) {\n                  if (!mechanisms[i].test(this)) {\n                    continue;\n                  }\n                  this._sasl_success_handler = this._addSysHandler(this._sasl_success_cb.bind(this), null, 'success', null, null);\n                  this._sasl_failure_handler = this._addSysHandler(this._sasl_failure_cb.bind(this), null, 'failure', null, null);\n                  this._sasl_challenge_handler = this._addSysHandler(this._sasl_challenge_cb.bind(this), null, 'challenge', null, null);\n                  this._sasl_mechanism = mechanisms[i];\n                  this._sasl_mechanism.onStart(this);\n                  const request_auth_exchange = $build('auth', {\n                    'xmlns': Strophe.NS.SASL,\n                    'mechanism': this._sasl_mechanism.mechname\n                  });\n                  if (this._sasl_mechanism.isClientFirst) {\n                    const response = this._sasl_mechanism.clientChallenge(this);\n                    request_auth_exchange.t(abab.btoa(response));\n                  }\n                  this.send(request_auth_exchange.tree());\n                  mechanism_found = true;\n                  break;\n                }\n                return mechanism_found;\n              }\n\n              /** PrivateFunction: _sasl_challenge_cb\n               *  _Private_ handler for the SASL challenge\n               *\n               */\n              async _sasl_challenge_cb(elem) {\n                const challenge = abab.atob(getText(elem));\n                const response = await this._sasl_mechanism.onChallenge(this, challenge);\n                const stanza = $build('response', {\n                  'xmlns': Strophe.NS.SASL\n                });\n                if (response !== '') {\n                  stanza.t(abab.btoa(response));\n                }\n                this.send(stanza.tree());\n                return true;\n              }\n\n              /** PrivateFunction: _attemptLegacyAuth\n               *\n               *  Attempt legacy (i.e. non-SASL) authentication.\n               */\n              _attemptLegacyAuth() {\n                if (Strophe.getNodeFromJid(this.jid) === null) {\n                  // we don't have a node, which is required for non-anonymous\n                  // client connections\n                  this._changeConnectStatus(Status.CONNFAIL, Strophe.ErrorCondition.MISSING_JID_NODE);\n                  this.disconnect(Strophe.ErrorCondition.MISSING_JID_NODE);\n                } else {\n                  // Fall back to legacy authentication\n                  this._changeConnectStatus(Status.AUTHENTICATING, null);\n                  this._addSysHandler(this._onLegacyAuthIQResult.bind(this), null, null, null, '_auth_1');\n                  this.send($iq({\n                    'type': 'get',\n                    'to': this.domain,\n                    'id': '_auth_1'\n                  }).c('query', {\n                    xmlns: Strophe.NS.AUTH\n                  }).c('username', {}).t(Strophe.getNodeFromJid(this.jid)).tree());\n                }\n              }\n\n              /** PrivateFunction: _onLegacyAuthIQResult\n               *  _Private_ handler for legacy authentication.\n               *\n               *  This handler is called in response to the initial <iq type='get'/>\n               *  for legacy authentication.  It builds an authentication <iq/> and\n               *  sends it, creating a handler (calling back to _auth2_cb()) to\n               *  handle the result\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              // eslint-disable-next-line no-unused-vars\n              _onLegacyAuthIQResult(elem) {\n                // build plaintext auth iq\n                const iq = $iq({\n                  type: 'set',\n                  id: '_auth_2'\n                }).c('query', {\n                  xmlns: Strophe.NS.AUTH\n                }).c('username', {}).t(Strophe.getNodeFromJid(this.jid)).up().c('password').t(this.pass);\n                if (!Strophe.getResourceFromJid(this.jid)) {\n                  // since the user has not supplied a resource, we pick\n                  // a default one here.  unlike other auth methods, the server\n                  // cannot do this for us.\n                  this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n                }\n                iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n                this._addSysHandler(this._auth2_cb.bind(this), null, null, null, '_auth_2');\n                this.send(iq.tree());\n                return false;\n              }\n\n              /** PrivateFunction: _sasl_success_cb\n               *  _Private_ handler for succesful SASL authentication.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_success_cb(elem) {\n                if (this._sasl_data['server-signature']) {\n                  let serverSignature;\n                  const success = abab.atob(getText(elem));\n                  const attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n                  const matches = success.match(attribMatch);\n                  if (matches[1] === 'v') {\n                    serverSignature = matches[2];\n                  }\n                  if (serverSignature !== this._sasl_data['server-signature']) {\n                    // remove old handlers\n                    this.deleteHandler(this._sasl_failure_handler);\n                    this._sasl_failure_handler = null;\n                    if (this._sasl_challenge_handler) {\n                      this.deleteHandler(this._sasl_challenge_handler);\n                      this._sasl_challenge_handler = null;\n                    }\n                    this._sasl_data = {};\n                    return this._sasl_failure_cb(null);\n                  }\n                }\n                Strophe.info('SASL authentication succeeded.');\n                if (this._sasl_data.keys) {\n                  this.scram_keys = this._sasl_data.keys;\n                }\n                if (this._sasl_mechanism) {\n                  this._sasl_mechanism.onSuccess();\n                }\n                // remove old handlers\n                this.deleteHandler(this._sasl_failure_handler);\n                this._sasl_failure_handler = null;\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n                const streamfeature_handlers = [];\n                const wrapper = (handlers, elem) => {\n                  while (handlers.length) {\n                    this.deleteHandler(handlers.pop());\n                  }\n                  this._onStreamFeaturesAfterSASL(elem);\n                  return false;\n                };\n                streamfeature_handlers.push(this._addSysHandler(elem => wrapper(streamfeature_handlers, elem), null, 'stream:features', null, null));\n                streamfeature_handlers.push(this._addSysHandler(elem => wrapper(streamfeature_handlers, elem), Strophe.NS.STREAM, 'features', null, null));\n\n                // we must send an xmpp:restart now\n                this._sendRestart();\n                return false;\n              }\n\n              /** PrivateFunction: _onStreamFeaturesAfterSASL\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onStreamFeaturesAfterSASL(elem) {\n                // save stream:features for future usage\n                this.features = elem;\n                for (let i = 0; i < elem.childNodes.length; i++) {\n                  const child = elem.childNodes[i];\n                  if (child.nodeName === 'bind') {\n                    this.do_bind = true;\n                  }\n                  if (child.nodeName === 'session') {\n                    this.do_session = true;\n                  }\n                }\n                if (!this.do_bind) {\n                  this._changeConnectStatus(Status.AUTHFAIL, null);\n                  return false;\n                } else if (!this.options.explicitResourceBinding) {\n                  this.bind();\n                } else {\n                  this._changeConnectStatus(Status.BINDREQUIRED, null);\n                }\n                return false;\n              }\n\n              /** Function: bind\n               *\n               *  Sends an IQ to the XMPP server to bind a JID resource for this session.\n               *\n               *  https://tools.ietf.org/html/rfc6120#section-7.5\n               *\n               *  If `explicitResourceBinding` was set to a truthy value in the options\n               *  passed to the Strophe.Connection constructor, then this function needs\n               *  to be called explicitly by the client author.\n               *\n               *  Otherwise it'll be called automatically as soon as the XMPP server\n               *  advertises the \"urn:ietf:params:xml:ns:xmpp-bind\" stream feature.\n               */\n              bind() {\n                if (!this.do_bind) {\n                  Strophe.log(Strophe.LogLevel.INFO, `Strophe.Connection.prototype.bind called but \"do_bind\" is false`);\n                  return;\n                }\n                this._addSysHandler(this._onResourceBindResultIQ.bind(this), null, null, null, '_bind_auth_2');\n                const resource = Strophe.getResourceFromJid(this.jid);\n                if (resource) {\n                  this.send($iq({\n                    type: 'set',\n                    id: '_bind_auth_2'\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).c('resource', {}).t(resource).tree());\n                } else {\n                  this.send($iq({\n                    type: 'set',\n                    id: '_bind_auth_2'\n                  }).c('bind', {\n                    xmlns: Strophe.NS.BIND\n                  }).tree());\n                }\n              }\n\n              /** PrivateFunction: _onResourceBindIQ\n               *  _Private_ handler for binding result and session start.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onResourceBindResultIQ(elem) {\n                if (elem.getAttribute('type') === 'error') {\n                  Strophe.warn('Resource binding failed.');\n                  const conflict = elem.getElementsByTagName('conflict');\n                  let condition;\n                  if (conflict.length > 0) {\n                    condition = Strophe.ErrorCondition.CONFLICT;\n                  }\n                  this._changeConnectStatus(Status.AUTHFAIL, condition, elem);\n                  return false;\n                }\n                // TODO - need to grab errors\n                const bind = elem.getElementsByTagName('bind');\n                if (bind.length > 0) {\n                  const jidNode = bind[0].getElementsByTagName('jid');\n                  if (jidNode.length > 0) {\n                    this.authenticated = true;\n                    this.jid = getText(jidNode[0]);\n                    if (this.do_session) {\n                      this._establishSession();\n                    } else {\n                      this._changeConnectStatus(Status.CONNECTED, null);\n                    }\n                  }\n                } else {\n                  Strophe.warn('Resource binding failed.');\n                  this._changeConnectStatus(Status.AUTHFAIL, null, elem);\n                  return false;\n                }\n              }\n\n              /** PrivateFunction: _establishSession\n               *  Send IQ request to establish a session with the XMPP server.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               */\n              _establishSession() {\n                if (!this.do_session) {\n                  throw new Error(`Strophe.Connection.prototype._establishSession ` + `called but apparently ${Strophe.NS.SESSION} wasn't advertised by the server`);\n                }\n                this._addSysHandler(this._onSessionResultIQ.bind(this), null, null, null, '_session_auth_2');\n                this.send($iq({\n                  type: 'set',\n                  id: '_session_auth_2'\n                }).c('session', {\n                  xmlns: Strophe.NS.SESSION\n                }).tree());\n              }\n\n              /** PrivateFunction: _onSessionResultIQ\n               *  _Private_ handler for the server's IQ response to a client's session\n               *  request.\n               *\n               *  This sets Connection.authenticated to true on success, which\n               *  starts the processing of user handlers.\n               *\n               *  See https://xmpp.org/rfcs/rfc3921.html#session\n               *\n               *  Note: The protocol for session establishment has been determined as\n               *  unnecessary and removed in RFC-6121.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onSessionResultIQ(elem) {\n                if (elem.getAttribute('type') === 'result') {\n                  this.authenticated = true;\n                  this._changeConnectStatus(Status.CONNECTED, null);\n                } else if (elem.getAttribute('type') === 'error') {\n                  this.authenticated = false;\n                  Strophe.warn('Session creation failed.');\n                  this._changeConnectStatus(Status.AUTHFAIL, null, elem);\n                  return false;\n                }\n                return false;\n              }\n\n              /** PrivateFunction: _sasl_failure_cb\n               *  _Private_ handler for SASL authentication failure.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The matching stanza.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _sasl_failure_cb(elem) {\n                // delete unneeded handlers\n                if (this._sasl_success_handler) {\n                  this.deleteHandler(this._sasl_success_handler);\n                  this._sasl_success_handler = null;\n                }\n                if (this._sasl_challenge_handler) {\n                  this.deleteHandler(this._sasl_challenge_handler);\n                  this._sasl_challenge_handler = null;\n                }\n                if (this._sasl_mechanism) this._sasl_mechanism.onFailure();\n                this._changeConnectStatus(Status.AUTHFAIL, null, elem);\n                return false;\n              }\n\n              /** PrivateFunction: _auth2_cb\n               *  _Private_ handler to finish legacy authentication.\n               *\n               *  This handler is called when the result from the jabber:iq:auth\n               *  <iq/> stanza is returned.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The stanza that triggered the callback.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _auth2_cb(elem) {\n                if (elem.getAttribute('type') === 'result') {\n                  this.authenticated = true;\n                  this._changeConnectStatus(Status.CONNECTED, null);\n                } else if (elem.getAttribute('type') === 'error') {\n                  this._changeConnectStatus(Status.AUTHFAIL, null, elem);\n                  this.disconnect('authentication failed');\n                }\n                return false;\n              }\n\n              /** PrivateFunction: _addSysTimedHandler\n               *  _Private_ function to add a system level timed handler.\n               *\n               *  This function is used to add a Strophe.TimedHandler for the\n               *  library code.  System timed handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Integer) period - The period of the handler.\n               *    (Function) handler - The callback function.\n               */\n              _addSysTimedHandler(period, handler) {\n                const thand = new TimedHandler(period, handler);\n                thand.user = false;\n                this.addTimeds.push(thand);\n                return thand;\n              }\n\n              /** PrivateFunction: _addSysHandler\n               *  _Private_ function to add a system level stanza handler.\n               *\n               *  This function is used to add a Handler for the\n               *  library code.  System stanza handlers are allowed to run before\n               *  authentication is complete.\n               *\n               *  Parameters:\n               *    (Function) handler - The callback function.\n               *    (String) ns - The namespace to match.\n               *    (String) name - The stanza name to match.\n               *    (String) type - The stanza type attribute to match.\n               *    (String) id - The stanza id attribute to match.\n               */\n              _addSysHandler(handler, ns, name, type, id) {\n                const hand = new Handler(handler, ns, name, type, id);\n                hand.user = false;\n                this.addHandlers.push(hand);\n                return hand;\n              }\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  If the graceful disconnect process does not complete within the\n               *  time allotted, this handler finishes the disconnect anyway.\n               *\n               *  Returns:\n               *    false to remove the handler.\n               */\n              _onDisconnectTimeout() {\n                Strophe.debug('_onDisconnectTimeout was called');\n                this._changeConnectStatus(Status.CONNTIMEOUT, null);\n                this._proto._onDisconnectTimeout();\n                // actually disconnect\n                this._doDisconnect();\n                return false;\n              }\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler to process events during idle cycle.\n               *\n               *  This handler is called every 100ms to fire timed handlers that\n               *  are ready and keep poll requests going.\n               */\n              _onIdle() {\n                // add timed handlers scheduled for addition\n                // NOTE: we add before remove in the case a timed handler is\n                // added and then deleted before the next _onIdle() call.\n                while (this.addTimeds.length > 0) {\n                  this.timedHandlers.push(this.addTimeds.pop());\n                }\n\n                // remove timed handlers that have been scheduled for deletion\n                while (this.removeTimeds.length > 0) {\n                  const thand = this.removeTimeds.pop();\n                  const i = this.timedHandlers.indexOf(thand);\n                  if (i >= 0) {\n                    this.timedHandlers.splice(i, 1);\n                  }\n                }\n\n                // call ready timed handlers\n                const now = new Date().getTime();\n                const newList = [];\n                for (let i = 0; i < this.timedHandlers.length; i++) {\n                  const thand = this.timedHandlers[i];\n                  if (this.authenticated || !thand.user) {\n                    const since = thand.lastCalled + thand.period;\n                    if (since - now <= 0) {\n                      if (thand.run()) {\n                        newList.push(thand);\n                      }\n                    } else {\n                      newList.push(thand);\n                    }\n                  }\n                }\n                this.timedHandlers = newList;\n                clearTimeout(this._idleTimeout);\n                this._proto._onIdle();\n\n                // reactivate the timer only if connected\n                if (this.connected) {\n                  this._idleTimeout = setTimeout(() => this._onIdle(), 100);\n                }\n              }\n            }\n\n            /** Class: Strophe.SASLMechanism\n             *\n             *  Encapsulates an SASL authentication mechanism.\n             *\n             *  User code may override the priority for each mechanism or disable it completely.\n             *  See <priority> for information about changing priority and <test> for informatian on\n             *  how to disable a mechanism.\n             *\n             *  By default, all mechanisms are enabled and the priorities are\n             *\n             *      SCRAM-SHA-512 - 72\n             *      SCRAM-SHA-384 - 71\n             *      SCRAM-SHA-256 - 70\n             *      SCRAM-SHA-1   - 60\n             *      PLAIN         - 50\n             *      OAUTHBEARER   - 40\n             *      X-OAUTH2      - 30\n             *      ANONYMOUS     - 20\n             *      EXTERNAL      - 10\n             *\n             *  See: Strophe.Connection.addSupportedSASLMechanisms\n             */\n            class SASLMechanism {\n              /**\n               * PrivateConstructor: Strophe.SASLMechanism\n               * SASL auth mechanism abstraction.\n               *\n               *  Parameters:\n               *    (String) name - SASL Mechanism name.\n               *    (Boolean) isClientFirst - If client should send response first without challenge.\n               *    (Number) priority - Priority.\n               *\n               *  Returns:\n               *    A new Strophe.SASLMechanism object.\n               */\n              constructor(name, isClientFirst, priority) {\n                /** PrivateVariable: mechname\n                 *  Mechanism name.\n                 */\n                this.mechname = name;\n\n                /** PrivateVariable: isClientFirst\n                 *  If client sends response without initial server challenge.\n                 */\n                this.isClientFirst = isClientFirst;\n\n                /** Variable: priority\n                 *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n                 *  Users may override this to prioritize mechanisms differently.\n                 *\n                 *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n                 *\n                 *  > Strophe.SASLPlain.priority = Strophe.SASLSHA1.priority;\n                 *\n                 *  See <SASL mechanisms> for a list of available mechanisms.\n                 *\n                 */\n                this.priority = priority;\n              }\n\n              /**\n               *  Function: test\n               *  Checks if mechanism able to run.\n               *  To disable a mechanism, make this return false;\n               *\n               *  To disable plain authentication run\n               *  > Strophe.SASLPlain.test = function() {\n               *  >   return false;\n               *  > }\n               *\n               *  See <SASL mechanisms> for a list of available mechanisms.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *\n               *  Returns:\n               *    (Boolean) If mechanism was able to run.\n               */\n              // eslint-disable-next-line class-methods-use-this\n              test() {\n                return true;\n              }\n\n              /** PrivateFunction: onStart\n               *  Called before starting mechanism on some connection.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               */\n              onStart(connection) {\n                this._connection = connection;\n              }\n\n              /** PrivateFunction: onChallenge\n               *  Called by protocol implementation on incoming challenge.\n               *\n               *  By deafult, if the client is expected to send data first (isClientFirst === true),\n               *  this method is called with `challenge` as null on the first call,\n               *  unless `clientChallenge` is overridden in the relevant subclass.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *    (String) challenge - current challenge to handle.\n               *\n               *  Returns:\n               *    (String) Mechanism response.\n               */\n              // eslint-disable-next-line no-unused-vars, class-methods-use-this\n              onChallenge(connection, challenge) {\n                throw new Error('You should implement challenge handling!');\n              }\n\n              /** PrivateFunction: clientChallenge\n               *  Called by the protocol implementation if the client is expected to send\n               *  data first in the authentication exchange (i.e. isClientFirst === true).\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - Target Connection.\n               *\n               *  Returns:\n               *    (String) Mechanism response.\n               */\n              clientChallenge(connection) {\n                if (!this.isClientFirst) {\n                  throw new Error('clientChallenge should not be called if isClientFirst is false!');\n                }\n                return this.onChallenge(connection);\n              }\n\n              /** PrivateFunction: onFailure\n               *  Protocol informs mechanism implementation about SASL failure.\n               */\n              onFailure() {\n                this._connection = null;\n              }\n\n              /** PrivateFunction: onSuccess\n               *  Protocol informs mechanism implementation about SASL success.\n               */\n              onSuccess() {\n                this._connection = null;\n              }\n            }\n\n            // Building SASL callbacks\n\n            class SASLAnonymous extends SASLMechanism {\n              /** PrivateConstructor: SASLAnonymous\n               *  SASL ANONYMOUS authentication.\n               */\n              constructor() {\n                let mechname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ANONYMOUS';\n                let isClientFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;\n                super(mechname, isClientFirst, priority);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              test(connection) {\n                return connection.authcid === null;\n              }\n            }\n\n            class SASLExternal extends SASLMechanism {\n              /** PrivateConstructor: SASLExternal\n               *  SASL EXTERNAL authentication.\n               *\n               *  The EXTERNAL mechanism allows a client to request the server to use\n               *  credentials established by means external to the mechanism to\n               *  authenticate the client. The external means may be, for instance,\n               *  TLS services.\n               */\n              constructor() {\n                let mechname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'EXTERNAL';\n                let isClientFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n                super(mechname, isClientFirst, priority);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              onChallenge(connection) {\n                /** According to XEP-178, an authzid SHOULD NOT be presented when the\n                 * authcid contained or implied in the client certificate is the JID (i.e.\n                 * authzid) with which the user wants to log in as.\n                 *\n                 * To NOT send the authzid, the user should therefore set the authcid equal\n                 * to the JID when instantiating a new Strophe.Connection object.\n                 */\n                return connection.authcid === connection.authzid ? '' : connection.authzid;\n              }\n            }\n\n            class SASLOAuthBearer extends SASLMechanism {\n              /** PrivateConstructor: SASLOAuthBearer\n               *  SASL OAuth Bearer authentication.\n               */\n              constructor() {\n                let mechname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'OAUTHBEARER';\n                let isClientFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 40;\n                super(mechname, isClientFirst, priority);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              test(connection) {\n                return connection.pass !== null;\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              onChallenge(connection) {\n                let auth_str = 'n,';\n                if (connection.authcid !== null) {\n                  auth_str = auth_str + 'a=' + connection.authzid;\n                }\n                auth_str = auth_str + ',';\n                auth_str = auth_str + '\\u0001';\n                auth_str = auth_str + 'auth=Bearer ';\n                auth_str = auth_str + connection.pass;\n                auth_str = auth_str + '\\u0001';\n                auth_str = auth_str + '\\u0001';\n                return utils.utf16to8(auth_str);\n              }\n            }\n\n            class SASLPlain extends SASLMechanism {\n              /** PrivateConstructor: SASLPlain\n               *  SASL PLAIN authentication.\n               */\n              constructor() {\n                let mechname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'PLAIN';\n                let isClientFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;\n                super(mechname, isClientFirst, priority);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              test(connection) {\n                return connection.authcid !== null;\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              onChallenge(connection) {\n                const {\n                  authcid,\n                  authzid,\n                  domain,\n                  pass\n                } = connection;\n                if (!domain) {\n                  throw new Error('SASLPlain onChallenge: domain is not defined!');\n                }\n                // Only include authzid if it differs from authcid.\n                // See: https://tools.ietf.org/html/rfc6120#section-6.3.8\n                let auth_str = authzid !== `${authcid}@${domain}` ? authzid : '';\n                auth_str = auth_str + '\\u0000';\n                auth_str = auth_str + authcid;\n                auth_str = auth_str + '\\u0000';\n                auth_str = auth_str + pass;\n                return utils.utf16to8(auth_str);\n              }\n            }\n\n            async function scramClientProof(authMessage, clientKey, hashName) {\n              const storedKey = await crypto.subtle.importKey('raw', await crypto.subtle.digest(hashName, clientKey), {\n                'name': 'HMAC',\n                'hash': hashName\n              }, false, ['sign']);\n              const clientSignature = await crypto.subtle.sign('HMAC', storedKey, utils.stringToArrayBuf(authMessage));\n              return utils.xorArrayBuffers(clientKey, clientSignature);\n            }\n\n            /* This function parses the information in a SASL SCRAM challenge response,\n             * into an object of the form\n             * { nonce: String,\n             *   salt:  ArrayBuffer,\n             *   iter:  Int\n             * }\n             * Returns undefined on failure.\n             */\n            function scramParseChallenge(challenge) {\n              let nonce, salt, iter;\n              const attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n              while (challenge.match(attribMatch)) {\n                const matches = challenge.match(attribMatch);\n                challenge = challenge.replace(matches[0], '');\n                switch (matches[1]) {\n                  case 'r':\n                    nonce = matches[2];\n                    break;\n                  case 's':\n                    salt = utils.base64ToArrayBuf(matches[2]);\n                    break;\n                  case 'i':\n                    iter = parseInt(matches[2], 10);\n                    break;\n                  default:\n                    return undefined;\n                }\n              }\n\n              // Consider iteration counts less than 4096 insecure, as reccommended by\n              // RFC 5802\n              if (isNaN(iter) || iter < 4096) {\n                Strophe.warn('Failing SCRAM authentication because server supplied iteration count < 4096.');\n                return undefined;\n              }\n              if (!salt) {\n                Strophe.warn('Failing SCRAM authentication because server supplied incorrect salt.');\n                return undefined;\n              }\n              return {\n                'nonce': nonce,\n                'salt': salt,\n                'iter': iter\n              };\n            }\n\n            /* Derive the client and server keys given a string password,\n             * a hash name, and a bit length.\n             * Returns an object of the following form:\n             * { ck: ArrayBuffer, the client key\n             *   sk: ArrayBuffer, the server key\n             * }\n             */\n            async function scramDeriveKeys(password, salt, iter, hashName, hashBits) {\n              const saltedPasswordBits = await crypto.subtle.deriveBits({\n                'name': 'PBKDF2',\n                'salt': salt,\n                'iterations': iter,\n                'hash': {\n                  'name': hashName\n                }\n              }, await crypto.subtle.importKey('raw', utils.stringToArrayBuf(password), 'PBKDF2', false, ['deriveBits']), hashBits);\n              const saltedPassword = await crypto.subtle.importKey('raw', saltedPasswordBits, {\n                'name': 'HMAC',\n                'hash': hashName\n              }, false, ['sign']);\n              return {\n                'ck': await crypto.subtle.sign('HMAC', saltedPassword, utils.stringToArrayBuf('Client Key')),\n                'sk': await crypto.subtle.sign('HMAC', saltedPassword, utils.stringToArrayBuf('Server Key'))\n              };\n            }\n            async function scramServerSign(authMessage, sk, hashName) {\n              const serverKey = await crypto.subtle.importKey('raw', sk, {\n                'name': 'HMAC',\n                'hash': hashName\n              }, false, ['sign']);\n              return crypto.subtle.sign('HMAC', serverKey, utils.stringToArrayBuf(authMessage));\n            }\n\n            // Generate an ASCII nonce (not containing the ',' character)\n            function generate_cnonce() {\n              // generate 16 random bytes of nonce, base64 encoded\n              const bytes = new Uint8Array(16);\n              return utils.arrayBufToBase64(crypto.getRandomValues(bytes).buffer);\n            }\n            const scram = {\n              /* On success, sets\n               * connection_sasl_data[\"server-signature\"]\n               * and\n               * connection._sasl_data.keys\n               *\n               * The server signature should be verified after this function completes..\n               *\n               * On failure, returns connection._sasl_failure_cb();\n               */\n              async scramResponse(connection, challenge, hashName, hashBits) {\n                var _connection$pass, _connection$pass2, _connection$pass3;\n                const cnonce = connection._sasl_data.cnonce;\n                const challengeData = scramParseChallenge(challenge);\n\n                // The RFC requires that we verify the (server) nonce has the client\n                // nonce as an initial substring.\n                if (!challengeData && (challengeData === null || challengeData === void 0 ? void 0 : challengeData.nonce.slice(0, cnonce.length)) !== cnonce) {\n                  Strophe.warn('Failing SCRAM authentication because server supplied incorrect nonce.');\n                  connection._sasl_data = {};\n                  return connection._sasl_failure_cb();\n                }\n                let clientKey, serverKey;\n\n                // Either restore the client key and server key passed in, or derive new ones\n                if (((_connection$pass = connection.pass) === null || _connection$pass === void 0 ? void 0 : _connection$pass.name) === hashName && ((_connection$pass2 = connection.pass) === null || _connection$pass2 === void 0 ? void 0 : _connection$pass2.salt) === utils.arrayBufToBase64(challengeData.salt) && ((_connection$pass3 = connection.pass) === null || _connection$pass3 === void 0 ? void 0 : _connection$pass3.iter) === challengeData.iter) {\n                  clientKey = utils.base64ToArrayBuf(connection.pass.ck);\n                  serverKey = utils.base64ToArrayBuf(connection.pass.sk);\n                } else if (typeof connection.pass === 'string' || connection.pass instanceof String) {\n                  const keys = await scramDeriveKeys(connection.pass, challengeData.salt, challengeData.iter, hashName, hashBits);\n                  clientKey = keys.ck;\n                  serverKey = keys.sk;\n                } else {\n                  return connection._sasl_failure_cb();\n                }\n                const clientFirstMessageBare = connection._sasl_data['client-first-message-bare'];\n                const serverFirstMessage = challenge;\n                const clientFinalMessageBare = `c=biws,r=${challengeData.nonce}`;\n                const authMessage = `${clientFirstMessageBare},${serverFirstMessage},${clientFinalMessageBare}`;\n                const clientProof = await scramClientProof(authMessage, clientKey, hashName);\n                const serverSignature = await scramServerSign(authMessage, serverKey, hashName);\n                connection._sasl_data['server-signature'] = utils.arrayBufToBase64(serverSignature);\n                connection._sasl_data.keys = {\n                  'name': hashName,\n                  'iter': challengeData.iter,\n                  'salt': utils.arrayBufToBase64(challengeData.salt),\n                  'ck': utils.arrayBufToBase64(clientKey),\n                  'sk': utils.arrayBufToBase64(serverKey)\n                };\n                return `${clientFinalMessageBare},p=${utils.arrayBufToBase64(clientProof)}`;\n              },\n              // Returns a string containing the client first message\n              clientChallenge(connection, test_cnonce) {\n                const cnonce = test_cnonce || generate_cnonce();\n                const client_first_message_bare = `n=${connection.authcid},r=${cnonce}`;\n                connection._sasl_data.cnonce = cnonce;\n                connection._sasl_data['client-first-message-bare'] = client_first_message_bare;\n                return `n,,${client_first_message_bare}`;\n              }\n            };\n\n            class SASLSHA1 extends SASLMechanism {\n              /** PrivateConstructor: SASLSHA1\n               *  SASL SCRAM SHA 1 authentication.\n               */\n              constructor() {\n                let mechname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'SCRAM-SHA-1';\n                let isClientFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60;\n                super(mechname, isClientFirst, priority);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              test(connection) {\n                return connection.authcid !== null;\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              async onChallenge(connection, challenge) {\n                return await scram.scramResponse(connection, challenge, 'SHA-1', 160);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              clientChallenge(connection, test_cnonce) {\n                return scram.clientChallenge(connection, test_cnonce);\n              }\n            }\n\n            class SASLSHA256 extends SASLMechanism {\n              /** PrivateConstructor: SASLSHA256\n               *  SASL SCRAM SHA 256 authentication.\n               */\n              constructor() {\n                let mechname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'SCRAM-SHA-256';\n                let isClientFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 70;\n                super(mechname, isClientFirst, priority);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              test(connection) {\n                return connection.authcid !== null;\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              async onChallenge(connection, challenge) {\n                return await scram.scramResponse(connection, challenge, 'SHA-256', 256);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              clientChallenge(connection, test_cnonce) {\n                return scram.clientChallenge(connection, test_cnonce);\n              }\n            }\n\n            class SASLSHA384 extends SASLMechanism {\n              /** PrivateConstructor: SASLSHA384\n               *  SASL SCRAM SHA 384 authentication.\n               */\n              constructor() {\n                let mechname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'SCRAM-SHA-384';\n                let isClientFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 71;\n                super(mechname, isClientFirst, priority);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              test(connection) {\n                return connection.authcid !== null;\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              async onChallenge(connection, challenge) {\n                return await scram.scramResponse(connection, challenge, 'SHA-384', 384);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              clientChallenge(connection, test_cnonce) {\n                return scram.clientChallenge(connection, test_cnonce);\n              }\n            }\n\n            class SASLSHA512 extends SASLMechanism {\n              /** PrivateConstructor: SASLSHA512\n               *  SASL SCRAM SHA 512 authentication.\n               */\n              constructor() {\n                let mechname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'SCRAM-SHA-512';\n                let isClientFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 72;\n                super(mechname, isClientFirst, priority);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              test(connection) {\n                return connection.authcid !== null;\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              async onChallenge(connection, challenge) {\n                return await scram.scramResponse(connection, challenge, 'SHA-512', 512);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              clientChallenge(connection, test_cnonce) {\n                return scram.clientChallenge(connection, test_cnonce);\n              }\n            }\n\n            class SASLXOAuth2 extends SASLMechanism {\n              /** PrivateConstructor: SASLXOAuth2\n               *  SASL X-OAuth2 authentication.\n               */\n              constructor() {\n                let mechname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'X-OAUTH2';\n                let isClientFirst = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n                let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30;\n                super(mechname, isClientFirst, priority);\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              test(connection) {\n                return connection.pass !== null;\n              }\n\n              // eslint-disable-next-line class-methods-use-this\n              onChallenge(connection) {\n                let auth_str = '\\u0000';\n                if (connection.authcid !== null) {\n                  auth_str = auth_str + connection.authzid;\n                }\n                auth_str = auth_str + '\\u0000';\n                auth_str = auth_str + connection.pass;\n                return utils.utf16to8(auth_str);\n              }\n            }\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2018, OGG, LLC\n            */\n\n            /** Class: Strophe\n             *  An object container for all Strophe library functions.\n             *\n             *  This class is just a container for all the objects and constants\n             *  used in the library.  It is not meant to be instantiated, but to\n             *  provide a namespace for library objects, constants, and functions.\n             */\n            const Strophe = {\n              /** Constant: VERSION */\n              VERSION: '1.6.1',\n              Builder,\n              Connection,\n              ElementType,\n              ErrorCondition,\n              Handler,\n              LogLevel,\n              NS,\n              SASLMechanism,\n              Status,\n              TimedHandler,\n              ...utils$1,\n              XHTML: {\n                ...XHTML,\n                validTag: validTag,\n                validCSS: validCSS,\n                validAttribute: validAttribute\n              },\n              /** Function: addNamespace\n               *  This function is used to extend the current namespaces in\n               *  Strophe.NS.  It takes a key and a value with the key being the\n               *  name of the new namespace, with its actual value.\n               *  For example:\n               *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n               *\n               *  Parameters:\n               *    (String) name - The name under which the namespace will be\n               *      referenced under Strophe.NS\n               *    (String) value - The actual namespace.\n               */\n              addNamespace(name, value) {\n                Strophe.NS[name] = value;\n              },\n              /** PrivateFunction: _handleError\n               *  _Private_ function that properly logs an error to the console\n               */\n              _handleError(e) {\n                if (typeof e.stack !== 'undefined') {\n                  Strophe.fatal(e.stack);\n                }\n                if (e.sourceURL) {\n                  Strophe.fatal('error: ' + this.handler + ' ' + e.sourceURL + ':' + e.line + ' - ' + e.name + ': ' + e.message);\n                } else if (e.fileName) {\n                  Strophe.fatal('error: ' + this.handler + ' ' + e.fileName + ':' + e.lineNumber + ' - ' + e.name + ': ' + e.message);\n                } else {\n                  Strophe.fatal('error: ' + e.message);\n                }\n              },\n              /** Function: log\n               *  User overrideable logging function.\n               *\n               *  This function is called whenever the Strophe library calls any\n               *  of the logging functions.  The default implementation of this\n               *  function logs only fatal errors.  If client code wishes to handle the logging\n               *  messages, it should override this with\n               *  > Strophe.log = function (level, msg) {\n               *  >   (user code here)\n               *  > };\n               *\n               *  Please note that data sent and received over the wire is logged\n               *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n               *\n               *  The different levels and their meanings are\n               *\n               *    DEBUG - Messages useful for debugging purposes.\n               *    INFO - Informational messages.  This is mostly information like\n               *      'disconnect was called' or 'SASL auth succeeded'.\n               *    WARN - Warnings about potential problems.  This is mostly used\n               *      to report transient connection errors like request timeouts.\n               *    ERROR - Some error occurred.\n               *    FATAL - A non-recoverable fatal error occurred.\n               *\n               *  Parameters:\n               *    (Integer) level - The log level of the log message.  This will\n               *      be one of the values in Strophe.LogLevel.\n               *    (String) msg - The log message.\n               */\n              log(level, msg) {\n                if (level === this.LogLevel.FATAL) {\n                  var _console;\n                  (_console = console) === null || _console === void 0 ? void 0 : _console.error(msg);\n                }\n              },\n              /** Function: debug\n               *  Log a message at the Strophe.LogLevel.DEBUG level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              debug(msg) {\n                this.log(this.LogLevel.DEBUG, msg);\n              },\n              /** Function: info\n               *  Log a message at the Strophe.LogLevel.INFO level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              info(msg) {\n                this.log(this.LogLevel.INFO, msg);\n              },\n              /** Function: warn\n               *  Log a message at the Strophe.LogLevel.WARN level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              warn(msg) {\n                this.log(this.LogLevel.WARN, msg);\n              },\n              /** Function: error\n               *  Log a message at the Strophe.LogLevel.ERROR level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              error(msg) {\n                this.log(this.LogLevel.ERROR, msg);\n              },\n              /** Function: fatal\n               *  Log a message at the Strophe.LogLevel.FATAL level.\n               *\n               *  Parameters:\n               *    (String) msg - The log message.\n               */\n              fatal(msg) {\n                this.log(this.LogLevel.FATAL, msg);\n              },\n              /** PrivateVariable: _requestId\n               *  _Private_ variable that keeps track of the request ids for\n               *  connections.\n               */\n              _requestId: 0,\n              /** PrivateVariable: Strophe.connectionPlugins\n               *  _Private_ variable Used to store plugin names that need\n               *  initialization on Strophe.Connection construction.\n               */\n              _connectionPlugins: {},\n              /** Function: addConnectionPlugin\n               *  Extends the Strophe.Connection object with the given plugin.\n               *\n               *  Parameters:\n               *    (String) name - The name of the extension.\n               *    (Object) ptype - The plugin's prototype.\n               */\n              addConnectionPlugin(name, ptype) {\n                Strophe._connectionPlugins[name] = ptype;\n              }\n            };\n\n            /** Constants: SASL mechanisms\n             *  Available authentication mechanisms\n             *\n             *  Strophe.SASLAnonymous   - SASL ANONYMOUS authentication.\n             *  Strophe.SASLPlain       - SASL PLAIN authentication.\n             *  Strophe.SASLSHA1        - SASL SCRAM-SHA-1 authentication\n             *  Strophe.SASLSHA256      - SASL SCRAM-SHA-256 authentication\n             *  Strophe.SASLSHA384      - SASL SCRAM-SHA-384 authentication\n             *  Strophe.SASLSHA512      - SASL SCRAM-SHA-512 authentication\n             *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n             *  Strophe.SASLExternal    - SASL EXTERNAL authentication\n             *  Strophe.SASLXOAuth2     - SASL X-OAuth2 authentication\n             */\n            Strophe.SASLAnonymous = SASLAnonymous;\n            Strophe.SASLPlain = SASLPlain;\n            Strophe.SASLSHA1 = SASLSHA1;\n            Strophe.SASLSHA256 = SASLSHA256;\n            Strophe.SASLSHA384 = SASLSHA384;\n            Strophe.SASLSHA512 = SASLSHA512;\n            Strophe.SASLOAuthBearer = SASLOAuthBearer;\n            Strophe.SASLExternal = SASLExternal;\n            Strophe.SASLXOAuth2 = SASLXOAuth2;\n            var core = {\n              'Strophe': Strophe,\n              '$build': $build,\n              '$iq': $iq,\n              '$msg': $msg,\n              '$pres': $pres\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n\n            /** PrivateClass: Strophe.Request\n             *  _Private_ helper class that provides a cross implementation abstraction\n             *  for a BOSH related XMLHttpRequest.\n             *\n             *  The Strophe.Request class is used internally to encapsulate BOSH request\n             *  information.  It is not meant to be used from user's code.\n             */\n            Strophe.Request = class Request {\n              /** PrivateConstructor: Strophe.Request\n               *  Create and initialize a new Strophe.Request object.\n               *\n               *  Parameters:\n               *    (XMLElement) elem - The XML data to be sent in the request.\n               *    (Function) func - The function that will be called when the\n               *      XMLHttpRequest readyState changes.\n               *    (Integer) rid - The BOSH rid attribute associated with this request.\n               *    (Integer) sends - The number of times this same request has been sent.\n               */\n              constructor(elem, func, rid, sends) {\n                this.id = ++Strophe._requestId;\n                this.xmlData = elem;\n                this.data = Strophe.serialize(elem);\n                // save original function in case we need to make a new request\n                // from this one.\n                this.origFunc = func;\n                this.func = func;\n                this.rid = rid;\n                this.date = NaN;\n                this.sends = sends || 0;\n                this.abort = false;\n                this.dead = null;\n                this.age = function () {\n                  if (!this.date) {\n                    return 0;\n                  }\n                  const now = new Date();\n                  return (now - this.date) / 1000;\n                };\n                this.timeDead = function () {\n                  if (!this.dead) {\n                    return 0;\n                  }\n                  const now = new Date();\n                  return (now - this.dead) / 1000;\n                };\n                this.xhr = this._newXHR();\n              }\n\n              /** PrivateFunction: getResponse\n               *  Get a response from the underlying XMLHttpRequest.\n               *\n               *  This function attempts to get a response from the request and checks\n               *  for errors.\n               *\n               *  Throws:\n               *    \"parsererror\" - A parser error occured.\n               *    \"bad-format\" - The entity has sent XML that cannot be processed.\n               *\n               *  Returns:\n               *    The DOM element tree of the response.\n               */\n              getResponse() {\n                let node = null;\n                if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n                  node = this.xhr.responseXML.documentElement;\n                  if (node.tagName === 'parsererror') {\n                    Strophe.error('invalid response received');\n                    Strophe.error('responseText: ' + this.xhr.responseText);\n                    Strophe.error('responseXML: ' + Strophe.serialize(this.xhr.responseXML));\n                    throw new Error('parsererror');\n                  }\n                } else if (this.xhr.responseText) {\n                  var _node;\n                  // In Node (with xhr2) or React Native, we may get responseText but no responseXML.\n                  // We can try to parse it manually.\n                  Strophe.debug('Got responseText but no responseXML; attempting to parse it with DOMParser...');\n                  node = new DOMParser().parseFromString(this.xhr.responseText, 'application/xml').documentElement;\n                  const parserError = (_node = node) === null || _node === void 0 ? void 0 : _node.querySelector('parsererror');\n                  if (!node || parserError) {\n                    if (parserError) {\n                      Strophe.error('invalid response received: ' + parserError.textContent);\n                      Strophe.error('responseText: ' + this.xhr.responseText);\n                    }\n                    const error = new Error();\n                    error.name = Strophe.ErrorCondition.BAD_FORMAT;\n                    throw error;\n                  }\n                }\n                return node;\n              }\n\n              /** PrivateFunction: _newXHR\n               *  _Private_ helper function to create XMLHttpRequests.\n               *\n               *  This function creates XMLHttpRequests across all implementations.\n               *\n               *  Returns:\n               *    A new XMLHttpRequest.\n               */\n              _newXHR() {\n                let xhr = null;\n                if (globalThis.XMLHttpRequest) {\n                  xhr = new XMLHttpRequest();\n                  if (xhr.overrideMimeType) {\n                    xhr.overrideMimeType('text/xml; charset=utf-8');\n                  }\n                } else if (globalThis.ActiveXObject) {\n                  xhr = new ActiveXObject('Microsoft.XMLHTTP');\n                }\n                // use Function.bind() to prepend ourselves as an argument\n                xhr.onreadystatechange = this.func.bind(null, this);\n                return xhr;\n              }\n            };\n\n            /** Class: Strophe.Bosh\n             *  _Private_ helper class that handles BOSH Connections\n             *\n             *  The Strophe.Bosh class is used internally by Strophe.Connection\n             *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: bosh.js\n             *  A JavaScript library to enable BOSH in Strophejs.\n             *\n             *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n             *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n             *  More information on BOSH can be found in XEP 124.\n             */\n\n            /** PrivateConstructor: Strophe.Bosh\n             *  Create and initialize a Strophe.Bosh object.\n             *\n             *  Parameters:\n             *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n             *\n             *  Returns:\n             *    A new Strophe.Bosh object.\n             */\n            Strophe.Bosh = class Bosh {\n              constructor(connection) {\n                this._conn = connection;\n                /* request id for body tags */\n                this.rid = Math.floor(Math.random() * 4294967295);\n                /* The current session ID. */\n                this.sid = null;\n\n                // default BOSH values\n                this.hold = 1;\n                this.wait = 60;\n                this.window = 5;\n                this.errors = 0;\n                this.inactivity = null;\n                this.lastResponseHeaders = null;\n                this._requests = [];\n              }\n\n              /** PrivateFunction: _buildBody\n               *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <body/> element.\n               */\n              _buildBody() {\n                const bodyWrap = $build('body', {\n                  'rid': this.rid++,\n                  'xmlns': Strophe.NS.HTTPBIND\n                });\n                if (this.sid !== null) {\n                  bodyWrap.attrs({\n                    'sid': this.sid\n                  });\n                }\n                if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n                  this._cacheSession();\n                }\n                return bodyWrap;\n              }\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection\n               */\n              _reset() {\n                this.rid = Math.floor(Math.random() * 4294967295);\n                this.sid = null;\n                this.errors = 0;\n                if (this._conn._sessionCachingSupported()) {\n                  sessionStorage.removeItem('strophe-bosh-session');\n                }\n                this._conn.nextValidRid(this.rid);\n              }\n\n              /** PrivateFunction: _connect\n               *  _Private_ function that initializes the BOSH connection.\n               *\n               *  Creates and sends the Request that initializes the BOSH connection.\n               */\n              _connect(wait, hold, route) {\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.errors = 0;\n                const body = this._buildBody().attrs({\n                  'to': this._conn.domain,\n                  'xml:lang': 'en',\n                  'wait': this.wait,\n                  'hold': this.hold,\n                  'content': 'text/xml; charset=utf-8',\n                  'ver': '1.6',\n                  'xmpp:version': '1.0',\n                  'xmlns:xmpp': Strophe.NS.BOSH\n                });\n                if (route) {\n                  body.attrs({\n                    'route': route\n                  });\n                }\n                const _connect_cb = this._conn._connect_cb;\n                this._requests.push(new Strophe.Request(body.tree(), this._onRequestStateChange.bind(this, _connect_cb.bind(this._conn)), body.tree().getAttribute('rid')));\n                this._throttledRequestHandler();\n              }\n\n              /** PrivateFunction: _attach\n               *  Attach to an already created and authenticated BOSH session.\n               *\n               *  This function is provided to allow Strophe to attach to BOSH\n               *  sessions which have been created externally, perhaps by a Web\n               *  application.  This is often used to support auto-login type features\n               *  without putting user credentials into the page.\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *    (String) sid - The SID of the BOSH session.\n               *    (String) rid - The current RID of the BOSH session.  This RID\n               *      will be used by the next request.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _attach(jid, sid, rid, callback, wait, hold, wind) {\n                this._conn.jid = jid;\n                this.sid = sid;\n                this.rid = rid;\n                this._conn.connect_callback = callback;\n                this._conn.domain = Strophe.getDomainFromJid(this._conn.jid);\n                this._conn.authenticated = true;\n                this._conn.connected = true;\n                this.wait = wait || this.wait;\n                this.hold = hold || this.hold;\n                this.window = wind || this.window;\n                this._conn._changeConnectStatus(Strophe.Status.ATTACHED, null);\n              }\n\n              /** PrivateFunction: _restore\n               *  Attempt to restore a cached BOSH session\n               *\n               *  Parameters:\n               *    (String) jid - The full JID that is bound by the session.\n               *      This parameter is optional but recommended, specifically in cases\n               *      where prebinded BOSH sessions are used where it's important to know\n               *      that the right session is being restored.\n               *    (Function) callback The connect callback function.\n               *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n               *      time the server will wait before returning an empty result for\n               *      a request.  The default setting of 60 seconds is recommended.\n               *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n               *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n               *      number of connections the server will hold at one time.  This\n               *      should almost always be set to 1 (the default).\n               *    (Integer) wind - The optional HTTBIND window value.  This is the\n               *      allowed range of request ids that are valid.  The default is 5.\n               */\n              _restore(jid, callback, wait, hold, wind) {\n                const session = JSON.parse(sessionStorage.getItem('strophe-bosh-session'));\n                if (typeof session !== 'undefined' && session !== null && session.rid && session.sid && session.jid && (typeof jid === 'undefined' || jid === null || Strophe.getBareJidFromJid(session.jid) === Strophe.getBareJidFromJid(jid) ||\n                // If authcid is null, then it's an anonymous login, so\n                // we compare only the domains:\n                Strophe.getNodeFromJid(jid) === null && Strophe.getDomainFromJid(session.jid) === jid)) {\n                  this._conn.restored = true;\n                  this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n                } else {\n                  const error = new Error('_restore: no restoreable session.');\n                  error.name = 'StropheSessionError';\n                  throw error;\n                }\n              }\n\n              /** PrivateFunction: _cacheSession\n               *  _Private_ handler for the beforeunload event.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _cacheSession() {\n                if (this._conn.authenticated) {\n                  if (this._conn.jid && this.rid && this.sid) {\n                    sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n                      'jid': this._conn.jid,\n                      'rid': this.rid,\n                      'sid': this.sid\n                    }));\n                  }\n                } else {\n                  sessionStorage.removeItem('strophe-bosh-session');\n                }\n              }\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ handler for initial connection request.\n               *\n               *  This handler is used to process the Bosh-part of the initial request.\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb(bodyWrap) {\n                const typ = bodyWrap.getAttribute('type');\n                if (typ !== null && typ === 'terminate') {\n                  // an error occurred\n                  let cond = bodyWrap.getAttribute('condition');\n                  Strophe.error('BOSH-Connection failed: ' + cond);\n                  const conflict = bodyWrap.getElementsByTagName('conflict');\n                  if (cond !== null) {\n                    if (cond === 'remote-stream-error' && conflict.length > 0) {\n                      cond = 'conflict';\n                    }\n                    this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n                  } else {\n                    this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, 'unknown');\n                  }\n                  this._conn._doDisconnect(cond);\n                  return Strophe.Status.CONNFAIL;\n                }\n\n                // check to make sure we don't overwrite these if _connect_cb is\n                // called multiple times in the case of missing stream:features\n                if (!this.sid) {\n                  this.sid = bodyWrap.getAttribute('sid');\n                }\n                const wind = bodyWrap.getAttribute('requests');\n                if (wind) {\n                  this.window = parseInt(wind, 10);\n                }\n                const hold = bodyWrap.getAttribute('hold');\n                if (hold) {\n                  this.hold = parseInt(hold, 10);\n                }\n                const wait = bodyWrap.getAttribute('wait');\n                if (wait) {\n                  this.wait = parseInt(wait, 10);\n                }\n                const inactivity = bodyWrap.getAttribute('inactivity');\n                if (inactivity) {\n                  this.inactivity = parseInt(inactivity, 10);\n                }\n              }\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ part of Connection.disconnect for Bosh\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect(pres) {\n                this._sendTerminate(pres);\n              }\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Resets the SID and RID.\n               */\n              _doDisconnect() {\n                this.sid = null;\n                this.rid = Math.floor(Math.random() * 4294967295);\n                if (this._conn._sessionCachingSupported()) {\n                  sessionStorage.removeItem('strophe-bosh-session');\n                }\n                this._conn.nextValidRid(this.rid);\n              }\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the Request queue is empty.\n               *\n               *  Returns:\n               *    True, if there are no Requests queued, False otherwise.\n               */\n              _emptyQueue() {\n                return this._requests.length === 0;\n              }\n\n              /** PrivateFunction: _callProtocolErrorHandlers\n               *  _Private_ function to call error handlers registered for HTTP errors.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _callProtocolErrorHandlers(req) {\n                const reqStatus = Bosh._getRequestStatus(req);\n                const err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\n                if (err_callback) {\n                  err_callback.call(this, reqStatus);\n                }\n              }\n\n              /** PrivateFunction: _hitError\n               *  _Private_ function to handle the error count.\n               *\n               *  Requests are resent automatically until their error count reaches\n               *  5.  Each time an error is encountered, this function is called to\n               *  increment the count and disconnect if the count is too high.\n               *\n               *  Parameters:\n               *    (Integer) reqStatus - The request status.\n               */\n              _hitError(reqStatus) {\n                this.errors++;\n                Strophe.warn('request errored, status: ' + reqStatus + ', number of errors: ' + this.errors);\n                if (this.errors > 4) {\n                  this._conn._onDisconnectTimeout();\n                }\n              }\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received and sends a blank poll request.\n               */\n              _no_auth_received(callback) {\n                Strophe.warn('Server did not yet offer a supported authentication ' + 'mechanism. Sending a blank poll request.');\n                if (callback) {\n                  callback = callback.bind(this._conn);\n                } else {\n                  callback = this._conn._connect_cb.bind(this._conn);\n                }\n                const body = this._buildBody();\n                this._requests.push(new Strophe.Request(body.tree(), this._onRequestStateChange.bind(this, callback), body.tree().getAttribute('rid')));\n                this._throttledRequestHandler();\n              }\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  Cancels all remaining Requests and clears the queue.\n               */\n              _onDisconnectTimeout() {\n                this._abortAllRequests();\n              }\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests() {\n                while (this._requests.length > 0) {\n                  const req = this._requests.pop();\n                  req.abort = true;\n                  req.xhr.abort();\n                  req.xhr.onreadystatechange = function () {};\n                }\n              }\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ handler called by Strophe.Connection._onIdle\n               *\n               *  Sends all queued Requests or polls with empty Request if there are none.\n               */\n              _onIdle() {\n                const data = this._conn._data;\n                // if no requests are in progress, poll\n                if (this._conn.authenticated && this._requests.length === 0 && data.length === 0 && !this._conn.disconnecting) {\n                  Strophe.debug('no requests during idle cycle, sending blank request');\n                  data.push(null);\n                }\n                if (this._conn.paused) {\n                  return;\n                }\n                if (this._requests.length < 2 && data.length > 0) {\n                  const body = this._buildBody();\n                  for (let i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      if (data[i] === 'restart') {\n                        body.attrs({\n                          'to': this._conn.domain,\n                          'xml:lang': 'en',\n                          'xmpp:restart': 'true',\n                          'xmlns:xmpp': Strophe.NS.BOSH\n                        });\n                      } else {\n                        body.cnode(data[i]).up();\n                      }\n                    }\n                  }\n                  delete this._conn._data;\n                  this._conn._data = [];\n                  this._requests.push(new Strophe.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute('rid')));\n                  this._throttledRequestHandler();\n                }\n                if (this._requests.length > 0) {\n                  const time_elapsed = this._requests[0].age();\n                  if (this._requests[0].dead !== null) {\n                    if (this._requests[0].timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\n                      this._throttledRequestHandler();\n                    }\n                  }\n                  if (time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait)) {\n                    Strophe.warn('Request ' + this._requests[0].id + ' timed out, over ' + Math.floor(Strophe.TIMEOUT * this.wait) + ' seconds since last activity');\n                    this._throttledRequestHandler();\n                  }\n                }\n              }\n\n              /** PrivateFunction: _getRequestStatus\n               *\n               *  Returns the HTTP status code from a Strophe.Request\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The Strophe.Request instance.\n               *    (Integer) def - The default value that should be returned if no\n               *          status value was found.\n               */\n              static _getRequestStatus(req, def) {\n                let reqStatus;\n                if (req.xhr.readyState === 4) {\n                  try {\n                    reqStatus = req.xhr.status;\n                  } catch (e) {\n                    // ignore errors from undefined status attribute. Works\n                    // around a browser bug\n                    Strophe.error(\"Caught an error while retrieving a request's status, \" + 'reqStatus: ' + reqStatus);\n                  }\n                }\n                if (typeof reqStatus === 'undefined') {\n                  reqStatus = typeof def === 'number' ? def : 0;\n                }\n                return reqStatus;\n              }\n\n              /** PrivateFunction: _onRequestStateChange\n               *  _Private_ handler for Strophe.Request state changes.\n               *\n               *  This function is called when the XMLHttpRequest readyState changes.\n               *  It contains a lot of error handling logic for the many ways that\n               *  requests can fail, and calls the request callback when requests\n               *  succeed.\n               *\n               *  Parameters:\n               *    (Function) func - The handler for the request.\n               *    (Strophe.Request) req - The request that is changing readyState.\n               */\n              _onRequestStateChange(func, req) {\n                Strophe.debug('request id ' + req.id + '.' + req.sends + ' state changed to ' + req.xhr.readyState);\n                if (req.abort) {\n                  req.abort = false;\n                  return;\n                }\n                if (req.xhr.readyState !== 4) {\n                  // The request is not yet complete\n                  return;\n                }\n                const reqStatus = Bosh._getRequestStatus(req);\n                this.lastResponseHeaders = req.xhr.getAllResponseHeaders();\n                if (this._conn.disconnecting && reqStatus >= 400) {\n                  this._hitError(reqStatus);\n                  this._callProtocolErrorHandlers(req);\n                  return;\n                }\n                const reqIs0 = this._requests[0] === req;\n                const reqIs1 = this._requests[1] === req;\n                const valid_request = reqStatus > 0 && reqStatus < 500;\n                const too_many_retries = req.sends > this._conn.maxRetries;\n                if (valid_request || too_many_retries) {\n                  // remove from internal queue\n                  this._removeRequest(req);\n                  Strophe.debug('request id ' + req.id + ' should now be removed');\n                }\n                if (reqStatus === 200) {\n                  // request succeeded\n                  // if request 1 finished, or request 0 finished and request\n                  // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n                  // restart the other - both will be in the first spot, as the\n                  // completed request has been removed from the queue already\n                  if (reqIs1 || reqIs0 && this._requests.length > 0 && this._requests[0].age() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\n                    this._restartRequest(0);\n                  }\n                  this._conn.nextValidRid(Number(req.rid) + 1);\n                  Strophe.debug('request id ' + req.id + '.' + req.sends + ' got 200');\n                  func(req); // call handler\n                  this.errors = 0;\n                } else if (reqStatus === 0 || reqStatus >= 400 && reqStatus < 600 || reqStatus >= 12000) {\n                  // request failed\n                  Strophe.error('request id ' + req.id + '.' + req.sends + ' error ' + reqStatus + ' happened');\n                  this._hitError(reqStatus);\n                  this._callProtocolErrorHandlers(req);\n                  if (reqStatus >= 400 && reqStatus < 500) {\n                    this._conn._changeConnectStatus(Strophe.Status.DISCONNECTING, null);\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  Strophe.error('request id ' + req.id + '.' + req.sends + ' error ' + reqStatus + ' happened');\n                }\n                if (!valid_request && !too_many_retries) {\n                  this._throttledRequestHandler();\n                } else if (too_many_retries && !this._conn.connected) {\n                  this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, 'giving-up');\n                }\n              }\n\n              /** PrivateFunction: _processRequest\n               *  _Private_ function to process a request in the queue.\n               *\n               *  This function takes requests off the queue and sends them and\n               *  restarts dead requests.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _processRequest(i) {\n                let req = this._requests[i];\n                const reqStatus = Bosh._getRequestStatus(req, -1);\n\n                // make sure we limit the number of retries\n                if (req.sends > this._conn.maxRetries) {\n                  this._conn._onDisconnectTimeout();\n                  return;\n                }\n                const time_elapsed = req.age();\n                const primary_timeout = !isNaN(time_elapsed) && time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait);\n                const secondary_timeout = req.dead !== null && req.timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait);\n                const server_error = req.xhr.readyState === 4 && (reqStatus < 1 || reqStatus >= 500);\n                if (primary_timeout || secondary_timeout || server_error) {\n                  if (secondary_timeout) {\n                    Strophe.error(`Request ${this._requests[i].id} timed out (secondary), restarting`);\n                  }\n                  req.abort = true;\n                  req.xhr.abort();\n                  // setting to null fails on IE6, so set to empty function\n                  req.xhr.onreadystatechange = function () {};\n                  this._requests[i] = new Strophe.Request(req.xmlData, req.origFunc, req.rid, req.sends);\n                  req = this._requests[i];\n                }\n                if (req.xhr.readyState === 0) {\n                  Strophe.debug('request id ' + req.id + '.' + req.sends + ' posting');\n                  try {\n                    const content_type = this._conn.options.contentType || 'text/xml; charset=utf-8';\n                    req.xhr.open('POST', this._conn.service, this._conn.options.sync ? false : true);\n                    if (typeof req.xhr.setRequestHeader !== 'undefined') {\n                      // IE9 doesn't have setRequestHeader\n                      req.xhr.setRequestHeader('Content-Type', content_type);\n                    }\n                    if (this._conn.options.withCredentials) {\n                      req.xhr.withCredentials = true;\n                    }\n                  } catch (e2) {\n                    Strophe.error('XHR open failed: ' + e2.toString());\n                    if (!this._conn.connected) {\n                      this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, 'bad-service');\n                    }\n                    this._conn.disconnect();\n                    return;\n                  }\n\n                  // Fires the XHR request -- may be invoked immediately\n                  // or on a gradually expanding retry window for reconnects\n                  const sendFunc = () => {\n                    req.date = new Date();\n                    if (this._conn.options.customHeaders) {\n                      const headers = this._conn.options.customHeaders;\n                      for (const header in headers) {\n                        if (Object.prototype.hasOwnProperty.call(headers, header)) {\n                          req.xhr.setRequestHeader(header, headers[header]);\n                        }\n                      }\n                    }\n                    req.xhr.send(req.data);\n                  };\n\n                  // Implement progressive backoff for reconnects --\n                  // First retry (send === 1) should also be instantaneous\n                  if (req.sends > 1) {\n                    // Using a cube of the retry number creates a nicely\n                    // expanding retry window\n                    const backoff = Math.min(Math.floor(Strophe.TIMEOUT * this.wait), Math.pow(req.sends, 3)) * 1000;\n                    setTimeout(function () {\n                      // XXX: setTimeout should be called only with function expressions (23974bc1)\n                      sendFunc();\n                    }, backoff);\n                  } else {\n                    sendFunc();\n                  }\n                  req.sends++;\n                  if (this._conn.xmlOutput !== Strophe.Connection.prototype.xmlOutput) {\n                    if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n                      this._conn.xmlOutput(req.xmlData.childNodes[0]);\n                    } else {\n                      this._conn.xmlOutput(req.xmlData);\n                    }\n                  }\n                  if (this._conn.rawOutput !== Strophe.Connection.prototype.rawOutput) {\n                    this._conn.rawOutput(req.data);\n                  }\n                } else {\n                  Strophe.debug('_processRequest: ' + (i === 0 ? 'first' : 'second') + ' request has readyState of ' + req.xhr.readyState);\n                }\n              }\n\n              /** PrivateFunction: _removeRequest\n               *  _Private_ function to remove a request from the queue.\n               *\n               *  Parameters:\n               *    (Strophe.Request) req - The request to remove.\n               */\n              _removeRequest(req) {\n                Strophe.debug('removing request');\n                for (let i = this._requests.length - 1; i >= 0; i--) {\n                  if (req === this._requests[i]) {\n                    this._requests.splice(i, 1);\n                  }\n                }\n                // IE6 fails on setting to null, so set to empty function\n                req.xhr.onreadystatechange = function () {};\n                this._throttledRequestHandler();\n              }\n\n              /** PrivateFunction: _restartRequest\n               *  _Private_ function to restart a request that is presumed dead.\n               *\n               *  Parameters:\n               *    (Integer) i - The index of the request in the queue.\n               */\n              _restartRequest(i) {\n                const req = this._requests[i];\n                if (req.dead === null) {\n                  req.dead = new Date();\n                }\n                this._processRequest(i);\n              }\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * Tries to extract a stanza out of a Request Object.\n               * When this fails the current connection will be disconnected.\n               *\n               *  Parameters:\n               *    (Object) req - The Request.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              _reqToData(req) {\n                try {\n                  return req.getResponse();\n                } catch (e) {\n                  if (e.message !== 'parsererror') {\n                    throw e;\n                  }\n                  this._conn.disconnect('strophe-parsererror');\n                }\n              }\n\n              /** PrivateFunction: _sendTerminate\n               *  _Private_ function to send initial disconnect sequence.\n               *\n               *  This is the first step in a graceful disconnect.  It sends\n               *  the BOSH server a terminate body and includes an unavailable\n               *  presence if authentication has completed.\n               */\n              _sendTerminate(pres) {\n                Strophe.debug('_sendTerminate was called');\n                const body = this._buildBody().attrs({\n                  type: 'terminate'\n                });\n                if (pres) {\n                  body.cnode(pres.tree());\n                }\n                const req = new Strophe.Request(body.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), body.tree().getAttribute('rid'));\n                this._requests.push(req);\n                this._throttledRequestHandler();\n              }\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for BOSH\n               *\n               * Just triggers the RequestHandler to send the messages that are in the queue\n               */\n              _send() {\n                clearTimeout(this._conn._idleTimeout);\n                this._throttledRequestHandler();\n                this._conn._idleTimeout = setTimeout(() => this._conn._onIdle(), 100);\n              }\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart() {\n                this._throttledRequestHandler();\n                clearTimeout(this._conn._idleTimeout);\n              }\n\n              /** PrivateFunction: _throttledRequestHandler\n               *  _Private_ function to throttle requests to the connection window.\n               *\n               *  This function makes sure we don't send requests so fast that the\n               *  request ids overflow the connection window in the case that one\n               *  request died.\n               */\n              _throttledRequestHandler() {\n                if (!this._requests) {\n                  Strophe.debug('_throttledRequestHandler called with ' + 'undefined requests');\n                } else {\n                  Strophe.debug('_throttledRequestHandler called with ' + this._requests.length + ' requests');\n                }\n                if (!this._requests || this._requests.length === 0) {\n                  return;\n                }\n                if (this._requests.length > 0) {\n                  this._processRequest(0);\n                }\n                if (this._requests.length > 1 && Math.abs(this._requests[0].rid - this._requests[1].rid) < this.window) {\n                  this._processRequest(1);\n                }\n              }\n            };\n\n            /** Variable: strip\n             *\n             *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n             *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n             *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n             *\n             *  > Strophe.Bosh.prototype.strip = \"body\";\n             *\n             *  This will enable stripping of the body tag in both\n             *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n             */\n            Strophe.Bosh.prototype.strip = null;\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2006-2008, OGG, LLC\n            */\n\n            /** Class: Strophe.WebSocket\n             *  _Private_ helper class that handles WebSocket Connections\n             *\n             *  The Strophe.WebSocket class is used internally by Strophe.Connection\n             *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n             */\n\n            /** File: websocket.js\n             *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n             *\n             *  This file implements XMPP over WebSockets for Strophejs.\n             *  If a Connection is established with a Websocket url (ws://...)\n             *  Strophe will use WebSockets.\n             *  For more information on XMPP-over-WebSocket see RFC 7395:\n             *  http://tools.ietf.org/html/rfc7395\n             *\n             *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n             */\n            Strophe.Websocket = class Websocket {\n              /** PrivateConstructor: Strophe.Websocket\n               *  Create and initialize a Strophe.WebSocket object.\n               *  Currently only sets the connection Object.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n               *\n               *  Returns:\n               *    A new Strophe.WebSocket object.\n               */\n              constructor(connection) {\n                this._conn = connection;\n                this.strip = 'wrapper';\n                const service = connection.service;\n                if (service.indexOf('ws:') !== 0 && service.indexOf('wss:') !== 0) {\n                  // If the service is not an absolute URL, assume it is a path and put the absolute\n                  // URL together from options, current URL and the path.\n                  let new_service = '';\n                  if (connection.options.protocol === 'ws' && location.protocol !== 'https:') {\n                    new_service += 'ws';\n                  } else {\n                    new_service += 'wss';\n                  }\n                  new_service += '://' + location.host;\n                  if (service.indexOf('/') !== 0) {\n                    new_service += location.pathname + service;\n                  } else {\n                    new_service += service;\n                  }\n                  connection.service = new_service;\n                }\n              }\n\n              /** PrivateFunction: _buildStream\n               *  _Private_ helper function to generate the <stream> start tag for WebSockets\n               *\n               *  Returns:\n               *    A Strophe.Builder with a <stream> element.\n               */\n              _buildStream() {\n                return $build('open', {\n                  'xmlns': Strophe.NS.FRAMING,\n                  'to': this._conn.domain,\n                  'version': '1.0'\n                });\n              }\n\n              /** PrivateFunction: _checkStreamError\n               * _Private_ checks a message for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               *    connectstatus - The ConnectStatus that will be set on error.\n               *  Returns:\n               *     true if there was a streamerror, false otherwise.\n               */\n              _checkStreamError(bodyWrap, connectstatus) {\n                let errors;\n                if (bodyWrap.getElementsByTagNameNS) {\n                  errors = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, 'error');\n                } else {\n                  errors = bodyWrap.getElementsByTagName('stream:error');\n                }\n                if (errors.length === 0) {\n                  return false;\n                }\n                const error = errors[0];\n                let condition = '';\n                let text = '';\n                const ns = 'urn:ietf:params:xml:ns:xmpp-streams';\n                for (let i = 0; i < error.childNodes.length; i++) {\n                  const e = error.childNodes[i];\n                  if (e.getAttribute('xmlns') !== ns) {\n                    break;\n                  }\n                  if (e.nodeName === 'text') {\n                    text = e.textContent;\n                  } else {\n                    condition = e.nodeName;\n                  }\n                }\n                let errorString = 'WebSocket stream error: ';\n                if (condition) {\n                  errorString += condition;\n                } else {\n                  errorString += 'unknown';\n                }\n                if (text) {\n                  errorString += ' - ' + text;\n                }\n                Strophe.error(errorString);\n\n                // close the connection on stream_error\n                this._conn._changeConnectStatus(connectstatus, condition);\n                this._conn._doDisconnect();\n                return true;\n              }\n\n              /** PrivateFunction: _reset\n               *  Reset the connection.\n               *\n               *  This function is called by the reset function of the Strophe Connection.\n               *  Is not needed by WebSockets.\n               */\n              // eslint-disable-next-line class-methods-use-this\n              _reset() {\n                return;\n              }\n\n              /** PrivateFunction: _connect\n               *  _Private_ function called by Strophe.Connection.connect\n               *\n               *  Creates a WebSocket for a connection and assigns Callbacks to it.\n               *  Does nothing if there already is a WebSocket.\n               */\n              _connect() {\n                // Ensure that there is no open WebSocket from a previous Connection.\n                this._closeSocket();\n                this.socket = new WebSocket(this._conn.service, 'xmpp');\n                this.socket.onopen = () => this._onOpen();\n                this.socket.onerror = e => this._onError(e);\n                this.socket.onclose = e => this._onClose(e);\n                // Gets replaced with this._onMessage once _onInitialMessage is called\n                this.socket.onmessage = message => this._onInitialMessage(message);\n              }\n\n              /** PrivateFunction: _connect_cb\n               *  _Private_ function called by Strophe.Connection._connect_cb\n               *\n               * checks for stream:error\n               *\n               *  Parameters:\n               *    (Strophe.Request) bodyWrap - The received stanza.\n               */\n              _connect_cb(bodyWrap) {\n                const error = this._checkStreamError(bodyWrap, Strophe.Status.CONNFAIL);\n                if (error) {\n                  return Strophe.Status.CONNFAIL;\n                }\n              }\n\n              /** PrivateFunction: _handleStreamStart\n               * _Private_ function that checks the opening <open /> tag for errors.\n               *\n               * Disconnects if there is an error and returns false, true otherwise.\n               *\n               *  Parameters:\n               *    (Node) message - Stanza containing the <open /> tag.\n               */\n              _handleStreamStart(message) {\n                let error = false;\n\n                // Check for errors in the <open /> tag\n                const ns = message.getAttribute('xmlns');\n                if (typeof ns !== 'string') {\n                  error = 'Missing xmlns in <open />';\n                } else if (ns !== Strophe.NS.FRAMING) {\n                  error = 'Wrong xmlns in <open />: ' + ns;\n                }\n                const ver = message.getAttribute('version');\n                if (typeof ver !== 'string') {\n                  error = 'Missing version in <open />';\n                } else if (ver !== '1.0') {\n                  error = 'Wrong version in <open />: ' + ver;\n                }\n                if (error) {\n                  this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\n                  this._conn._doDisconnect();\n                  return false;\n                }\n                return true;\n              }\n\n              /** PrivateFunction: _onInitialMessage\n               * _Private_ function that handles the first connection messages.\n               *\n               * On receiving an opening stream tag this callback replaces itself with the real\n               * message handler. On receiving a stream error the connection is terminated.\n               */\n              _onInitialMessage(message) {\n                if (message.data.indexOf('<open ') === 0 || message.data.indexOf('<?xml') === 0) {\n                  // Strip the XML Declaration, if there is one\n                  const data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, '');\n                  if (data === '') return;\n                  const streamStart = new DOMParser().parseFromString(data, 'text/xml').documentElement;\n                  this._conn.xmlInput(streamStart);\n                  this._conn.rawInput(message.data);\n\n                  //_handleStreamSteart will check for XML errors and disconnect on error\n                  if (this._handleStreamStart(streamStart)) {\n                    //_connect_cb will check for stream:error and disconnect on error\n                    this._connect_cb(streamStart);\n                  }\n                } else if (message.data.indexOf('<close ') === 0) {\n                  // <close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />\n                  // Parse the raw string to an XML element\n                  const parsedMessage = new DOMParser().parseFromString(message.data, 'text/xml').documentElement;\n                  // Report this input to the raw and xml handlers\n                  this._conn.xmlInput(parsedMessage);\n                  this._conn.rawInput(message.data);\n                  const see_uri = parsedMessage.getAttribute('see-other-uri');\n                  if (see_uri) {\n                    const service = this._conn.service;\n                    // Valid scenarios: WSS->WSS, WS->ANY\n                    const isSecureRedirect = service.indexOf('wss:') >= 0 && see_uri.indexOf('wss:') >= 0 || service.indexOf('ws:') >= 0;\n                    if (isSecureRedirect) {\n                      this._conn._changeConnectStatus(Strophe.Status.REDIRECT, 'Received see-other-uri, resetting connection');\n                      this._conn.reset();\n                      this._conn.service = see_uri;\n                      this._connect();\n                    }\n                  } else {\n                    this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, 'Received closing stream');\n                    this._conn._doDisconnect();\n                  }\n                } else {\n                  this._replaceMessageHandler();\n                  const string = this._streamWrap(message.data);\n                  const elem = new DOMParser().parseFromString(string, 'text/xml').documentElement;\n                  this._conn._connect_cb(elem, null, message.data);\n                }\n              }\n\n              /** PrivateFunction: _replaceMessageHandler\n               *\n               * Called by _onInitialMessage in order to replace itself with the general message handler.\n               * This method is overridden by Strophe.WorkerWebsocket, which manages a\n               * websocket connection via a service worker and doesn't have direct access\n               * to the socket.\n               */\n              _replaceMessageHandler() {\n                this.socket.onmessage = m => this._onMessage(m);\n              }\n\n              /** PrivateFunction: _disconnect\n               *  _Private_ function called by Strophe.Connection.disconnect\n               *\n               *  Disconnects and sends a last stanza if one is given\n               *\n               *  Parameters:\n               *    (Request) pres - This stanza will be sent before disconnecting.\n               */\n              _disconnect(pres) {\n                if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n                  if (pres) {\n                    this._conn.send(pres);\n                  }\n                  const close = $build('close', {\n                    'xmlns': Strophe.NS.FRAMING\n                  });\n                  this._conn.xmlOutput(close.tree());\n                  const closeString = Strophe.serialize(close);\n                  this._conn.rawOutput(closeString);\n                  try {\n                    this.socket.send(closeString);\n                  } catch (e) {\n                    Strophe.warn(\"Couldn't send <close /> tag.\");\n                  }\n                }\n                setTimeout(() => this._conn._doDisconnect(), 0);\n              }\n\n              /** PrivateFunction: _doDisconnect\n               *  _Private_ function to disconnect.\n               *\n               *  Just closes the Socket for WebSockets\n               */\n              _doDisconnect() {\n                Strophe.debug('WebSockets _doDisconnect was called');\n                this._closeSocket();\n              }\n\n              /** PrivateFunction _streamWrap\n               *  _Private_ helper function to wrap a stanza in a <stream> tag.\n               *  This is used so Strophe can process stanzas from WebSockets like BOSH\n               */\n              // eslint-disable-next-line class-methods-use-this\n              _streamWrap(stanza) {\n                return '<wrapper>' + stanza + '</wrapper>';\n              }\n\n              /** PrivateFunction: _closeSocket\n               *  _Private_ function to close the WebSocket.\n               *\n               *  Closes the socket if it is still open and deletes it\n               */\n              _closeSocket() {\n                if (this.socket) {\n                  try {\n                    this.socket.onclose = null;\n                    this.socket.onerror = null;\n                    this.socket.onmessage = null;\n                    this.socket.close();\n                  } catch (e) {\n                    Strophe.debug(e.message);\n                  }\n                }\n                this.socket = null;\n              }\n\n              /** PrivateFunction: _emptyQueue\n               * _Private_ function to check if the message queue is empty.\n               *\n               *  Returns:\n               *    True, because WebSocket messages are send immediately after queueing.\n               */\n              // eslint-disable-next-line class-methods-use-this\n              _emptyQueue() {\n                return true;\n              }\n\n              /** PrivateFunction: _onClose\n               * _Private_ function to handle websockets closing.\n               */\n              _onClose(e) {\n                if (this._conn.connected && !this._conn.disconnecting) {\n                  Strophe.error('Websocket closed unexpectedly');\n                  this._conn._doDisconnect();\n                } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\n                  // in case the onError callback was not called (Safari 10 does not\n                  // call onerror when the initial connection fails) we need to\n                  // dispatch a CONNFAIL status update to be consistent with the\n                  // behavior on other browsers.\n                  Strophe.error('Websocket closed unexcectedly');\n                  this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, 'The WebSocket connection could not be established or was disconnected.');\n                  this._conn._doDisconnect();\n                } else {\n                  Strophe.debug('Websocket closed');\n                }\n              }\n\n              /** PrivateFunction: _no_auth_received\n               *\n               * Called on stream start/restart when no stream:features\n               * has been received.\n               */\n              _no_auth_received(callback) {\n                Strophe.error('Server did not offer a supported authentication mechanism');\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, Strophe.ErrorCondition.NO_AUTH_MECH);\n                if (callback) {\n                  callback.call(this._conn);\n                }\n                this._conn._doDisconnect();\n              }\n\n              /** PrivateFunction: _onDisconnectTimeout\n               *  _Private_ timeout handler for handling non-graceful disconnection.\n               *\n               *  This does nothing for WebSockets\n               */\n              _onDisconnectTimeout() {} // eslint-disable-line class-methods-use-this\n\n              /** PrivateFunction: _abortAllRequests\n               *  _Private_ helper function that makes sure all pending requests are aborted.\n               */\n              _abortAllRequests() {} // eslint-disable-line class-methods-use-this\n\n              /** PrivateFunction: _onError\n               * _Private_ function to handle websockets errors.\n               *\n               * Parameters:\n               * (Object) error - The websocket error.\n               */\n              _onError(error) {\n                Strophe.error('Websocket error ' + JSON.stringify(error));\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, 'The WebSocket connection could not be established or was disconnected.');\n                this._disconnect();\n              }\n\n              /** PrivateFunction: _onIdle\n               *  _Private_ function called by Strophe.Connection._onIdle\n               *\n               *  sends all queued stanzas\n               */\n              _onIdle() {\n                const data = this._conn._data;\n                if (data.length > 0 && !this._conn.paused) {\n                  for (let i = 0; i < data.length; i++) {\n                    if (data[i] !== null) {\n                      let stanza;\n                      if (data[i] === 'restart') {\n                        stanza = this._buildStream().tree();\n                      } else {\n                        stanza = data[i];\n                      }\n                      const rawStanza = Strophe.serialize(stanza);\n                      this._conn.xmlOutput(stanza);\n                      this._conn.rawOutput(rawStanza);\n                      this.socket.send(rawStanza);\n                    }\n                  }\n                  this._conn._data = [];\n                }\n              }\n\n              /** PrivateFunction: _onMessage\n               * _Private_ function to handle websockets messages.\n               *\n               * This function parses each of the messages as if they are full documents.\n               * [TODO : We may actually want to use a SAX Push parser].\n               *\n               * Since all XMPP traffic starts with\n               *  <stream:stream version='1.0'\n               *                 xml:lang='en'\n               *                 xmlns='jabber:client'\n               *                 xmlns:stream='http://etherx.jabber.org/streams'\n               *                 id='3697395463'\n               *                 from='SERVER'>\n               *\n               * The first stanza will always fail to be parsed.\n               *\n               * Additionally, the seconds stanza will always be <stream:features> with\n               * the stream NS defined in the previous stanza, so we need to 'force'\n               * the inclusion of the NS in this stanza.\n               *\n               * Parameters:\n               * (string) message - The websocket message.\n               */\n              _onMessage(message) {\n                let elem;\n                // check for closing stream\n                const close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n                if (message.data === close) {\n                  this._conn.rawInput(close);\n                  this._conn.xmlInput(message);\n                  if (!this._conn.disconnecting) {\n                    this._conn._doDisconnect();\n                  }\n                  return;\n                } else if (message.data.search('<open ') === 0) {\n                  // This handles stream restarts\n                  elem = new DOMParser().parseFromString(message.data, 'text/xml').documentElement;\n                  if (!this._handleStreamStart(elem)) {\n                    return;\n                  }\n                } else {\n                  const data = this._streamWrap(message.data);\n                  elem = new DOMParser().parseFromString(data, 'text/xml').documentElement;\n                }\n                if (this._checkStreamError(elem, Strophe.Status.ERROR)) {\n                  return;\n                }\n\n                //handle unavailable presence stanza before disconnecting\n                if (this._conn.disconnecting && elem.firstChild.nodeName === 'presence' && elem.firstChild.getAttribute('type') === 'unavailable') {\n                  this._conn.xmlInput(elem);\n                  this._conn.rawInput(Strophe.serialize(elem));\n                  // if we are already disconnecting we will ignore the unavailable stanza and\n                  // wait for the </stream:stream> tag before we close the connection\n                  return;\n                }\n                this._conn._dataRecv(elem, message.data);\n              }\n\n              /** PrivateFunction: _onOpen\n               * _Private_ function to handle websockets connection setup.\n               *\n               * The opening stream tag is sent here.\n               */\n              _onOpen() {\n                Strophe.debug('Websocket open');\n                const start = this._buildStream();\n                this._conn.xmlOutput(start.tree());\n                const startString = Strophe.serialize(start);\n                this._conn.rawOutput(startString);\n                this.socket.send(startString);\n              }\n\n              /** PrivateFunction: _reqToData\n               * _Private_ function to get a stanza out of a request.\n               *\n               * WebSockets don't use requests, so the passed argument is just returned.\n               *\n               *  Parameters:\n               *    (Object) stanza - The stanza.\n               *\n               *  Returns:\n               *    The stanza that was passed.\n               */\n              // eslint-disable-next-line class-methods-use-this\n              _reqToData(stanza) {\n                return stanza;\n              }\n\n              /** PrivateFunction: _send\n               *  _Private_ part of the Connection.send function for WebSocket\n               *\n               * Just flushes the messages that are in the queue\n               */\n              _send() {\n                this._conn.flush();\n              }\n\n              /** PrivateFunction: _sendRestart\n               *\n               *  Send an xmpp:restart stanza.\n               */\n              _sendRestart() {\n                clearTimeout(this._conn._idleTimeout);\n                this._conn._onIdle.bind(this._conn)();\n              }\n            };\n\n            /*\n                This program is distributed under the terms of the MIT license.\n                Please see the LICENSE file for details.\n\n                Copyright 2020, JC Brand\n            */\n            const lmap = {};\n            lmap['debug'] = Strophe.LogLevel.DEBUG;\n            lmap['info'] = Strophe.LogLevel.INFO;\n            lmap['warn'] = Strophe.LogLevel.WARN;\n            lmap['error'] = Strophe.LogLevel.ERROR;\n            lmap['fatal'] = Strophe.LogLevel.FATAL;\n\n            /** Class: Strophe.WorkerWebsocket\n             *  _Private_ helper class that handles a websocket connection inside a shared worker.\n             */\n            Strophe.WorkerWebsocket = class WorkerWebsocket extends Strophe.Websocket {\n              /** PrivateConstructor: Strophe.WorkerWebsocket\n               *  Create and initialize a Strophe.WorkerWebsocket object.\n               *\n               *  Parameters:\n               *    (Strophe.Connection) connection - The Strophe.Connection\n               *\n               *  Returns:\n               *    A new Strophe.WorkerWebsocket object.\n               */\n              constructor(connection) {\n                super(connection);\n                this._conn = connection;\n                this.worker = new SharedWorker(this._conn.options.worker, 'Strophe XMPP Connection');\n                this.worker.onerror = e => {\n                  var _console;\n                  (_console = console) === null || _console === void 0 ? void 0 : _console.error(e);\n                  Strophe.log(Strophe.LogLevel.ERROR, `Shared Worker Error: ${e}`);\n                };\n              }\n              get socket() {\n                return {\n                  'send': str => this.worker.port.postMessage(['send', str])\n                };\n              }\n              _connect() {\n                this._messageHandler = m => this._onInitialMessage(m);\n                this.worker.port.start();\n                this.worker.port.onmessage = ev => this._onWorkerMessage(ev);\n                this.worker.port.postMessage(['_connect', this._conn.service, this._conn.jid]);\n              }\n              _attach(callback) {\n                this._messageHandler = m => this._onMessage(m);\n                this._conn.connect_callback = callback;\n                this.worker.port.start();\n                this.worker.port.onmessage = ev => this._onWorkerMessage(ev);\n                this.worker.port.postMessage(['_attach', this._conn.service]);\n              }\n              _attachCallback(status, jid) {\n                if (status === Strophe.Status.ATTACHED) {\n                  this._conn.jid = jid;\n                  this._conn.authenticated = true;\n                  this._conn.connected = true;\n                  this._conn.restored = true;\n                  this._conn._changeConnectStatus(Strophe.Status.ATTACHED);\n                } else if (status === Strophe.Status.ATTACHFAIL) {\n                  this._conn.authenticated = false;\n                  this._conn.connected = false;\n                  this._conn.restored = false;\n                  this._conn._changeConnectStatus(Strophe.Status.ATTACHFAIL);\n                }\n              }\n              _disconnect(readyState, pres) {\n                pres && this._conn.send(pres);\n                const close = $build('close', {\n                  'xmlns': Strophe.NS.FRAMING\n                });\n                this._conn.xmlOutput(close.tree());\n                const closeString = Strophe.serialize(close);\n                this._conn.rawOutput(closeString);\n                this.worker.port.postMessage(['send', closeString]);\n                this._conn._doDisconnect();\n              }\n              _onClose(e) {\n                if (this._conn.connected && !this._conn.disconnecting) {\n                  Strophe.error('Websocket closed unexpectedly');\n                  this._conn._doDisconnect();\n                } else if (e && e.code === 1006 && !this._conn.connected) {\n                  // in case the onError callback was not called (Safari 10 does not\n                  // call onerror when the initial connection fails) we need to\n                  // dispatch a CONNFAIL status update to be consistent with the\n                  // behavior on other browsers.\n                  Strophe.error('Websocket closed unexcectedly');\n                  this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, 'The WebSocket connection could not be established or was disconnected.');\n                  this._conn._doDisconnect();\n                } else {\n                  Strophe.debug('Websocket closed');\n                }\n              }\n              _closeSocket() {\n                this.worker.port.postMessage(['_closeSocket']);\n              }\n\n              /** PrivateFunction: _replaceMessageHandler\n               *\n               * Called by _onInitialMessage in order to replace itself with the general message handler.\n               * This method is overridden by Strophe.WorkerWebsocket, which manages a\n               * websocket connection via a service worker and doesn't have direct access\n               * to the socket.\n               */\n              _replaceMessageHandler() {\n                this._messageHandler = m => this._onMessage(m);\n              }\n\n              /** PrivateFunction: _onWorkerMessage\n               * _Private_ function that handles messages received from the service worker\n               */\n              _onWorkerMessage(ev) {\n                const {\n                  data\n                } = ev;\n                const method_name = data[0];\n                if (method_name === '_onMessage') {\n                  this._messageHandler(data[1]);\n                } else if (method_name in this) {\n                  try {\n                    this[method_name].apply(this, ev.data.slice(1));\n                  } catch (e) {\n                    Strophe.log(Strophe.LogLevel.ERROR, e);\n                  }\n                } else if (method_name === 'log') {\n                  const level = data[1];\n                  const msg = data[2];\n                  Strophe.log(lmap[level], msg);\n                } else {\n                  Strophe.log(Strophe.LogLevel.ERROR, `Found unhandled service worker message: ${data}`);\n                }\n              }\n            };\n\n            global$1.$build = core.$build;\n            global$1.$iq = core.$iq;\n            global$1.$msg = core.$msg;\n            global$1.$pres = core.$pres;\n            global$1.Strophe = core.Strophe;\n            global$1.Strophe.shims = shims;\n\n            exports.$build = $build;\n            exports.$iq = $iq;\n            exports.$msg = $msg;\n            exports.$pres = $pres;\n            exports.Strophe = Strophe;\n\n            Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('strophe.js')) :\n\ttypeof define === 'function' && define.amd ? define(['strophe.js'], factory) :\n\t(factory(global.window));\n}(this, (function (strophe_js) { 'use strict';\n\n/*\n *Plugin to implement the MUC extension.\n   http://xmpp.org/extensions/xep-0045.html\n *Previous Author:\n    Nathan Zorn <nathan.zorn@gmail.com>\n *Complete CoffeeScript rewrite:\n    Andreas Guth <guth@dbis.rwth-aachen.de>\n */\n\nvar Occupant;\nvar RoomConfig;\nvar XmppRoom;\nvar hasProp = {}.hasOwnProperty;\nvar bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nstrophe_js.Strophe.addConnectionPlugin('muc', {\n  _connection: null,\n  rooms: {},\n  roomNames: [],\n\n  /*Function\n  Initialize the MUC plugin. Sets the correct connection object and\n  extends the namesace.\n   */\n  init: function(conn) {\n    this._connection = conn;\n    this._muc_handler = null;\n    strophe_js.Strophe.addNamespace('MUC_OWNER', strophe_js.Strophe.NS.MUC + \"#owner\");\n    strophe_js.Strophe.addNamespace('MUC_ADMIN', strophe_js.Strophe.NS.MUC + \"#admin\");\n    strophe_js.Strophe.addNamespace('MUC_USER', strophe_js.Strophe.NS.MUC + \"#user\");\n    strophe_js.Strophe.addNamespace('MUC_ROOMCONF', strophe_js.Strophe.NS.MUC + \"#roomconfig\");\n    return strophe_js.Strophe.addNamespace('MUC_REGISTER', \"jabber:iq:register\");\n  },\n\n  /*Function\n  Join a multi-user chat room\n  Parameters:\n  (String) room - The multi-user chat room to join.\n  (String) nick - The nickname to use in the chat room. Optional\n  (Function) msg_handler_cb - The function call to handle messages from the\n  specified chat room.\n  (Function) pres_handler_cb - The function call back to handle presence\n  in the chat room.\n  (Function) roster_cb - The function call to handle roster info in the chat room\n  (String) password - The optional password to use. (password protected\n  rooms only)\n  (Object) history_attrs - Optional attributes for retrieving history\n  (XML DOM Element) extended_presence - Optional XML for extending presence\n   */\n  join: function(room, nick, msg_handler_cb, pres_handler_cb, roster_cb, password, history_attrs, extended_presence) {\n    var msg, room_nick;\n    room_nick = this.test_append_nick(room, nick);\n    msg = strophe_js.$pres({\n      from: this._connection.jid,\n      to: room_nick\n    }).c(\"x\", {\n      xmlns: strophe_js.Strophe.NS.MUC\n    });\n    if (history_attrs != null) {\n      msg = msg.c(\"history\", history_attrs).up();\n    }\n    if (password != null) {\n      msg.cnode(strophe_js.Strophe.xmlElement(\"password\", [], password));\n    }\n    if (extended_presence != null) {\n      msg.up().cnode(extended_presence);\n    }\n    if (this._muc_handler == null) {\n      this._muc_handler = this._connection.addHandler((function(_this) {\n        return function(stanza) {\n          var from, handler, handlers, i, id, len, roomname, x, xmlns, xquery;\n          from = stanza.getAttribute('from');\n          if (!from) {\n            return true;\n          }\n          roomname = from.split(\"/\")[0];\n          if (!_this.rooms[roomname]) {\n            return true;\n          }\n          room = _this.rooms[roomname];\n          handlers = {};\n          if (stanza.nodeName === \"message\") {\n            handlers = room._message_handlers;\n          } else if (stanza.nodeName === \"presence\") {\n            xquery = stanza.getElementsByTagName(\"x\");\n            if (xquery.length > 0) {\n              for (i = 0, len = xquery.length; i < len; i++) {\n                x = xquery[i];\n                xmlns = x.getAttribute(\"xmlns\");\n                if (xmlns && xmlns.match(strophe_js.Strophe.NS.MUC)) {\n                  handlers = room._presence_handlers;\n                  break;\n                }\n              }\n            }\n          }\n          for (id in handlers) {\n            handler = handlers[id];\n            if (!handler(stanza, room)) {\n              delete handlers[id];\n            }\n          }\n          return true;\n        };\n      })(this));\n    }\n    if (!this.rooms.hasOwnProperty(room)) {\n      this.rooms[room] = new XmppRoom(this, room, nick, password);\n      if (pres_handler_cb) {\n        this.rooms[room].addHandler('presence', pres_handler_cb);\n      }\n      if (msg_handler_cb) {\n        this.rooms[room].addHandler('message', msg_handler_cb);\n      }\n      if (roster_cb) {\n        this.rooms[room].addHandler('roster', roster_cb);\n      }\n      this.roomNames.push(room);\n    }\n    return this._connection.send(msg);\n  },\n\n  /*Function\n  Leave a multi-user chat room\n  Parameters:\n  (String) room - The multi-user chat room to leave.\n  (String) nick - The nick name used in the room.\n  (Function) handler_cb - Optional function to handle the successful leave.\n  (String) exit_msg - optional exit message.\n  Returns:\n  iqid - The unique id for the room leave.\n   */\n  leave: function(room, nick, handler_cb, exit_msg) {\n    var id, presence, presenceid, room_nick;\n    id = this.roomNames.indexOf(room);\n    delete this.rooms[room];\n    if (id >= 0) {\n      this.roomNames.splice(id, 1);\n      if (this.roomNames.length === 0) {\n        this._connection.deleteHandler(this._muc_handler);\n        this._muc_handler = null;\n      }\n    }\n    room_nick = this.test_append_nick(room, nick);\n    presenceid = this._connection.getUniqueId();\n    presence = strophe_js.$pres({\n      type: \"unavailable\",\n      id: presenceid,\n      from: this._connection.jid,\n      to: room_nick\n    });\n    if (exit_msg != null) {\n      presence.c(\"status\", exit_msg);\n    }\n    if (handler_cb != null) {\n      this._connection.addHandler(handler_cb, null, \"presence\", null, presenceid);\n    }\n    this._connection.send(presence);\n    return presenceid;\n  },\n\n  /*Function\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (String) nick - The nick name used in the chat room.\n  (String) message - The plaintext message to send to the room.\n  (String) html_message - The message to send to the room with html markup.\n  (String) type - \"groupchat\" for group chat messages o\n                  \"chat\" for private chat messages\n  Returns:\n  msgiq - the unique id used to send the message\n   */\n  message: function(room, nick, message, html_message, type, msgid) {\n    var msg, parent, room_nick;\n    room_nick = this.test_append_nick(room, nick);\n    type = type || (nick != null ? \"chat\" : \"groupchat\");\n    msgid = msgid || this._connection.getUniqueId();\n    msg = strophe_js.$msg({\n      to: room_nick,\n      from: this._connection.jid,\n      type: type,\n      id: msgid\n    }).c(\"body\").t(message);\n    msg.up();\n    if (html_message != null) {\n      msg.c(\"html\", {\n        xmlns: strophe_js.Strophe.NS.XHTML_IM\n      }).c(\"body\", {\n        xmlns: strophe_js.Strophe.NS.XHTML\n      }).h(html_message);\n      if (msg.node.childNodes.length === 0) {\n        parent = msg.node.parentNode;\n        msg.up().up();\n        msg.node.removeChild(parent);\n      } else {\n        msg.up().up();\n      }\n    }\n    msg.c(\"x\", {\n      xmlns: \"jabber:x:event\"\n    }).c(\"composing\");\n    this._connection.send(msg);\n    return msgid;\n  },\n\n  /*Function\n  Convenience Function to send a Message to all Occupants\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (String) message - The plaintext message to send to the room.\n  (String) html_message - The message to send to the room with html markup.\n  (String) msgid - Optional unique ID which will be set as the 'id' attribute of the stanza\n  Returns:\n  msgiq - the unique id used to send the message\n   */\n  groupchat: function(room, message, html_message, msgid) {\n    return this.message(room, null, message, html_message, void 0, msgid);\n  },\n\n  /*Function\n  Send a mediated invitation.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (String) receiver - The invitation's receiver.\n  (String) reason - Optional reason for joining the room.\n  Returns:\n  msgiq - the unique id used to send the invitation\n   */\n  invite: function(room, receiver, reason) {\n    var invitation, msgid;\n    msgid = this._connection.getUniqueId();\n    invitation = strophe_js.$msg({\n      from: this._connection.jid,\n      to: room,\n      id: msgid\n    }).c('x', {\n      xmlns: strophe_js.Strophe.NS.MUC_USER\n    }).c('invite', {\n      to: receiver\n    });\n    if (reason != null) {\n      invitation.c('reason', reason);\n    }\n    this._connection.send(invitation);\n    return msgid;\n  },\n\n  /*Function\n  Send a mediated multiple invitation.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (Array) receivers - The invitation's receivers.\n  (String) reason - Optional reason for joining the room.\n  Returns:\n  msgiq - the unique id used to send the invitation\n   */\n  multipleInvites: function(room, receivers, reason) {\n    var i, invitation, len, msgid, receiver;\n    msgid = this._connection.getUniqueId();\n    invitation = strophe_js.$msg({\n      from: this._connection.jid,\n      to: room,\n      id: msgid\n    }).c('x', {\n      xmlns: strophe_js.Strophe.NS.MUC_USER\n    });\n    for (i = 0, len = receivers.length; i < len; i++) {\n      receiver = receivers[i];\n      invitation.c('invite', {\n        to: receiver\n      });\n      if (reason != null) {\n        invitation.c('reason', reason);\n        invitation.up();\n      }\n      invitation.up();\n    }\n    this._connection.send(invitation);\n    return msgid;\n  },\n\n  /*Function\n  Send a direct invitation.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (String) receiver - The invitation's receiver.\n  (String) reason - Optional reason for joining the room.\n  (String) password - Optional password for the room.\n  Returns:\n  msgiq - the unique id used to send the invitation\n   */\n  directInvite: function(room, receiver, reason, password) {\n    var attrs, invitation, msgid;\n    msgid = this._connection.getUniqueId();\n    attrs = {\n      xmlns: 'jabber:x:conference',\n      jid: room\n    };\n    if (reason != null) {\n      attrs.reason = reason;\n    }\n    if (password != null) {\n      attrs.password = password;\n    }\n    invitation = strophe_js.$msg({\n      from: this._connection.jid,\n      to: receiver,\n      id: msgid\n    }).c('x', attrs);\n    this._connection.send(invitation);\n    return msgid;\n  },\n\n  /*Function\n  Queries a room for a list of occupants\n  (String) room - The multi-user chat room name.\n  (Function) success_cb - Optional function to handle the info.\n  (Function) error_cb - Optional function to handle an error.\n  Returns:\n  id - the unique id used to send the info request\n   */\n  queryOccupants: function(room, success_cb, error_cb) {\n    var attrs, info;\n    attrs = {\n      xmlns: strophe_js.Strophe.NS.DISCO_ITEMS\n    };\n    info = strophe_js.$iq({\n      from: this._connection.jid,\n      to: room,\n      type: 'get'\n    }).c('query', attrs);\n    return this._connection.sendIQ(info, success_cb, error_cb);\n  },\n\n  /*Function\n  Start a room configuration.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (Function) handler_cb - Optional function to handle the config form.\n  Returns:\n  id - the unique id used to send the configuration request\n   */\n  configure: function(room, handler_cb, error_cb) {\n    var config, stanza;\n    config = strophe_js.$iq({\n      to: room,\n      type: \"get\"\n    }).c(\"query\", {\n      xmlns: strophe_js.Strophe.NS.MUC_OWNER\n    });\n    stanza = config.tree();\n    return this._connection.sendIQ(stanza, handler_cb, error_cb);\n  },\n\n  /*Function\n  Cancel the room configuration\n  Parameters:\n  (String) room - The multi-user chat room name.\n  Returns:\n  id - the unique id used to cancel the configuration.\n   */\n  cancelConfigure: function(room) {\n    var config, stanza;\n    config = strophe_js.$iq({\n      to: room,\n      type: \"set\"\n    }).c(\"query\", {\n      xmlns: strophe_js.Strophe.NS.MUC_OWNER\n    }).c(\"x\", {\n      xmlns: \"jabber:x:data\",\n      type: \"cancel\"\n    });\n    stanza = config.tree();\n    return this._connection.sendIQ(stanza);\n  },\n\n  /*Function\n  Save a room configuration.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (Array) config- Form Object or an array of form elements used to configure the room.\n  Returns:\n  id - the unique id used to save the configuration.\n   */\n  saveConfiguration: function(room, config, success_cb, error_cb) {\n    var conf, i, iq, len, stanza;\n    iq = strophe_js.$iq({\n      to: room,\n      type: \"set\"\n    }).c(\"query\", {\n      xmlns: strophe_js.Strophe.NS.MUC_OWNER\n    });\n    if (typeof strophe_js.Strophe.x !== \"undefined\" && typeof strophe_js.Strophe.x.Form !== \"undefined\" && config instanceof strophe_js.Strophe.x.Form) {\n      config.type = \"submit\";\n      iq.cnode(config.toXML());\n    } else {\n      iq.c(\"x\", {\n        xmlns: \"jabber:x:data\",\n        type: \"submit\"\n      });\n      for (i = 0, len = config.length; i < len; i++) {\n        conf = config[i];\n        iq.cnode(conf).up();\n      }\n    }\n    stanza = iq.tree();\n    return this._connection.sendIQ(stanza, success_cb, error_cb);\n  },\n\n  /*Function\n  Parameters:\n  (String) room - The multi-user chat room name.\n  Returns:\n  id - the unique id used to create the chat room.\n   */\n  createInstantRoom: function(room, success_cb, error_cb) {\n    var roomiq;\n    roomiq = strophe_js.$iq({\n      to: room,\n      type: \"set\"\n    }).c(\"query\", {\n      xmlns: strophe_js.Strophe.NS.MUC_OWNER\n    }).c(\"x\", {\n      xmlns: \"jabber:x:data\",\n      type: \"submit\"\n    });\n    return this._connection.sendIQ(roomiq.tree(), success_cb, error_cb);\n  },\n\n  /*Function\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (Object) config - the configuration. ex: {\"muc#roomconfig_publicroom\": \"0\", \"muc#roomconfig_persistentroom\": \"1\"}\n  Returns:\n  id - the unique id used to create the chat room.\n   */\n  createConfiguredRoom: function(room, config, success_cb, error_cb) {\n    var k, roomiq, v;\n    roomiq = strophe_js.$iq({\n      to: room,\n      type: \"set\"\n    }).c(\"query\", {\n      xmlns: strophe_js.Strophe.NS.MUC_OWNER\n    }).c(\"x\", {\n      xmlns: \"jabber:x:data\",\n      type: \"submit\"\n    });\n    roomiq.c('field', {\n      'var': 'FORM_TYPE'\n    }).c('value').t('http://jabber.org/protocol/muc#roomconfig').up().up();\n    for (k in config) {\n      if (!hasProp.call(config, k)) continue;\n      v = config[k];\n      roomiq.c('field', {\n        'var': k\n      }).c('value').t(v).up().up();\n    }\n    return this._connection.sendIQ(roomiq.tree(), success_cb, error_cb);\n  },\n\n  /*Function\n  Set the topic of the chat room.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (String) topic - Topic message.\n   */\n  setTopic: function(room, topic) {\n    var msg;\n    msg = strophe_js.$msg({\n      to: room,\n      from: this._connection.jid,\n      type: \"groupchat\"\n    }).c(\"subject\", {\n      xmlns: \"jabber:client\"\n    }).t(topic);\n    return this._connection.send(msg.tree());\n  },\n\n  /*Function\n  Internal Function that Changes the role or affiliation of a member\n  of a MUC room. This function is used by modifyRole and modifyAffiliation.\n  The modification can only be done by a room moderator. An error will be\n  returned if the user doesn't have permission.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (Object) item - Object with nick and role or jid and affiliation attribute\n  (String) reason - Optional reason for the change.\n  (Function) handler_cb - Optional callback for success\n  (Function) error_cb - Optional callback for error\n  Returns:\n  iq - the id of the mode change request.\n   */\n  _modifyPrivilege: function(room, item, reason, handler_cb, error_cb) {\n    var iq;\n    iq = strophe_js.$iq({\n      to: room,\n      type: \"set\"\n    }).c(\"query\", {\n      xmlns: strophe_js.Strophe.NS.MUC_ADMIN\n    }).cnode(item.node);\n    if (reason != null) {\n      iq.c(\"reason\", reason);\n    }\n    return this._connection.sendIQ(iq.tree(), handler_cb, error_cb);\n  },\n\n  /*Function\n  Changes the role of a member of a MUC room.\n  The modification can only be done by a room moderator. An error will be\n  returned if the user doesn't have permission.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (String) nick - The nick name of the user to modify.\n  (String) role - The new role of the user.\n  (String) affiliation - The new affiliation of the user.\n  (String) reason - Optional reason for the change.\n  (Function) handler_cb - Optional callback for success\n  (Function) error_cb - Optional callback for error\n  Returns:\n  iq - the id of the mode change request.\n   */\n  modifyRole: function(room, nick, role, reason, handler_cb, error_cb) {\n    var item;\n    item = strophe_js.$build(\"item\", {\n      nick: nick,\n      role: role\n    });\n    return this._modifyPrivilege(room, item, reason, handler_cb, error_cb);\n  },\n  kick: function(room, nick, reason, handler_cb, error_cb) {\n    return this.modifyRole(room, nick, 'none', reason, handler_cb, error_cb);\n  },\n  voice: function(room, nick, reason, handler_cb, error_cb) {\n    return this.modifyRole(room, nick, 'participant', reason, handler_cb, error_cb);\n  },\n  mute: function(room, nick, reason, handler_cb, error_cb) {\n    return this.modifyRole(room, nick, 'visitor', reason, handler_cb, error_cb);\n  },\n  op: function(room, nick, reason, handler_cb, error_cb) {\n    return this.modifyRole(room, nick, 'moderator', reason, handler_cb, error_cb);\n  },\n  deop: function(room, nick, reason, handler_cb, error_cb) {\n    return this.modifyRole(room, nick, 'participant', reason, handler_cb, error_cb);\n  },\n\n  /*Function\n  Changes the affiliation of a member of a MUC room.\n  The modification can only be done by a room moderator. An error will be\n  returned if the user doesn't have permission.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (String) jid  - The jid of the user to modify.\n  (String) affiliation - The new affiliation of the user.\n  (String) reason - Optional reason for the change.\n  (Function) handler_cb - Optional callback for success\n  (Function) error_cb - Optional callback for error\n  Returns:\n  iq - the id of the mode change request.\n   */\n  modifyAffiliation: function(room, jid, affiliation, reason, handler_cb, error_cb) {\n    var item;\n    item = strophe_js.$build(\"item\", {\n      jid: jid,\n      affiliation: affiliation\n    });\n    return this._modifyPrivilege(room, item, reason, handler_cb, error_cb);\n  },\n  ban: function(room, jid, reason, handler_cb, error_cb) {\n    return this.modifyAffiliation(room, jid, 'outcast', reason, handler_cb, error_cb);\n  },\n  member: function(room, jid, reason, handler_cb, error_cb) {\n    return this.modifyAffiliation(room, jid, 'member', reason, handler_cb, error_cb);\n  },\n  revoke: function(room, jid, reason, handler_cb, error_cb) {\n    return this.modifyAffiliation(room, jid, 'none', reason, handler_cb, error_cb);\n  },\n  owner: function(room, jid, reason, handler_cb, error_cb) {\n    return this.modifyAffiliation(room, jid, 'owner', reason, handler_cb, error_cb);\n  },\n  admin: function(room, jid, reason, handler_cb, error_cb) {\n    return this.modifyAffiliation(room, jid, 'admin', reason, handler_cb, error_cb);\n  },\n\n  /*Function\n  Change the current users nick name.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (String) user - The new nick name.\n   */\n  changeNick: function(room, user) {\n    var presence, room_nick;\n    room_nick = this.test_append_nick(room, user);\n    presence = strophe_js.$pres({\n      from: this._connection.jid,\n      to: room_nick,\n      id: this._connection.getUniqueId()\n    });\n    return this._connection.send(presence.tree());\n  },\n\n  /*Function\n  Change the current users status.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (String) user - The current nick.\n  (String) show - The new show-text.\n  (String) status - The new status-text.\n   */\n  setStatus: function(room, user, show, status) {\n    var presence, room_nick;\n    room_nick = this.test_append_nick(room, user);\n    presence = strophe_js.$pres({\n      from: this._connection.jid,\n      to: room_nick\n    });\n    if (show != null) {\n      presence.c('show', show).up();\n    }\n    if (status != null) {\n      presence.c('status', status);\n    }\n    return this._connection.send(presence.tree());\n  },\n\n  /*Function\n  Registering with a room.\n  @see http://xmpp.org/extensions/xep-0045.html#register\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (Function) handle_cb - Function to call for room list return.\n  (Function) error_cb - Function to call on error.\n   */\n  registrationRequest: function(room, handle_cb, error_cb) {\n    var iq;\n    iq = strophe_js.$iq({\n      to: room,\n      from: this._connection.jid,\n      type: \"get\"\n    }).c(\"query\", {\n      xmlns: strophe_js.Strophe.NS.MUC_REGISTER\n    });\n    return this._connection.sendIQ(iq, function(stanza) {\n      var $field, $fields, field, fields, i, len, length;\n      $fields = stanza.getElementsByTagName('field');\n      length = $fields.length;\n      fields = {\n        required: [],\n        optional: []\n      };\n      for (i = 0, len = $fields.length; i < len; i++) {\n        $field = $fields[i];\n        field = {\n          \"var\": $field.getAttribute('var'),\n          label: $field.getAttribute('label'),\n          type: $field.getAttribute('type')\n        };\n        if ($field.getElementsByTagName('required').length > 0) {\n          fields.required.push(field);\n        } else {\n          fields.optional.push(field);\n        }\n      }\n      return handle_cb(fields);\n    }, error_cb);\n  },\n\n  /*Function\n  Submits registration form.\n  Parameters:\n  (String) room - The multi-user chat room name.\n  (Function) handle_cb - Function to call for room list return.\n  (Function) error_cb - Function to call on error.\n   */\n  submitRegistrationForm: function(room, fields, handle_cb, error_cb) {\n    var iq, key, val;\n    iq = strophe_js.$iq({\n      to: room,\n      type: \"set\"\n    }).c(\"query\", {\n      xmlns: strophe_js.Strophe.NS.MUC_REGISTER\n    });\n    iq.c(\"x\", {\n      xmlns: \"jabber:x:data\",\n      type: \"submit\"\n    });\n    iq.c('field', {\n      'var': 'FORM_TYPE'\n    }).c('value').t('http://jabber.org/protocol/muc#register').up().up();\n    for (key in fields) {\n      val = fields[key];\n      iq.c('field', {\n        'var': key\n      }).c('value').t(val).up().up();\n    }\n    return this._connection.sendIQ(iq, handle_cb, error_cb);\n  },\n\n  /*Function\n  List all chat room available on a server.\n  Parameters:\n  (String) server - name of chat server.\n  (String) handle_cb - Function to call for room list return.\n  (String) error_cb - Function to call on error.\n   */\n  listRooms: function(server, handle_cb, error_cb) {\n    var iq;\n    iq = strophe_js.$iq({\n      to: server,\n      from: this._connection.jid,\n      type: \"get\"\n    }).c(\"query\", {\n      xmlns: strophe_js.Strophe.NS.DISCO_ITEMS\n    });\n    return this._connection.sendIQ(iq, handle_cb, error_cb);\n  },\n  test_append_nick: function(room, nick) {\n    var domain, node;\n    node = strophe_js.Strophe.escapeNode(strophe_js.Strophe.getNodeFromJid(room));\n    domain = strophe_js.Strophe.getDomainFromJid(room);\n    return node + \"@\" + domain + (nick != null ? \"/\" + nick : \"\");\n  }\n});\n\nXmppRoom = (function() {\n  function XmppRoom(client, name, nick1, password1) {\n    this.client = client;\n    this.name = name;\n    this.nick = nick1;\n    this.password = password1;\n    this._roomRosterHandler = bind(this._roomRosterHandler, this);\n    this._addOccupant = bind(this._addOccupant, this);\n    this.roster = {};\n    this._message_handlers = {};\n    this._presence_handlers = {};\n    this._roster_handlers = {};\n    this._handler_ids = 0;\n    if (this.client.muc) {\n      this.client = this.client.muc;\n    }\n    this.name = strophe_js.Strophe.getBareJidFromJid(this.name);\n    this.addHandler('presence', this._roomRosterHandler);\n  }\n\n  XmppRoom.prototype.join = function(msg_handler_cb, pres_handler_cb, roster_cb) {\n    return this.client.join(this.name, this.nick, msg_handler_cb, pres_handler_cb, roster_cb, this.password);\n  };\n\n  XmppRoom.prototype.leave = function(handler_cb, message) {\n    this.client.leave(this.name, this.nick, handler_cb, message);\n    return delete this.client.rooms[this.name];\n  };\n\n  XmppRoom.prototype.message = function(nick, message, html_message, type) {\n    return this.client.message(this.name, nick, message, html_message, type);\n  };\n\n  XmppRoom.prototype.groupchat = function(message, html_message) {\n    return this.client.groupchat(this.name, message, html_message);\n  };\n\n  XmppRoom.prototype.invite = function(receiver, reason) {\n    return this.client.invite(this.name, receiver, reason);\n  };\n\n  XmppRoom.prototype.multipleInvites = function(receivers, reason) {\n    return this.client.invite(this.name, receivers, reason);\n  };\n\n  XmppRoom.prototype.directInvite = function(receiver, reason) {\n    return this.client.directInvite(this.name, receiver, reason, this.password);\n  };\n\n  XmppRoom.prototype.configure = function(handler_cb) {\n    return this.client.configure(this.name, handler_cb);\n  };\n\n  XmppRoom.prototype.cancelConfigure = function() {\n    return this.client.cancelConfigure(this.name);\n  };\n\n  XmppRoom.prototype.saveConfiguration = function(config) {\n    return this.client.saveConfiguration(this.name, config);\n  };\n\n  XmppRoom.prototype.queryOccupants = function(success_cb, error_cb) {\n    return this.client.queryOccupants(this.name, success_cb, error_cb);\n  };\n\n  XmppRoom.prototype.setTopic = function(topic) {\n    return this.client.setTopic(this.name, topic);\n  };\n\n  XmppRoom.prototype.modifyRole = function(nick, role, reason, success_cb, error_cb) {\n    return this.client.modifyRole(this.name, nick, role, reason, success_cb, error_cb);\n  };\n\n  XmppRoom.prototype.kick = function(nick, reason, handler_cb, error_cb) {\n    return this.client.kick(this.name, nick, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.voice = function(nick, reason, handler_cb, error_cb) {\n    return this.client.voice(this.name, nick, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.mute = function(nick, reason, handler_cb, error_cb) {\n    return this.client.mute(this.name, nick, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.op = function(nick, reason, handler_cb, error_cb) {\n    return this.client.op(this.name, nick, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.deop = function(nick, reason, handler_cb, error_cb) {\n    return this.client.deop(this.name, nick, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.modifyAffiliation = function(jid, affiliation, reason, success_cb, error_cb) {\n    return this.client.modifyAffiliation(this.name, jid, affiliation, reason, success_cb, error_cb);\n  };\n\n  XmppRoom.prototype.ban = function(jid, reason, handler_cb, error_cb) {\n    return this.client.ban(this.name, jid, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.member = function(jid, reason, handler_cb, error_cb) {\n    return this.client.member(this.name, jid, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.revoke = function(jid, reason, handler_cb, error_cb) {\n    return this.client.revoke(this.name, jid, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.owner = function(jid, reason, handler_cb, error_cb) {\n    return this.client.owner(this.name, jid, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.admin = function(jid, reason, handler_cb, error_cb) {\n    return this.client.admin(this.name, jid, reason, handler_cb, error_cb);\n  };\n\n  XmppRoom.prototype.changeNick = function(nick1) {\n    this.nick = nick1;\n    return this.client.changeNick(this.name, nick);\n  };\n\n  XmppRoom.prototype.setStatus = function(show, status) {\n    return this.client.setStatus(this.name, this.nick, show, status);\n  };\n\n\n  /*Function\n  Adds a handler to the MUC room.\n    Parameters:\n  (String) handler_type - 'message', 'presence' or 'roster'.\n  (Function) handler - The handler function.\n  Returns:\n  id - the id of handler.\n   */\n\n  XmppRoom.prototype.addHandler = function(handler_type, handler) {\n    var id;\n    id = this._handler_ids++;\n    switch (handler_type) {\n      case 'presence':\n        this._presence_handlers[id] = handler;\n        break;\n      case 'message':\n        this._message_handlers[id] = handler;\n        break;\n      case 'roster':\n        this._roster_handlers[id] = handler;\n        break;\n      default:\n        this._handler_ids--;\n        return null;\n    }\n    return id;\n  };\n\n\n  /*Function\n  Removes a handler from the MUC room.\n  This function takes ONLY ids returned by the addHandler function\n  of this room. passing handler ids returned by connection.addHandler\n  may brake things!\n    Parameters:\n  (number) id - the id of the handler\n   */\n\n  XmppRoom.prototype.removeHandler = function(id) {\n    delete this._presence_handlers[id];\n    delete this._message_handlers[id];\n    return delete this._roster_handlers[id];\n  };\n\n\n  /*Function\n  Creates and adds an Occupant to the Room Roster.\n    Parameters:\n  (Object) data - the data the Occupant is filled with\n  Returns:\n  occ - the created Occupant.\n   */\n\n  XmppRoom.prototype._addOccupant = function(data) {\n    var occ;\n    occ = new Occupant(data, this);\n    this.roster[occ.nick] = occ;\n    return occ;\n  };\n\n\n  /*Function\n  The standard handler that managed the Room Roster.\n    Parameters:\n  (Object) pres - the presence stanza containing user information\n   */\n\n  XmppRoom.prototype._roomRosterHandler = function(pres) {\n    var data, handler, id, newnick, nick, ref;\n    data = XmppRoom._parsePresence(pres);\n    nick = data.nick;\n    newnick = data.newnick || null;\n    switch (data.type) {\n      case 'error':\n        return true;\n      case 'unavailable':\n        if (newnick) {\n          data.nick = newnick;\n          if (this.roster[nick] && this.roster[newnick]) {\n            this.roster[nick].update(this.roster[newnick]);\n            this.roster[newnick] = this.roster[nick];\n          }\n          if (this.roster[nick] && !this.roster[newnick]) {\n            this.roster[newnick] = this.roster[nick].update(data);\n          }\n        }\n        delete this.roster[nick];\n        break;\n      default:\n        if (this.roster[nick]) {\n          this.roster[nick].update(data);\n        } else {\n          this._addOccupant(data);\n        }\n    }\n    ref = this._roster_handlers;\n    for (id in ref) {\n      handler = ref[id];\n      if (!handler(this.roster, this)) {\n        delete this._roster_handlers[id];\n      }\n    }\n    return true;\n  };\n\n\n  /*Function\n  Parses a presence stanza\n    Parameters:\n  (Object) data - the data extracted from the presence stanza\n   */\n\n  XmppRoom._parsePresence = function(pres) {\n    var c, c2, data, i, j, len, len1, ref, ref1, ref2;\n    data = {};\n    data.nick = strophe_js.Strophe.getResourceFromJid(pres.getAttribute(\"from\"));\n    data.type = pres.getAttribute(\"type\");\n    data.states = [];\n    ref = pres.childNodes;\n    for (i = 0, len = ref.length; i < len; i++) {\n      c = ref[i];\n      switch (c.nodeName) {\n        case \"error\":\n          data.errorcode = c.getAttribute(\"code\");\n          data.error = (ref1 = c.childNodes[0]) != null ? ref1.nodeName : void 0;\n          break;\n        case \"status\":\n          data.status = c.textContent || null;\n          break;\n        case \"show\":\n          data.show = c.textContent || null;\n          break;\n        case \"x\":\n          if (c.getAttribute(\"xmlns\") === strophe_js.Strophe.NS.MUC_USER) {\n            ref2 = c.childNodes;\n            for (j = 0, len1 = ref2.length; j < len1; j++) {\n              c2 = ref2[j];\n              switch (c2.nodeName) {\n                case \"item\":\n                  data.affiliation = c2.getAttribute(\"affiliation\");\n                  data.role = c2.getAttribute(\"role\");\n                  data.jid = c2.getAttribute(\"jid\");\n                  data.newnick = c2.getAttribute(\"nick\");\n                  break;\n                case \"status\":\n                  if (c2.getAttribute(\"code\")) {\n                    data.states.push(c2.getAttribute(\"code\"));\n                  }\n              }\n            }\n          }\n      }\n    }\n    return data;\n  };\n\n  return XmppRoom;\n\n})();\n\nRoomConfig = (function() {\n  function RoomConfig(info) {\n    this.parse = bind(this.parse, this);\n    if (info != null) {\n      this.parse(info);\n    }\n  }\n\n  RoomConfig.prototype.parse = function(result) {\n    var attr, attrs, child, field, i, identity, j, l, len, len1, len2, query, ref;\n    query = result.getElementsByTagName(\"query\")[0].childNodes;\n    this.identities = [];\n    this.features = [];\n    this.x = [];\n    for (i = 0, len = query.length; i < len; i++) {\n      child = query[i];\n      attrs = child.attributes;\n      switch (child.nodeName) {\n        case \"identity\":\n          identity = {};\n          for (j = 0, len1 = attrs.length; j < len1; j++) {\n            attr = attrs[j];\n            identity[attr.name] = attr.textContent;\n          }\n          this.identities.push(identity);\n          break;\n        case \"feature\":\n          this.features.push(child.getAttribute(\"var\"));\n          break;\n        case \"x\":\n          if ((!child.childNodes[0].getAttribute(\"var\") === 'FORM_TYPE') || (!child.childNodes[0].getAttribute(\"type\") === 'hidden')) {\n            break;\n          }\n          ref = child.childNodes;\n          for (l = 0, len2 = ref.length; l < len2; l++) {\n            field = ref[l];\n            if (!field.attributes.type) {\n              this.x.push({\n                \"var\": field.getAttribute(\"var\"),\n                label: field.getAttribute(\"label\") || \"\",\n                value: field.firstChild.textContent || \"\"\n              });\n            }\n          }\n      }\n    }\n    return {\n      \"identities\": this.identities,\n      \"features\": this.features,\n      \"x\": this.x\n    };\n  };\n\n  return RoomConfig;\n\n})();\n\nOccupant = (function() {\n  function Occupant(data, room1) {\n    this.room = room1;\n    this.update = bind(this.update, this);\n    this.admin = bind(this.admin, this);\n    this.owner = bind(this.owner, this);\n    this.revoke = bind(this.revoke, this);\n    this.member = bind(this.member, this);\n    this.ban = bind(this.ban, this);\n    this.modifyAffiliation = bind(this.modifyAffiliation, this);\n    this.deop = bind(this.deop, this);\n    this.op = bind(this.op, this);\n    this.mute = bind(this.mute, this);\n    this.voice = bind(this.voice, this);\n    this.kick = bind(this.kick, this);\n    this.modifyRole = bind(this.modifyRole, this);\n    this.update(data);\n  }\n\n  Occupant.prototype.modifyRole = function(role, reason, success_cb, error_cb) {\n    return this.room.modifyRole(this.nick, role, reason, success_cb, error_cb);\n  };\n\n  Occupant.prototype.kick = function(reason, handler_cb, error_cb) {\n    return this.room.kick(this.nick, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.voice = function(reason, handler_cb, error_cb) {\n    return this.room.voice(this.nick, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.mute = function(reason, handler_cb, error_cb) {\n    return this.room.mute(this.nick, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.op = function(reason, handler_cb, error_cb) {\n    return this.room.op(this.nick, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.deop = function(reason, handler_cb, error_cb) {\n    return this.room.deop(this.nick, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.modifyAffiliation = function(affiliation, reason, success_cb, error_cb) {\n    return this.room.modifyAffiliation(this.jid, affiliation, reason, success_cb, error_cb);\n  };\n\n  Occupant.prototype.ban = function(reason, handler_cb, error_cb) {\n    return this.room.ban(this.jid, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.member = function(reason, handler_cb, error_cb) {\n    return this.room.member(this.jid, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.revoke = function(reason, handler_cb, error_cb) {\n    return this.room.revoke(this.jid, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.owner = function(reason, handler_cb, error_cb) {\n    return this.room.owner(this.jid, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.admin = function(reason, handler_cb, error_cb) {\n    return this.room.admin(this.jid, reason, handler_cb, error_cb);\n  };\n\n  Occupant.prototype.update = function(data) {\n    this.nick = data.nick || null;\n    this.affiliation = data.affiliation || null;\n    this.role = data.role || null;\n    this.jid = data.jid || null;\n    this.status = data.status || null;\n    this.show = data.show || null;\n    return this;\n  };\n\n  return Occupant;\n\n})();\n\n})));\n","//import * as Strophe2 from 'strophe.js';\nimport {Strophe as Strophe2} from './strophe.muc.js';\n\n\nwindow.addEventListener('load', waitForElement, 'test');\n//document.addEventListener('DOMContentLoaded', bot_connect, false);\n\nfunction waitForElement()\n{\n        bot_connect();\n}\nfunction bot_connect() \n{\n    var connection = new Strophe.Connection('http://localhost:5280/http-bind/');\n    connection.connect('rasabot@localhost','rasabot', onConnect);\n    var a = connection.muc.init(connection);\n    connection.muc.join(\"chat@localhost\",  \"rasabot\", room_msg_handler, room_pres_handler, room_pres_handler);\n    console.log('hgg',a);\n}\n\nfunction onConnect(status)\n{\n\n    if (status == Strophe.Status.CONNECTING) \n    {\n        console.log('Strophe is connecting.');\n    }else if (status == Strophe.Status.CONNFAIL) \n    {\n        console.log('Strophe failed to connect.');\n    }else if (status == Strophe.Status.DISCONNECTING) \n    {\n        console.log('Strophe is disconnecting.');\n    }else if (status == Strophe.Status.DISCONNECTED) \n    {\n        console.log('Strophe is disconnected.');\n    }else if (status == Strophe.Status.CONNECTED) \n    {\n        console.log('Strophe is connected.');\n        console.log(connection.jid);\n    }\n\n}\n\nfunction room_msg_handler(a, b, c) {\n    console.log('MUC: room_msg_handler');\n    return true;\n  }\n  \n  function room_pres_handler(a, b, c) {\n    console.log('MUC: room_pres_handler');\n    return true;\n  }\n\n  ","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}