{"id":"../node_modules/react-mosaic-component/lib/util/BoundingBox.js","dependencies":[{"name":"/home/giuseppe/Scrivania/TesiDiana/node_modules/react-mosaic-component/lib/util/BoundingBox.js.map","includedInParent":true,"mtime":1695993895621},{"name":"/home/giuseppe/Scrivania/TesiDiana/node_modules/react-mosaic-component/src/util/BoundingBox.ts","includedInParent":true,"mtime":1695993898243},{"name":"/home/giuseppe/Scrivania/TesiDiana/package.json","includedInParent":true,"mtime":1698312122672},{"name":"/home/giuseppe/Scrivania/TesiDiana/node_modules/react-mosaic-component/package.json","includedInParent":true,"mtime":1695993894381},{"name":"./assertNever","loc":{"line":15,"column":28,"index":518},"parent":"/home/giuseppe/Scrivania/TesiDiana/node_modules/react-mosaic-component/lib/util/BoundingBox.js","resolved":"/home/giuseppe/Scrivania/TesiDiana/node_modules/react-mosaic-component/lib/util/assertNever.js"}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoundingBox = void 0;\nvar assertNever_1 = require(\"./assertNever\");\nvar BoundingBox;\n(function (BoundingBox) {\n    function empty() {\n        return {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        };\n    }\n    BoundingBox.empty = empty;\n    function split(boundingBox, relativeSplitPercentage, direction) {\n        var absolutePercentage = getAbsoluteSplitPercentage(boundingBox, relativeSplitPercentage, direction);\n        if (direction === 'column') {\n            return {\n                first: __assign(__assign({}, boundingBox), { bottom: 100 - absolutePercentage }),\n                second: __assign(__assign({}, boundingBox), { top: absolutePercentage }),\n            };\n        }\n        else if (direction === 'row') {\n            return {\n                first: __assign(__assign({}, boundingBox), { right: 100 - absolutePercentage }),\n                second: __assign(__assign({}, boundingBox), { left: absolutePercentage }),\n            };\n        }\n        else {\n            return assertNever_1.assertNever(direction);\n        }\n    }\n    BoundingBox.split = split;\n    function getAbsoluteSplitPercentage(boundingBox, relativeSplitPercentage, direction) {\n        var top = boundingBox.top, right = boundingBox.right, bottom = boundingBox.bottom, left = boundingBox.left;\n        if (direction === 'column') {\n            var height = 100 - top - bottom;\n            return (height * relativeSplitPercentage) / 100 + top;\n        }\n        else if (direction === 'row') {\n            var width = 100 - right - left;\n            return (width * relativeSplitPercentage) / 100 + left;\n        }\n        else {\n            return assertNever_1.assertNever(direction);\n        }\n    }\n    BoundingBox.getAbsoluteSplitPercentage = getAbsoluteSplitPercentage;\n    function getRelativeSplitPercentage(boundingBox, absoluteSplitPercentage, direction) {\n        var top = boundingBox.top, right = boundingBox.right, bottom = boundingBox.bottom, left = boundingBox.left;\n        if (direction === 'column') {\n            var height = 100 - top - bottom;\n            return ((absoluteSplitPercentage - top) / height) * 100;\n        }\n        else if (direction === 'row') {\n            var width = 100 - right - left;\n            return ((absoluteSplitPercentage - left) / width) * 100;\n        }\n        else {\n            return assertNever_1.assertNever(direction);\n        }\n    }\n    BoundingBox.getRelativeSplitPercentage = getRelativeSplitPercentage;\n    function asStyles(_a) {\n        var top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left;\n        return {\n            top: top + \"%\",\n            right: right + \"%\",\n            bottom: bottom + \"%\",\n            left: left + \"%\",\n        };\n    }\n    BoundingBox.asStyles = asStyles;\n})(BoundingBox = exports.BoundingBox || (exports.BoundingBox = {}));\n"},"sourceMaps":{"js":{"version":3,"file":"BoundingBox.js","sourceRoot":"","sources":["../../src/util/BoundingBox.ts"],"names":[],"mappings":"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","sourcesContent":["import { MosaicDirection } from '../types';\nimport { assertNever } from './assertNever';\n\n// Each of these values is like the CSS property of the same name in percentages\nexport interface BoundingBox {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\nexport namespace BoundingBox {\n  export function empty() {\n    return {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    };\n  }\n\n  export interface Split {\n    first: BoundingBox;\n    second: BoundingBox;\n  }\n\n  export interface Styles {\n    top: string;\n    right: string;\n    bottom: string;\n    left: string;\n  }\n\n  export function split(boundingBox: BoundingBox, relativeSplitPercentage: number, direction: MosaicDirection): Split {\n    const absolutePercentage = getAbsoluteSplitPercentage(boundingBox, relativeSplitPercentage, direction);\n    if (direction === 'column') {\n      return {\n        first: {\n          ...boundingBox,\n          bottom: 100 - absolutePercentage,\n        },\n        second: {\n          ...boundingBox,\n          top: absolutePercentage,\n        },\n      };\n    } else if (direction === 'row') {\n      return {\n        first: {\n          ...boundingBox,\n          right: 100 - absolutePercentage,\n        },\n        second: {\n          ...boundingBox,\n          left: absolutePercentage,\n        },\n      };\n    } else {\n      return assertNever(direction);\n    }\n  }\n\n  export function getAbsoluteSplitPercentage(\n    boundingBox: BoundingBox,\n    relativeSplitPercentage: number,\n    direction: MosaicDirection,\n  ): number {\n    const { top, right, bottom, left } = boundingBox;\n    if (direction === 'column') {\n      const height = 100 - top - bottom;\n      return (height * relativeSplitPercentage) / 100 + top;\n    } else if (direction === 'row') {\n      const width = 100 - right - left;\n      return (width * relativeSplitPercentage) / 100 + left;\n    } else {\n      return assertNever(direction);\n    }\n  }\n\n  export function getRelativeSplitPercentage(\n    boundingBox: BoundingBox,\n    absoluteSplitPercentage: number,\n    direction: MosaicDirection,\n  ): number {\n    const { top, right, bottom, left } = boundingBox;\n    if (direction === 'column') {\n      const height = 100 - top - bottom;\n      return ((absoluteSplitPercentage - top) / height) * 100;\n    } else if (direction === 'row') {\n      const width = 100 - right - left;\n      return ((absoluteSplitPercentage - left) / width) * 100;\n    } else {\n      return assertNever(direction);\n    }\n  }\n\n  export function asStyles({ top, right, bottom, left }: BoundingBox): Styles {\n    return {\n      top: `${top}%`,\n      right: `${right}%`,\n      bottom: `${bottom}%`,\n      left: `${left}%`,\n    };\n  }\n}\n"]}},"error":null,"hash":"9243c95972fad3f7b8cf89fe753226cb","cacheData":{"env":{}}}